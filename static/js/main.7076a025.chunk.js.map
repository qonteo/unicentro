{"version":3,"sources":["helpers/fetch.js","types/types.js","action/auth.js","interfaz/ui/utils/auth/Header.js","interfaz/ui/auth/ChooseGroup.js","interfaz/pages/auth/LoginScreen.js","hooks/useForm.js","interfaz/pages/auth/RegisterScreen.js","action/person.js","interfaz/ui/grafics/GraficBar.js","interfaz/ui/layout/Footer.js","interfaz/ui/layout/Header.js","interfaz/ui/layout/SideBar.js","interfaz/ui/layout/Main.js","helpers/calculo.js","interfaz/ui/utils/boxes/BoxDate.js","interfaz/ui/utils/boxes/BoxDateRange.js","interfaz/ui/utils/boxes/BoxGender.js","interfaz/ui/utils/boxes/BoxWithOutPercent.js","interfaz/ui/utils/boxes/BoxWithPercent.js","helpers/roundbarchart.js","action/date.js","hooks/useDate.js","interfaz/ui/grafics/GraficLine.js","interfaz/ui/grafics/HeatMapDesktop.js","interfaz/ui/grafics/GraficCompare.js","hooks/useButtons.js","action/toten.js","helpers/exportPDF.js","interfaz/ui/exports/ButtonsExport.js","interfaz/pages/desktop/person/PersonScreen.js","routes/PublicRouter.js","routes/PrivateRouter.js","hooks/useButtonsReport.js","action/trazabilidad.js","interfaz/pages/desktop/person/TrazibilidadScreen.js","interfaz/pages/mobile/MobileScreen.js","interfaz/pages/desktop/person/EspecificoScreen.js","hooks/useDateReport.js","interfaz/pages/desktop/person/OperacionalScreen.js","interfaz/pages/desktop/reports/ComercialScreenRerpot.js","interfaz/pages/desktop/reports/EjecutivoScreenReport.js","interfaz/pages/desktop/trazabilidad/SensorScreen.js","interfaz/pages/reports/ExportReport.js","routes/AppRouter.js","reducers/authReducer.js","reducers/dateReducer.js","reducers/personReducer.js","reducers/totenReducer.js","reducers/trazabilidadReducer.js","reducers/rootReducer.js","store/store.js","Qonteo.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","token","localStorage","getItem","url","fetch","headers","Authorization","body","JSON","stringify","fetchConToken","types","authChecking","authCheckingFinish","authStartLogin","authLogin","logout","authStartRegister","authLogout","initializePerson","changeDate","getToten","initialDataTrazabilidad","changeTrazabilidadByHour","resetDates","groupName","groupId","startLogin","user","dispatch","a","setItem","_id","toString","Date","getTime","login","uid","firstNames","lastName","email","phonenumber","portraitUrl","portrait_url","country","groups","city","isCheking","checkingStart","type","payload","Header","React","memo","children","className","src","alt","ChooseGroup","select","useRef","useDispatch","selectGroup","codeAndName","current","value","split","resp","json","window","location","href","ref","name","hidden","map","g","i","id","code","onClick","LoginScreen","useState","error","setError","isLoading","setIsLoading","isSelect","setIsSelect","countGroup","setcountGroup","campos","fields","setFields","target","useForm","password","inputChange","handleLogin","e","preventDefault","errors","Swal","fire","length","Error","onSubmit","onChange","placeholder","to","RegisterScreen","autoComplete","currentDate","format","currentSevenDay","subDays","lastMonth","subMonths","startPersonData","toten","getState","auth","filter","respMonth","hours","week","heatmap","heatmap_range","ageRanges","max_hour","max_hour_female","max_hour_male","max_week_day","max_week_day_female","max_week_day_male","month","max_month_day","max_month_day_female","max_month_day_male","monthPersonTotal","h","label","day","x","y","total","monthPersonMale","male","monthPersonFemale","female","hoursPersonTotal","time","hour","hoursPersonMale","hoursPersonFemale","weekPersonTotal","dow","weekPersonMale","weekPersonFemale","heatmapPersonTotal","heatmapPersonRange","color","range","rangePersonAges","getData","maxHourPersonTotal","maxHourPersonMale","maxHourPersonFemale","maxWeekPersonTotal","maxWeekPersonMale","maxWeekPersonFemale","maxMonthPersonTotal","maxMonthPersonMale","maxMonthPersonFemale","callAPIPersonForCurrentDate","dateFrom","dateTo","totem","setGraphicsInHourForCurrentDate","gender","capatalizeGender","charAt","toLocaleUpperCase","substr","setGraphicInJson","maxValue","setGraphicsInWeekForCurrentDate","setGraphicsInMonthForCurrentDate","setGraphicsInHeatmapForCurrentDate","rangeHeatmap","console","log","setGraphicsInRangeForCurrentDate","GraficBar","dtsetbg","optionbg","scalebg","title","labelop","legendbg","scltxtlbl","pl","pr","pb","pt","theme","labels","datasets","backgroundColor","borderWidth","options","cornerRadius","display","fontSize","fontColor","fontFamily","fontStyle","layout","padding","left","right","top","bottom","legend","position","boxWidth","tooltips","enabled","mode","callbacks","tooltipItem","datax","index","tooltipItems","yLabel","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","gridLines","scaleLabel","labelString","xAxes","Footer","SideBar","isOpen","setIsOpen","useLocation","openContent","parentNode","classList","toggle","document","querySelector","exact","activeClassName","pathname","includes","clear","Main","isSidebar","formatNumber","num","replace","porcentajepersona","resultado","Math","round","isNaN","Number","POSITIVE_INFINITY","BoxDate","count","percent","txtdetail","BoxDateRange","BoxGender","BoxWithOutPercent","BoxWithPercent","ChartJS","elements","Rectangle","prototype","draw","signX","signY","borderSkipped","ctx","this","_chart","vm","_view","config","horizontal","base","height","width","barSize","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","corner","moveTo","nextCornerId","radius","floor","x_tl","x_tr","y_tl","y_tr","x_bl","x_br","y_bl","y_br","lineTo","quadraticCurveTo","fill","stroke","setDate","start","startvalue","end","endvalue","useDate","startDatekey","endDatekey","date","useSelector","state","addDays","startDateValue","setStartDateValue","endDateValue","setEndDateValue","setStarDate","formatStartDate","formatEndDate","year","Intl","DateTimeFormat","yearEnd","monthEnd","dayEnd","isAfter","isEqual","setEndDate","yearStart","monthStart","dayStart","isBefore","DateHtml","selected","maxDate","showMonthYearPicker","GraficLine","sexo","lineColor","lineTension","borderDashOffset","borderJoinStyle","borderCapStyle","pointBorderWidth","pointHoverRadius","line","tension","point","drawBorder","zeroLineColor","zeroLineWidth","HeatMapDesktop","useEffect","tablehours","validarref","timeOut","setTimeout","parentElement","removeChild","remove","margin","svg","d3","attr","append","domain","call","r","myColor","rectContainer","selectAll","d","enter","bandwidth","style","text","_i","GraficCompare","reverse","titleFontSize","xPadding","yPadding","bodyFontSize","bodySpacing","sign","datasetIndex","stacked","useButtons","buttons","idReset","indexInicial","setdate","setenddate","Object","keys","isActive","setIsActive","setRangeDate","element","date_to","contains","filterDate","formatDateFilter","reset","ButtonsHtml","v","exportPDFPerson","grafic","startdate","enddate","elementPng","getElementById","doc","jsPDF","img","Image","addImage","img2","setFontSize","toPng","then","urlG","totemText","save","processExcel","interval","peticion","blob","exportExcel","filename","saveAs","downloadImageDesktop","datestart","urlg","linkHref","createElement","user_id","date_from","image","setAttribute","click","ButtonsExport","methodpdf","methodcsv","methodshare","PersonScreen","person","dateStartHourPerson","dateEndHourPerson","dateStartHourMalePerson","dateEndHourMalePerson","dateStartHourFemalePerson","dateEndHourFemalePerson","dateStartWeekPerson","dateEndWeekPerson","dateStartWeekMalePerson","dateEndWeekMalePerson","dateStartWeekFemalePerson","dateEndWeekFemalePerson","dateStartMonthPerson","dateEndMonthPerson","dateStartMonthMalePerson","dateEndMonthMalePerson","dateStartMonthFemalePerson","dateEndMonthFemalePerson","dateStartAgePerson","dateEndAgePerson","dateStartHeatMap","dateEndHeatMap","totemTotal","resources","tabs","setToten","DateHour","setStartDateHrTotal","setEndDateHrTotal","DateHourMale","setStartDateHrMale","setEndDateHrMale","DateHourFemale","setStartDateHrFemale","setEndDateHrFemale","DateWeek","setStartDateWkTotal","setEndDateWkTotal","DateWeekMale","setStartDateWkMale","setEndDateWkMale","DateWeekFemale","setStartDateWkFemale","setEndDateWkFemale","DateMonth","setStartDateMntTotal","setEndDateMntTotal","DateMonthMale","setStartDateMntMale","setEndDateMntMale","DateMonthFemale","setStartDateMntFemale","setEndDateMntFemale","DateAgeRanges","setStartDateAgeRg","setEndDateAgeRg","0","7","15","30","ButtonHourTotal","ButtonHourMale","ButtonHourFemale","ButtonWeekTotal","ButtonWeekMale","ButtonWeekFemale","60","90","ButtonMonthTotal","ButtonMonthMale","ButtonMonthFemale","ButtonHeatMap","ButtonRangeAges","resourcesFinal","changeTab","tagName","numToten","getAttribute","GroupName","selectedTabClassName","tab-index","t","today","yesterday","unknow","unknown","txtDay","PublicRoute","Component","component","isAuthenticated","rest","render","props","PrivateRouter","useButtonsReport","sectionValue","setSectionValue","getTrazabilidad","initTrazabilidad","setTrazabilidadByHour","TrazibilidadScreen","trazabilidad","todos","CCPN001","CCPN002","CCPN003","EquipoHtmlBtn","valueEquipo","cliente","visitantes","d7","d15","d30","GeneroHtmlBtn","valueGenero","setGenero","isPlay","setIsPlay","setTimeOut","agestart","ageend","all","timestart","timeend","countHours","setCountHours","counter","setCounter","numberHour","setNumberHour","countHrs","Array","_","twodBtn","threetBtn","add","dataf","canvas","getContext","setTransform","clearRect","forEach","c","arc","ratio","PI","font","fillText","labelX","labelY","startCounter","number","clearTimeout","n","dataHourFilter","newHour","setHour","backgroundImage","MobileScreen","maxHourPerson","maxWeekPerson","startDateHour","endDateHour","startDateHourMale","endDateHourMale","startDateHourFemale","endDateHourFemale","reload","obj","predicate","key","reduce","res","assign","EspecificoScreen","history","TipoHtmlBtn","valueTipo","equipoJson","PeriodoHtmlBtn","valuePeriodo","valueContacto","setContacto","useDateReport","age","setAge","setTime","isEspecific","setIsEspecific","generar","contact_type","report_type","resource","toLowerCase","age_from","age_to","time_from","time_to","newDate","dataFilter","reporte","push","btn","OperacionalScreen","toten1","toten2","imgExport","dataUrl","setTextColor","ComercialScreenReport","progress","setDataFilter","textGender","setTextGender","differenceInDay","setDifferenceInDay","differenceInDays","substring","p","generarPdf","elementGrilla","graficHour","graficWeek","graficMonth","urlGrilla","urlGHour","urlGWeek","urlGMonth","addPage","salida","output","formData","FormData","replaceAll","boxes","disabled","EjecutivoScreenReport","canvas2","canvas3","validsSensors","SensorScreen","useParams","ExportReport","AppRouter","path","isBrowser","initialState","initialize","init","totenReducer","action","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Qonteo","ReactDOM"],"mappings":"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","file":"static/js/main.7076a025.chunk.js","sourcesContent":["/**\n * @module Helpers\n */\n\nconst baseUrl=process.env.REACT_APP_API_URL;\n\n/**\n * Fecth sin token\n * @param {String} endpoint endpoint a consultar\n * @param {Object} data Data a recibir\n * @param {String} method metodo del fecth\n * @returns {Object} Data\n */\nconst fetchSinToken=(endpoint,data,method='GET')=>{\n    const token = localStorage.getItem('token-qonteo') || '';\n    const url=`${baseUrl}/${endpoint}`;\n    if(method==='GET'){\n        return fetch(url,{\n            headers:{\n                Authorization:token\n            }\n        })\n    }else{\n        return fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-Type': 'application/json'\n            },\n            body:JSON.stringify(data)\n        })\n    }\n}\n\n/**\n * Fecth con token\n * @param {String} endpoint endpoint a consultar\n * @param {Object} data Data a recibir\n * @param {String} method metodo del fecth\n * @returns {Object} Data \n */\nconst fetchConToken=(endpoint,data,method='GET')=>{\n    \n    const url=`${baseUrl}${endpoint}`;\n    const token=localStorage.getItem('token-qonteo') || '';\n    if(method==='GET'){\n        return fetch(url,{\n            method,\n            headers:{\n                'Authorization':token\n            }\n        })\n    }else if(method==='POST'){\n        return fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'Authorization':token\n            },\n            body: JSON.stringify(data)\n        })\n    }else{\n        return fetch(url,{\n            method:'POST',\n            headers:{\n                'Authorization':token\n            },\n            body:data \n        })\n    }\n}\n\n\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","export const types={\n    authChecking:'[auth] Checking login state',\n    authCheckingFinish: '[auth] Finish Checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    logout:'[Auth] Logout',\n    authStartRegister: '[auth] Start Register',\n    authLogout: '[auth] Logout',\n    initializePerson:'[Person] Initialize Data',\n    changeDate:'[Date] set New Date',\n    getToten:'[Toten] get Data Toten',\n    initialDataTrazabilidad:'[Trazabilidad] get data init Trazabilidad',\n    changeTrazabilidadByHour:'[Trazabilidad] set Data by hour',\n    resetDates:'[Date] reset Dates',\n    groupName: 'CO.UNIC.001',\n    groupId: '18622372'\n}","import { fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\n/**\n * @module Actions\n */\n\n/**\n * Action para empezar el login\n * @param {Object} param0 token de usuario y el usuario\n * @param {Number} groupId id del grupo\n * @returns callBack con el dispatch del login\n */\nconst startLogin = ({ token, user }, groupId) => {\n    return async (dispatch) => {\n\n        localStorage.setItem('token-qonteo', `bear ${token}`)\n        localStorage.setItem('id-user-qonteo', user._id)\n        localStorage.setItem('group-id-qonteo', groupId.toString())\n        localStorage.setItem('token-init-date-qonteo', new Date().getTime())\n        dispatch(login({\n            uid: user._id,\n            firstNames: user.firstNames,\n            lastName: user.lastName,\n            email: user.email,\n            phonenumber: user.phonenumber,\n            portraitUrl: user.portrait_url,\n            country: user.country,\n            groups: user.groups,\n            city: user.city,\n            isCheking: true\n        }))\n    }\n}\n\n/**\n * Action para empezar el cheking del login\n * @returns callback para logear o retornar al login\n */\nconst startChecking = (dispatch) => {\n    return async (dispatch) => {\n        const token = localStorage.getItem('token-qonteo') || '';\n\n        if (token.length > 0) {\n            try {\n                const resp = await (await fetchSinToken('token-renew')).json();\n                if (Object.keys(resp).length > 0) {\n                    const { user } = resp;\n                    dispatch(login({\n                        uid: user._id,\n                        firstNames: user.firstNames,\n                        lastName: user.lastName,\n                        email: user.email,\n                        phonenumber: user.phonenumber,\n                        portraitUrl: user.portrait_url,\n                        country: user.country,\n                        city: user.city,\n                        groups: user.groups,\n                        isCheking: true\n                    }))\n\n                }\n            } catch (error) {\n                dispatch(checkingStart())\n                console.log('error')\n            }\n        } else {\n            dispatch(checkingStart())\n        }\n    }\n}\nconst checkingStart = () => ({ type: types.authChecking })\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\n\n/**\n * Action para desloguear\n * @returns {Object} deslogueo\n */\nconst logout = () => ({ type: types.authChecking });\n\n/**\n * Aciton para loguear usuario\n * @param {Object} user Datos del usuario\n * @returns {Object} loguear\n */\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n})\n\n\nexport {\n    startLogin,\n    startChecking,\n    checkingStart,\n    checkingFinish,\n    logout\n}","import React from 'react'\n\nexport const Header = React.memo(({ children }) => {\n  \n    return (\n        <>\n            <div className=\"headerTop d-flex auth\">\n                <img className=\"imgSmall\" src=\"/assets/images/header/onlysoda.png\" alt=\"logosoda\" />\n                <h1 className=\"titleHeadAuth\">\n                    data <br/>\n                    street <br/>\n                    performance\n                </h1>\n            </div>\n            <div className=\"w-100 text-center logoMiddle\">\n            <img  src=\"/assets/images/header/soda.png\" />\n            <div className=\"groupIcons mtMedium\">\n                <img src=\"/assets/icons/camara.svg\"/>\n                <img src=\"/assets/icons/auto.svg\"/>\n                <img src=\"/assets/icons/person-inspect.svg\"/>\n            </div>\n            </div>\n            {children}\n        </>\n    )\n})\n","import React, { useRef } from 'react'\nimport {useDispatch } from 'react-redux'\nimport { startLogin } from '../../../action/auth';\nimport { fetchSinToken } from '../../../helpers/fetch';\nimport { types } from '../../../types/types';\n\nexport const ChooseGroup = ({groups,data}) => {\n    const select = useRef(null)\n    const dispatch = useDispatch();\n    const selectGroup=async ()=>{\n        const codeAndName=select.current.value.split(',');\n        if(codeAndName[0]===types.groupId){\n            const resp = await fetchSinToken('login', data, 'POST');\n            const body = await resp.json();\n            return dispatch(startLogin(body,codeAndName[0]));\n        }\n        window.location.href=`https://${codeAndName[1]}.qonteo.com/`;\n    }\n    return (\n        <div className=\"chooseGroup\">\n            <select ref={select} name=\"groupNumber\">\n                <option hidden >Seleccione un grupo</option>\n                {groups.map((g, i) => (\n                    <option key={i} value={[g.id,g.name]}>{g.code}</option>\n                ))}\n            </select>\n            <button className=\"btn choose\" onClick={selectGroup} >Ir</button>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { startLogin } from '../../../action/auth';\nimport { fetchSinToken } from '../../../helpers/fetch';\nimport { useForm } from '../../../hooks/useForm';\nimport { Header } from '../../ui/utils/auth/Header';\nimport { useDispatch } from 'react-redux';\nimport { ChooseGroup } from '../../ui/auth/ChooseGroup';\nimport Swal from 'sweetalert2';\nimport { types } from '../../../types/types';\nexport const LoginScreen = () => {\n    const [error, setError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isSelect, setIsSelect] = useState(false);\n    const [countGroup, setcountGroup] = useState([])\n\n    const dispatch = useDispatch();\n\n    const [fields, inputChange] = useForm({\n        email: '',\n        password: ''\n    })\n    const { email, password } = fields;\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        try {\n            if (email !== '' && password !== '') {\n                setIsLoading(true);\n                const resp = await (await fetchSinToken('login', fields, 'POST')).json();\n                if (!!resp.errors) {\n                    setIsLoading(false);\n                    return Swal.fire('Error', 'Las credenciales son invalidas', 'error');\n                };\n\n                const { user: { groups } } = resp\n                setIsLoading(false);\n                if (groups.length === 0 || !groups) return setError('No tiene acceso a este sitio')\n                if (groups.length === 1 && groups[0].name !== types.groupName) return setError('No pertenece a este grupo')\n                if (groups.length === 1 && groups[0].name === types.groupName) return dispatch(startLogin(resp));\n\n                setIsSelect(true);\n                setcountGroup(groups);\n                return;\n            }\n            Swal.fire('Error', 'Los campos no pueden estar vacios', 'error')\n\n        } catch (error) {\n            throw new Error('ocurrio un error al realizar la peticion')\n        }\n\n\n    }\n\n\n    return (\n        <Header>\n            <div className=\"contenedor\">\n                {!isSelect\n                    ? (\n                        <>\n                            <span className=\"error spaceTopSmall d-block text-center\">{error && error}</span>\n                            <form onSubmit={handleLogin} className=\"formLogin spaceBottomSmall\" >\n                                <input type=\"text\" name=\"email\"\n                                    onChange={inputChange}\n                                    placeholder=\"Correo electrónico\"\n                                    value={email}\n                                />\n                                <input type=\"password\"\n                                    name=\"password\"\n                                    onChange={inputChange}\n                                    placeholder=\"Contraseña\"\n                                    value={password}\n                                />\n                                <div className=\"forgotPass text-rigth\">\n                                    <span className=\"link \" >¿Olvidaste tu contraseña?</span>\n                                </div>\n\n                                <input type=\"submit\" value={isLoading ? 'Cargando...' : 'Iniciar Sesíon'} className=\"btn btn-login\" />\n                                <NavLink className=\"link mtSmall text-center w-100 d-block\" to=\"/auth/registrarse\">Registrarse</NavLink>\n                            </form>\n                        </>\n                    )\n                    :\n                    (\n                        <ChooseGroup groups={countGroup} data={fields} />\n                    )\n                }\n            </div>\n        </Header>\n    )\n}\n","import React, { useState } from 'react'\n\nexport const useForm = (campos) => {\n    const [fields, setFields] = useState(campos);\n    const changeValueInput=({target})=>{\n        setFields({\n            ...fields,\n            [target.name]:target.value\n        })\n    }\n\n\n\n    return [fields,changeValueInput]\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Header } from '../../ui/utils/auth/Header'\n\nexport const RegisterScreen = () => {\n    return (\n        <Header>\n             <div className=\"contenedor\">\n          \n\n          <form /* onSubmit={handleLogin} */ className=\"formLogin spaceBottomSmall\" >\n          <input type=\"text\"   name=\"rFirstname\" id=\"firstname\" autoComplete=\"off\" placeholder=\"Nombre\" />\n            <input type=\"text\"   name=\"rLastname\" id=\"lastname\" autoComplete=\"off\" placeholder=\"Apellidos\" />\n              <input type=\"text\" name=\"lEmail\"\n                 /*  onChange={inputChange } */\n                  id=\"correolog\"\n                  placeholder=\"Correo electrónico\"\n                /*   value={lEmail} */\n              />\n              <input type=\"password\"\n                  name=\"lPassword\"\n                 /*  onChange={inputChange} */\n                  id=\"contralog\"\n                  placeholder=\"Contraseña\"\n                 /*  value={lPassword} */\n\n              />\n            \n              <input type=\"submit\" value=\"Registrarse\" className=\"btn btn-login\" />\n              <NavLink className=\"link mtSmall text-center w-100 d-block\" to=\"/auth/login\">Ingresar</NavLink>\n          </form>\n      </div>\n        </Header>\n    )\n}\n","import { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport {subDays,format,subMonths,startOfMonth} from 'date-fns'\nimport Swal from 'sweetalert2'\n\n/**\n * @module Actions\n */\nconst currentDate = format(new Date(), 'yyyy-MM-dd');\nconst currentSevenDay = format(subDays(new Date(),7), 'yyyy-MM-dd');\nconst lastMonth = format(subMonths(new Date(),1), 'yyyy-MM-dd');\n\n\n/**\n * \n * @param {String} toten toten de los datos requeridos\n * @returns callback que guarda los datos en el state\n */\nconst startPersonData = (toten = '') => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        try {\n            const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n            const resp =await (await fetchConToken(`/get-person-graphics?heatmap_p=true&age_range_p=true&date_to=${currentDate}&date_from=${currentSevenDay}&resource=${toten}&group_id=${groupId}`)).json();\n            const respMonth =await (await fetchConToken(`/get-person-graphics?heatmap_p=true&age_range_p=true&date_from=${lastMonth}&date_to=${currentDate}&resource=${toten}&group_id=${groupId}`)).json();\n            const { hours, week, heatmap, heatmap_range, ageRanges, max_hour, max_hour_female, max_hour_male, max_week_day, max_week_day_female, max_week_day_male } = resp;\n            const {  month, max_month_day, max_month_day_female, max_month_day_male } = respMonth;\n            const monthPersonTotal = month.map(h => { return { label: h.day, x: h.day, y: h.total } });\n            const monthPersonMale = month.map(h => { return { label: h.day, x: h.day, y: h.male } });\n            const monthPersonFemale = month.map(h => { return { label: h.day, x: h.day, y: h.female } });\n\n\n            const hoursPersonTotal = hours.map(h => { return { label: h.time, x: h.hour, y: h.total } });\n            const hoursPersonMale = hours.map(h => { return { label: h.time, x: h.hour, y: h.male } });\n            const hoursPersonFemale = hours.map(h => { return { label: h.time, x: h.hour, y: h.female } });\n            const weekPersonTotal = week.map(h => { return { label: h.dow, x: h.dow, y: h.total } });\n            const weekPersonMale = week.map(h => { return { label: h.dow, x: h.dow, y: h.male } });\n            const weekPersonFemale = week.map(h => { return { label: h.dow, x: h.dow, y: h.female } });\n            const heatmapPersonTotal = heatmap.map(h => { return { label: h.time, x: h.day, y: h.total } });\n            const heatmapPersonRange = heatmap_range.map(h => { return { label: h.color, x: h.range, y: h.color } });\n            let rangePersonAges=[]\n            if(!!ageRanges){\n                rangePersonAges = ageRanges.map(h => { return { label: h.range, x: h.male, y: h.female } });\n            }\n            dispatch(getData({\n                hoursPersonTotal,\n                hoursPersonMale,\n                hoursPersonFemale,\n                weekPersonTotal,\n                weekPersonMale,\n                weekPersonFemale,\n                heatmapPersonTotal,\n                heatmapPersonRange,\n                rangePersonAges,\n                maxHourPersonTotal: max_hour,\n                maxHourPersonMale: max_hour_male,\n                maxHourPersonFemale: max_hour_female,\n                maxWeekPersonTotal: max_week_day,\n                maxWeekPersonMale: max_week_day_male,\n                maxWeekPersonFemale: max_week_day_female,\n                monthPersonTotal,\n                monthPersonMale,\n                monthPersonFemale,  \n                maxMonthPersonTotal: max_month_day,\n                maxMonthPersonMale: max_month_day_male,\n                maxMonthPersonFemale: max_month_day_female\n            }))\n   \n        } catch (error) {\n            throw new Error(error)\n        \n        }\n    }\n}\n\n/**\n * \n * @param {String} dateFrom fecha filtro con formato\n * @param {String} dateTo feha de inicio con formato\n * @param {String} totem variable para indicar el resource por la api\n * @param {String} groupId id del grupo de los datos\n * @returns data de la peticion\n */\nconst callAPIPersonForCurrentDate = async (dateFrom, dateTo, totem, groupId) => {\n    \n    return await (await fetchConToken(`/get-person-graphics?heatmap_p=true&age_range_p=true&date_from=${dateFrom}&date_to=${dateTo}&resource=${totem}&group_id=${groupId}`)).json();\n}\n\n/**\n * funcion para traer los datos de las horas\n * @param {String} dateFrom fecha filtro con formato\n * @param {String} dateTo feha de inicio con formato\n * @param {String} totem variable para indicar el resource por la api\n * @param {String} gender variable para indicar el genero para los datos\n * @returns callback con los datos\n */\nconst setGraphicsInHourForCurrentDate = (dateFrom, dateTo, totem = '', gender = 'total') => {\n\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        try {\n            const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n            const resp = await callAPIPersonForCurrentDate(dateFrom, dateTo, totem,groupId)\n            const data = resp['hours'].map(h => { return { label: h.time, x: h.hour, y: h[gender] } });\n            const capatalizeGender = gender.charAt(0).toLocaleUpperCase() + gender.substr(1, gender.length);\n            const setGraphicInJson = 'hoursPerson' + capatalizeGender;\n            let maxValue = resp['max_hour'];\n            if (gender !== 'total') {\n                maxValue = resp[`max_hour_${gender}`];\n            }\n            dispatch(getData({\n                [setGraphicInJson]: data,\n                [`maxHourPerson${capatalizeGender}`]: maxValue\n            }))\n\n            \n\n        } catch (error) {\n/*             Swal.fire('Error', 'Hubo un problema al traer su requerimiento, vuelva a intentarlo. Si el problema persiste comuniquese con uno de nuestros asesores.', 'error')\n */        }\n\n    }\n\n\n\n}\n\n/**\n * funcion para traer los datos de los graficos de la semana\n * @param {String} dateFrom fecha filtro con formato\n * @param {String} dateTo feha de inicio con formato\n * @param {String} totem variable para indicar el resource por la api\n * @param {String} gender variable para indicar el genero para los datos\n * @returns callback con los datos\n */\nconst setGraphicsInWeekForCurrentDate = (dateFrom, dateTo, totem = '', gender = 'total') => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        try {\n            const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n            const resp = await callAPIPersonForCurrentDate(dateFrom, dateTo, totem,groupId)\n            const data = resp['week'].map(h => { return { label: h.dow, x: h.dow, y: h[gender] } });\n            const capatalizeGender = gender.charAt(0).toLocaleUpperCase() + gender.substr(1, gender.length);\n            const setGraphicInJson = 'weekPerson' + capatalizeGender;\n            let maxValue = resp['max_week_day'];\n            if (gender !== 'total') {\n                maxValue = resp[`max_week_day_${gender}`];\n            }\n            dispatch(getData({\n                [setGraphicInJson]: data,\n                [`maxWeekPerson${capatalizeGender}`]: maxValue\n            }))\n        } catch (error) {\n            //do some\n        }\n    }\n}\n\n/**\n * funcion para traer los datos de los graficos del mes\n * @param {String} dateFrom fecha filtro con formato\n * @param {String} dateTo feha de inicio con formato\n * @param {String} totem variable para indicar el resource por la api\n * @param {String} gender variable para indicar el genero para los datos\n * @returns callback con los datos\n */\nconst setGraphicsInMonthForCurrentDate = (dateFrom, dateTo, totem = '', gender = 'total') => {\n\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        try {\n            const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n            const resp = await callAPIPersonForCurrentDate(dateFrom, dateTo, totem,groupId)\n            const data = resp['month'].map(h => { return { label: h.day, x: h.day, y: h[gender] } });\n            const capatalizeGender = gender.charAt(0).toLocaleUpperCase() + gender.substr(1, gender.length);\n            const setGraphicInJson = 'monthPerson' + capatalizeGender;\n            let maxValue = resp['max_month_day'];\n            if (gender !== 'total') {\n                maxValue = resp[`max_month_day_${gender}`];\n            }\n            dispatch(getData({\n                [setGraphicInJson]: data,\n                [`maxMonthPerson${capatalizeGender}`]: maxValue\n            }))\n        } catch (error) {\n            // do some     \n        }\n    }\n}\nconst setGraphicsInHeatmapForCurrentDate = (dateFrom, dateTo, totem = '', gender = 'total') => {\n    return async (dispatch,getState) => {\n        const {groups}=getState().auth;\n        try {\n            const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n            const resp = await (await fetchConToken(`/get-person-graphics?date_from=${dateFrom}&date_to=${dateTo}&age_range_p=true&group_id=${groupId}&resource=${totem}&heatmap_p=true`)).json();\n            const data = resp['heatmap'].map(h => { return { label: h.time, x: h.day, y: h.total } });\n            const rangeHeatmap = resp['heatmap_range'].map(h => { return { label: h.color, x: h.range, y: h.color } });\n            console.log(data)\n            dispatch(getData({\n                heatmapPersonTotal: data,\n                heatmapPersonRange: rangeHeatmap\n            }));\n        } catch (error) {\n            // do some    \n        }\n    }\n}\nconst setGraphicsInRangeForCurrentDate =(dateFrom, dateTo, totem = '', gender = 'total') => {\n    return async (dispatch,getState)=>{\n        const {groups}=getState().auth;\n        try {\n            const groupId=groups.filter(g=>g.code===types.changeTrazabilidadByHour)[0].id;\n            const resp = await (await fetchConToken(`/get-person-graphics?date_from=${dateFrom}&date_to=${dateTo}&age_range_p=true&group_id=${groupId}&totem=${totem}&heatmap_p=true`)).json();\n            const data = resp['ageRanges'].map(h => { return { label: h.range, x: h.male, y: h.female } });\n            dispatch(getData({\n                rangePersonAges: data\n            }));\n        } catch (error) {\n        //do some     \n        }\n    }\n}\n\n\nconst getData = (data) => ({\n    type: types.initializePerson,\n    payload: data\n})\nconst resetDates=()=>({\n    type:types.resetDates\n})\n\nexport {\n    startPersonData,\n    setGraphicsInHourForCurrentDate,\n    setGraphicsInWeekForCurrentDate,\n    setGraphicsInMonthForCurrentDate,\n    setGraphicsInHeatmapForCurrentDate,\n    setGraphicsInRangeForCurrentDate\n}","import React from 'react'\nimport { Bar } from 'react-chartjs-2'\nexport const GraficBar = React.memo(({ data = [], label, dtsetbg, optionbg, scalebg, title, labelop, legendbg = 'black', scltxtlbl = false, pl = 0, pr = 0, pb = 0, pt = 0, theme = 'ligth', id = '' }) => {\n    return (\n        <>\n            {data.length === 0 ?\n                <div className=\"__loader_grafic\">\n                    <img src=\"/assets/load/qonteo.gif\" alt=\"spinner_loaded\" />\n                </div> :\n                (\n                    <div className=\"flex-center\" >\n                        <div id={id} className={`contenedorChart  ${theme} classtest`}>\n                            <Bar data={\n\n                                {\n\n                                    labels: data.map(a => a.x),\n                                    datasets: [\n                                        {\n                                            label: `${label}`,\n\n                                            backgroundColor: `${dtsetbg}`,\n                                            data: data.map(a => a.y),\n                                            borderWidth: 0\n                                        },\n\n                                    ],\n                                    borderWidth: 0\n                                }\n\n                            }\n                                options={{\n\n                                    cornerRadius: 20,\n                                    title: {\n                                        display: true,\n\n                                        fontSize: 30,\n                                        fontColor: `${optionbg}`,\n                                        fontFamily: 'Barlow',\n                                        fontStyle: 400,\n                                    },\n                                    layout: {\n                                        padding: {\n                                            left: pl,\n                                            right: pr,\n                                            top: pt,\n                                            bottom: pb\n                                        },\n                                    },\n                                    legend: {\n                                        position: 'bottom',\n                                        labels: {\n                                            padding: 20,\n                                            boxWidth: 15,\n                                            fontSize: 18,\n                                            fontFamily: 'Barlow',\n                                            fontColor: `${legendbg}`\n                                        }\n                                    },\n                                    tooltips: {\n                                        enabled: true,\n                                        mode: 'single',\n                                        callbacks: {\n                                            title: function (tooltipItem, datax) {\n\n                                                return `${title}` + data[tooltipItem[0].index].label;\n                                            },\n                                            label: function (tooltipItems, data) {\n                                                return `${labelop}` + tooltipItems.yLabel;\n                                            },\n                                        }\n                                    },\n                                    maintainAspectRatio: false,\n                                    scales: {\n                                        yAxes: [{\n                                            ticks: {\n                                                fontColor: `${scalebg}`,\n                                                fontSize: 18,\n                                                fontFamily: 'Barlow',\n                                                fontStyle: 600,\n                                                beginAtZero: true,\n\n                                            },\n                                            gridLines: {\n                                                display: false\n                                            }\n                                            ,\n                                            scaleLabel: {\n                                                display: false,\n                                                labelString: `${scltxtlbl}`,\n                                                fontSize: 18,\n\n                                            }\n\n                                        }],\n                                        xAxes: [{\n                                            ticks: {\n                                                fontColor: `${scalebg}`,\n                                                fontSize: 18,\n                                                fontFamily: 'Barlow',\n                                                fontStyle: 600,\n\n                                                beginAtZero: true\n                                            },\n                                            gridLines: {\n                                                display: false\n                                            }\n                                        }]\n                                    },\n                                }}\n                            />\n                        </div>\n                    </div>\n\n                )\n            }\n        </>\n    )\n})\n","import React from 'react'\n\nexport const Footer = () => {\n    return (\n        <div>\n           \n        </div>\n    )\n}\n","import React from 'react'\n\nexport const Header = React.memo(() => {\n    return (\n        <div className=\"headerTop grid3\">\n            <img src=\"/assets/images/header/logosoda.png\" alt=\"logosoda\"/>\n            <img src=\"/assets/images/header/soda.png\" alt=\"logo\"/>\n          <div className=\"iconNotify\">\n          <img src=\"/assets/icons/notify.svg\" alt=\"notify\"/>\n          </div>\n            \n        </div>\n    )\n})\n","import React, { useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { checkingFinish, logout } from '../../../action/auth';\nexport const SideBar = React.memo(() => {\n    const [isOpen, setIsOpen] = useState(false);\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const openContent = useRef(null);\n    const openClose = () => {\n\n        openContent.current.parentNode.classList.toggle('open');\n        document.querySelector('.contentScreens').classList.toggle('open')\n        setIsOpen(!isOpen);\n    }\n\n    const closeSession = () => {\n        localStorage.clear();\n        dispatch(logout());\n    }\n\n    return (\n        <>\n            <div ref={openContent} className=\"iconCloseOpen\" onClick={openClose}>\n                <img src={`${isOpen ? '/assets/icons/close.svg' : '/assets/icons/closeopen.svg'} `} alt=\"iconClose\" />\n            </div>\n            <div className=\"icons\">\n                <div>\n                    <NavLink exact to=\"/\" activeClassName=\"activeIcon\" className=\"icon\">\n                        <img src=\"/assets/icons/home.svg\" alt=\"iconHome\" />\n\n                        <span className=\"titleIcon\">Home</span>\n\n                    </NavLink>\n                    <NavLink exact to=\"/\" activeClassName=\"activeIcon\" className=\"icon\">\n                        <span className=\"nameIcon\">Oportunidades</span>\n\n                        <img src=\"/assets/icons/person.svg\" alt=\"iconPerson\" />\n                        <span className=\"titleIcon\">Personas</span>\n\n                    </NavLink>\n                    <div className=\"icon-two\">\n                        <span className=\"nameIcon\">Reportes</span>\n                        <div className={`icon ${location.pathname.includes('especifico') ? 'activeIcon' : ''}`}>\n                            <NavLink exact to=\"/reportes/especifico\" >\n                                <img src=\"/assets/icons/report.svg\" className=\"w-4 l-2\" alt=\"iconPerson\" />\n                                <span className=\"titleIcon\">Especifico</span>\n                            </NavLink>\n\n                        </div>\n                        <div className={`icon ${location.pathname.includes('reportes/operacional') ? 'activeIcon' : ''}`}>\n                            <NavLink exact to=\"/reportes/operacional\" >\n                                <img src=\"/assets/icons/alert.svg\" className=\"w-4 l-2\" alt=\"iconPerson\" />\n                                <span className=\"titleIcon\">Comercial</span>\n                            </NavLink>\n\n                        </div>\n                        <div className={`icon ${location.pathname.includes('trazabilidad/comercio') ? 'activeIcon' : ''}`}>\n                            <NavLink exact to=\"/trazabilidad/comercio\" >\n                                <img src=\"/assets/icons/trazabilidad.svg\" className=\"w-4 l-2\" alt=\"iconPerson\" />\n                                <span className=\"titleIcon\">Trazabilidad</span>\n                            </NavLink>\n\n                        </div>\n\n                    </div>\n\n                   {/*  <div className=\"icon__submenu\">\n                        <ul>\n                            <li>Panisteria</li>\n                        </ul>\n                    </div> */}\n                </div>\n\n                <div className=\"pweroff\">\n                    <img onClick={closeSession} src=\"/assets/icons/closesession.svg\" alt=\"iconPerson\" />\n                </div>\n\n\n            </div>\n        </>\n    )\n})\n","import React from 'react'\nimport { Footer } from './Footer'\nimport { Header } from './Header'\nimport { SideBar } from './SideBar'\n\nexport const Main = React.memo(({children,isSidebar=true}) => {\n    return (\n        <div className=\"mainScreens\">\n            {isSidebar && \n            <div className=\"contentSidebar\">\n            <SideBar />\n            </div>\n            }\n            \n            <div className={`contentScreens ${!isSidebar && 'm-0'}`}  >\n                <Header />\n                {children}\n                <Footer />\n            </div>\n        </div>\n    )\n})\n","/**\n * @module Helpers\n */\n\n/**\n * funcion para obtener el formato de los números\n * @param {Number} num \n * @returns numero formateado\n */\n\nconst formatNumber=(num)=> {\n    if(num===null){\n        return 0\n    }\n    return num?.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n}\n\n\n\nconst porcentajepersona=(total=100, num=20)=> {\n    const resultado=Math.round((num * 100) / total);\n    if(isNaN(resultado) || resultado===Number.POSITIVE_INFINITY) return 0;\n    return resultado;\n}\n\n\n\nexport {\n    formatNumber,\n    porcentajepersona,\n}","import React from 'react'\nimport { formatNumber } from '../../../../helpers/calculo'\n\nexport const BoxDate = ({theme=\"dark\",count=0,percent=0,txtdetail='Personas en Total'}) => {\n    return (\n        <div className={`boxUI flexColumn ${theme}`}>\n            <span className=\"boxDate\">2021-02-21</span>\n            <div className=\"main\">\n                <div className=\"boxBody date\">\n                    <span className=\"boxPercent\">{percent>0 ? '+' : percent===0 ? '' : '-'} {percent}%</span>\n                    <span className=\"boxCount\">{formatNumber(count)}</span>\n                    <span className=\"boxDay\">HOY</span>\n                </div>\n                <div className=\"boxFooter mtBox\">{txtdetail}</div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { formatNumber } from '../../../../helpers/calculo'\n\nexport const BoxDateRange = ({theme=\"dark\",count=0,txtdetail='Personas en Total'}) => {\n    return (\n        <div className={`boxUI flexColumn ${theme}`}>\n\n            <div className=\"rangeDate\">\n                <span className=\"boxDate\">2020-12-18</span>\n                <span className=\"boxDate\">2021-02-21</span>\n            </div>\n            <div className=\"main\">\n                <div className=\"boxBody\">\n                    <span className=\"boxCount \">{formatNumber(count)}</span>\n                    <span className=\"BoxText mtBox\">TOTAL</span>\n                </div>\n                <div className=\"boxFooter mtBox\">{txtdetail}</div>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { formatNumber, porcentajepersona } from '../../../../helpers/calculo'\n\nexport const BoxGender = ({gender,theme='dark',total=0,count=0}) => {\n    return (\n        <div className={`boxUI flex gender ${theme}`}>\n        <div >\n            <div className=\"boxBody\">\n                {gender==='male' \n                    ?\n                    <img className=\"icongender\" src={theme==='dark' ? '/assets/icons/male-white.svg' : '/assets/icons/male-dark.svg' } />\n                    :\n                    <img className=\"icongender\" src={theme==='dark' ? '/assets/icons/female-white.svg' : '/assets/icons/female-dark.svg' } />\n                }\n                <span className=\"count boxCountGender\">{formatNumber(count)}</span>\n                <span className=\" mtBox\">{gender==='male' ? 'HOMBRES' : 'MUJERES'}</span>\n            </div>\n            <div className=\"boxFooter mtBox\"><span className=\"boxPercent\">{porcentajepersona(total,count)} %</span></div>\n        </div>\n    </div>\n    )\n}\n","import React from 'react'\nimport { formatNumber } from '../../../../helpers/calculo'\n\nexport const BoxWithOutPercent = ({theme=\"dark\",count=0,txtdetail='Personas en Total'}) => {\n    return (\n        <div className={`boxUI flex ${theme}`}>\n            <div className=\"content\">\n            <div className=\"boxBody\">\n                <span className=\"boxCount\">{formatNumber(count)}</span>\n                <span className=\"boxDay mtBox\">AYER</span>\n            </div>\n            <div className=\"boxFooter mtBox\">{txtdetail}</div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { formatNumber } from '../../../../helpers/calculo'\n\nexport const BoxWithPercent = ({theme=\"dark\",count=0,percent=0,txtdetail='Personas en Total'}) => {\n    return (\n        <div className={`boxUI flex ${theme}`}>\n            <div className=\"content\">\n                <div className=\"boxBody\">\n                    <span className=\"boxPercent\">{percent>0 ? '+' : percent===0 ? '' : '-'} {percent}%</span>\n                    <span className=\"boxCount mtBox\">{formatNumber(count)}</span>\n                    <span className=\"boxDay mtBox\">ESTA SEMANA</span>\n                </div>\n                <div className=\"boxFooter mtBox\">{txtdetail}</div>\n            </div>\n        </div>\n    )\n}\n","//Custom rewrite for radius border on bar draw\n//Code from https://github.com/jedtrow/Chart.js-Rounded-Bar-Charts with a few adjustments\n\nimport { Chart as ChartJS } from 'react-chartjs-2'\n\nChartJS.elements.Rectangle.prototype.draw = function() {\n    \n  const ctx = this._chart.ctx;\n  let vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped;\n  let borderWidth = vm.borderWidth;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let cornerRadius = this._chart.config.options.cornerRadius;\n  if(cornerRadius < 0){ cornerRadius = 0; }\n  if(typeof cornerRadius === 'undefined'){ cornerRadius = 0; }\n\n  if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top? 1: -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left? 1: -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize? barSize: borderWidth;\n      const halfStroke = borderWidth / 2;\n      // Adjust borderWidth when bar top position is near vm.base(zero).\n      const borderLeft = left + (borderSkipped !== 'left'? halfStroke * signX: 0);\n      const borderRight = right + (borderSkipped !== 'right'? -halfStroke * signX: 0);\n      const borderTop = top + (borderSkipped !== 'top'? halfStroke * signY: 0);\n      const borderBottom = bottom + (borderSkipped !== 'bottom'? -halfStroke * signY: 0);\n      // not become a vertical line?\n      if (borderLeft !== borderRight) {\n          top = borderTop;\n          bottom = borderBottom;\n      }\n      // not become a horizontal line?\n      if (borderTop !== borderBottom) {\n          left = borderLeft;\n          right = borderRight;\n      }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [\n      [left, bottom],\n      [left, top],\n      [right, top],\n      [right, bottom]\n  ];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n      startCorner = 0;\n  }\n\n  function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      let nextCornerId = i+1;\n      if(nextCornerId === 4){\n          nextCornerId = 0\n      }\n\n      cornerAt(nextCornerId);\n\n      const width = corners[2][0] - corners[1][0];\n      const height = corners[0][1] - corners[1][1];\n      const x = corners[1][0];\n      const y = corners[1][1];\n\n      let radius = cornerRadius;\n      // Fix radius being too large\n      if(radius > Math.abs(height)/2){\n          radius = Math.floor(Math.abs(height)/2);\n      }\n      if(radius > Math.abs(width)/2){\n          radius = Math.floor(Math.abs(width)/2);\n      }\n\n      if(height < 0){\n          // Negative values in a standard bar chart\n          const x_tl = x;          const x_tr = x+width;\n          const y_tl = y+height;   const y_tr = y+height;\n\n          const x_bl = x;         const  x_br = x+width;\n          const y_bl = y;        const   y_br = y;\n\n          // Draw\n          ctx.moveTo(x_bl+radius, y_bl);\n          ctx.lineTo(x_br-radius, y_br);\n          ctx.quadraticCurveTo(x_br, y_br, x_br, y_br-radius);\n          ctx.lineTo(x_tr, y_tr+radius);\n          ctx.quadraticCurveTo(x_tr, y_tr, x_tr-radius, y_tr);\n          ctx.lineTo(x_tl+radius, y_tl);\n          ctx.quadraticCurveTo(x_tl, y_tl, x_tl, y_tl+radius);\n          ctx.lineTo(x_bl, y_bl-radius);\n          ctx.quadraticCurveTo(x_bl, y_bl, x_bl+radius, y_bl);\n\n      }else if(width < 0){\n          // Negative values in a horizontal bar chart\n          const x_tl = x+width;   const  x_tr = x;\n          const y_tl= y;          const  y_tr = y;\n\n          const x_bl = x+width;   const  x_br = x;\n          const y_bl = y+height; const   y_br = y+height;\n\n          // Draw\n          ctx.moveTo(x_bl+radius, y_bl);\n          ctx.lineTo(x_br-radius, y_br);\n          ctx.quadraticCurveTo(x_br, y_br, x_br, y_br-radius);\n          ctx.lineTo(x_tr, y_tr+radius);\n          ctx.quadraticCurveTo(x_tr, y_tr, x_tr-radius, y_tr);\n          ctx.lineTo(x_tl+radius, y_tl);\n          ctx.quadraticCurveTo(x_tl, y_tl, x_tl, y_tl+radius);\n          ctx.lineTo(x_bl, y_bl-radius);\n          ctx.quadraticCurveTo(x_bl, y_bl, x_bl+radius, y_bl);\n\n      }else{\n          //Positive Value\n          ctx.moveTo(x + radius, y);\n          ctx.lineTo(x + width - radius, y);\n          ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n          ctx.lineTo(x + width, y + height - radius);\n          ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n          ctx.lineTo(x + radius, y + height);\n          ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n          ctx.lineTo(x, y + radius);\n          ctx.quadraticCurveTo(x, y, x + radius, y);\n      }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n      ctx.stroke();\n  }\n  }","import { types } from \"../types/types\"\n\n/**\n * @module Actions\n */\n\n/**\n * Action para enviar una fecha\n * @param {String} start fecha de inicio para los datos\n * @param {String} startvalue fecha de inico con Formato\n * @param {String} end fecha de fin\n * @param {String} endvalue fecha de fin con Formato\n */\nexport const setDate=(start,startvalue,end,endvalue) => ({\n    type: types.changeDate,\n    start,\n    startvalue,\n    end,\n    endvalue\n})","import React, { useState } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2'\nimport { format, isAfter, isEqual,isBefore,endOfMonth,subMonths,subDays,addDays } from 'date-fns'\nimport { setDate } from '../action/date';\n\n/**\n * @module Hooks\n */\n\n/**\n * \n * @param {Function} method Dispatch a realizar por el botón\n * @param {String} totem variable para indicar el resource por la api\n * @param {String} gender variable para indicar el genero para los datos\n * @param {String} startDatekey fecha de inicio para los datos\n * @param {String} endDatekey fecha de fin para los datos\n * @param {String} idReset id reset para el div\n * @param {Boolean} month variable para mostrar el showMonthYearPicker\n * @returns {Array} Dates Picker, valores de inicio y fin y sus setters\n */\n\nconst useDate = (method,totem=0,gender,startDatekey,endDatekey,idReset,month=false) => {\n    const dispatch = useDispatch();\n    const date = useSelector( state => state.date );\n    const [startDateValue, setStartDateValue] = useState( addDays(new Date(date[startDatekey]), 1))\n    const [endDateValue, setEndDateValue] = useState(addDays(new Date(date[endDatekey]),1))\n\n    const setStarDate = (date) => {\n     \n        const formatStartDate = format(date, 'yyyy-MM-dd');\n        const formatEndDate = format(endDateValue, 'yyyy-MM-dd');\n        const year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\n        const month = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(date);\n        const day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\n        const yearEnd = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(endDateValue);\n        const monthEnd = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(endDateValue);\n        const dayEnd = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(endDateValue);\n        if (isAfter(new Date(year, month, day), new Date(yearEnd, monthEnd, dayEnd)) || isEqual(new Date(year, month, day), new Date(yearEnd, monthEnd, dayEnd))) {\n            return Swal.fire('Error','La fecha Inicio debe ser menor que la fecha de fin','error')\n        }\n        setStartDateValue(date);\n        dispatch(method(formatStartDate, formatEndDate,totem,gender));\n        dispatch(setDate(startDatekey,formatStartDate,endDatekey,formatEndDate))\n    }\n    const setEndDate = (date) => {\n        const formatStartDate = format(startDateValue, 'yyyy-MM-dd');\n        const formatEndDate = format(date, 'yyyy-MM-dd');\n        const yearStart = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(startDateValue);\n        const monthStart = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(startDateValue);\n        const dayStart = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(startDateValue);\n        const yearEnd = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\n        const monthEnd = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(date);\n        const dayEnd = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\n        if (isBefore( new Date(yearEnd, monthEnd,dayEnd),new Date(yearStart, monthStart, dayStart)) || isEqual(new Date(yearStart, monthStart, dayStart), new Date(yearEnd, monthEnd, dayEnd))) {\n            return Swal.fire('Error','La fecha fin debe ser mayor que la fecha de inicio','error')\n        }\n        setEndDateValue(date);\n\n        dispatch(method(formatStartDate, formatEndDate,totem,gender));\n        dispatch(setDate(startDatekey,formatStartDate,endDatekey,formatEndDate))\n    }\n\n    const DateHtml = () => (\n        <div className=\"filterDate\">\n            <div className=\"date\">\n                <img src=\"/assets/images/icons/calendar.png\" className=\"icon_inputS\" alt=\"icon calendario\" />\n                <DatePicker\n                    selected={startDateValue}\n                    /*     locale=\"es\" */\n                    onChange={setStarDate}\n                    format='yyyy-MM-dd'\n                    maxDate={new Date()}\n                    showMonthYearPicker={month}\n                />\n            </div>\n            <div className=\"date\">\n                <img src=\"/assets/images/icons/calendar.png\" className=\"icon_inputS\" alt=\"icon calendario\" />\n                <DatePicker\n                    selected={endDateValue}\n                    /*  locale=\"es\" */\n                    onChange={setEndDate}\n                    format='yyyy-MM-dd'\n                    maxDate={new Date()}\n                    showMonthYearPicker={month}\n\n                />\n            </div>\n        </div>\n    );\n    return [DateHtml,startDateValue,endDateValue,setStartDateValue,setEndDateValue];\n}\n\nexport {useDate}","import React from 'react'\nimport { Line } from 'react-chartjs-2';\nexport const GraficLine = ({ data, label, dtsetbg, optionbg, scalebg, title, labelop, legendbg = 'black', sexo = null, lineColor = \"#5BCDFA\", scltxtlbl = \"Cantidad de vehículos\", pl = 0, pr = 0, pb = 0, pt = 0,theme='ligth',id='' }) => {\n    \n\n\n    return (\n        <>\n            {data.length === 0 ?\n                <div className=\"__loader_grafic\">\n                    <img src=\"/assets/load/qonteo.gif\" alt=\"spinner_loaded\" />\n                </div> :\n                (\n                    <div className=\"flex-center\" >\n                    <div id={id} className={`contenedorChart  ${theme} classtest`}>\n                    <Line data={\n                        {\n                            labels: data.map(a => a.x),\n                            datasets: [\n                                {\n                                    label: `${label}`,\n            \n                                    backgroundColor: `${dtsetbg}`,\n                                    data: data.map(a => a.y),\n                                    lineTension: 0.1,\n                                    borderDashOffset: 0.0,\n                                    borderJoinStyle: 'miter',\n                                    borderCapStyle: 'butt',\n                                    pointBorderWidth: 1,\n                                    pointHoverRadius: 5,\n                                },\n            \n                            ],\n                            borderWidth: 1\n                        }\n            \n                    }\n                        options={\n            \n                            {\n            \n                                cornerRadius: 20,\n                                title: {\n                                    display: true,\n                                    /*   text: ['TOTAL VEHÍCULOS POR HORA DEL DÍA', '', ''], */\n                                    fontSize: 30,\n                                    padding: 50,\n                                    fontColor: `${optionbg}`,\n                                    fontFamily: 'Barlow',\n                                    fontStyle: 400,\n                                },\n            \n                                layout: {\n                                    padding: {\n                                        left: pl,\n                                        right: pr,\n                                        top: pt,\n                                        bottom: pb\n                                    },\n                                },\n            \n            \n                                legend: {\n                                    position: 'bottom',\n                                    labels: {\n                                        padding: 20,\n                                        boxWidth: 15,\n                                        fontSize: 18,\n                                        fontFamily: 'Barlow',\n                                        fontColor: `${legendbg}`\n                                    }\n                                },\n                                elements: {\n                                    line: {\n                                        borderWidth: 5,\n                                        fill: false,\n                                        borderColor: `${lineColor}`,\n                                        tension: .5,\n                                    },\n            \n                                    point: {\n                                        radius: 6,\n            \n            \n                                    }\n                                },\n                                tooltips: {\n                                    enabled: true,\n                                    mode: 'single',\n                                    callbacks: {\n                                        title: function (tooltipItem, datax) {\n            \n                                            return `${title} ` + data[tooltipItem[0].index].label;\n                                        },\n                                        label: function (tooltipItems, data) {\n                                            return `${labelop} ` + tooltipItems.yLabel;\n                                        },\n                                    }\n                                },\n                                maintainAspectRatio: false,\n                                scales: {\n                                    yAxes: [{\n                                        ticks: {\n                                            fontColor: `${scalebg}`,\n                                            fontSize: 18,\n                                            fontFamily: 'Barlow',\n                                            fontStyle: 600,\n                                            beginAtZero: true,\n            \n                                        },\n                                        gridLines: {\n            \n                                            display: true,\n                                            drawBorder: false,\n                                            zeroLineColor: '#FEE700',\n                                            zeroLineWidth: 3,\n            \n            \n                                        },\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: `${scltxtlbl}`,\n                                            fontSize: 18,\n            \n                                        }\n            \n                                    }],\n                                    xAxes: [{\n                                        ticks: {\n                                            fontColor: `${scalebg}`,\n                                            fontSize: 18,\n                                            fontFamily: 'Barlow',\n                                            fontStyle: 600,\n                                            beginAtZero: true\n                                        },\n                                        gridLines: {\n                                            display: false,\n            \n                                        }\n                                    }],\n            \n                                },\n            \n                            }}\n                    />\n                    </div>\n                    </div>\n\n                )\n            }\n        </>\n\n    )\n}\n","import React, { useRef, useEffect, memo } from 'react'\nimport * as d3 from 'd3'\nimport moment from 'moment'\nexport const HeatMapDesktop = memo(({ data, range }) => {\n\n    const ref = useRef()\n\n    useEffect(() => {\n        tablehours(data)\n\n        return () => {\n            validarref()\n        }\n    }, [data])\n\n    useEffect(() => {\n        (()=>{\n           let timeOut= setTimeout(() => {\n                if(data.length===0){\n                    if(!!document.querySelector('.heatmaploading')){\n                        document.querySelector('.heatmaploading').parentElement.parentElement.removeChild(document.querySelector('.heatmaploading').parentElement);\n                    }\n                }\n            }, 5000);\n            return ()=>{\n                clearTimeout(timeOut)\n            }\n        })()\n    }, [])\n\n    const validarref = () => {\n        if (!!ref.current) {\n            ref.current.querySelector('svg') !== null && ref.current.querySelector('svg').remove()\n        }\n    }\n\n    const tablehours = (data) => {\n\n        const dias_semana = ['DOM','LUN','MAR','MIE','JUE','VIE','SAB'];\n       \n    \n        \n        if (data.length > 0) {\n          \n    \n           \n            const margin = { top: 30, right: 200, bottom: 200, left: 50 },\n                width = 900 - margin.left - margin.right,\n                height = 950 - margin.top - margin.bottom;\n\n\n            const svg = d3.select(ref.current)\n                .attr(\"align\", \"center\")\n\n                .append(\"svg\")\n                .attr(\"width\", 700)\n                .attr(\"height\", 750)\n                .append(\"g\")\n\n                .attr(\"transform\",\n                    \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n\n            const myVars = [\"23:00h\", \"22:00h\", \"21:00h\", \"20:00h\", \"19:00h\", \"18:00h\", \"17:00h\", \"16:00h\", \"15:00h\", \"14:00h\", \"13:00h\", \"12:00h\", \"11:00h\", \"10:00h\", \"9:00h\", \"8:00h\", \"7:00h\", \"6:00h\", \"5:00h\", \"4:00h\", \"3:00h\", \"2:00h\", \"1:00h\", \"0:00h\"];\n\n            const x = d3.scaleBand()\n                .range([0, width])\n                .domain(dias_semana)\n                .padding(0.01);\n            svg.append(\"g\")\n                .attr(\"transform\", \"translate(0, 0)\")\n                .call(d3.axisTop(x))\n\n\n            // Build X scales and axis:\n            const y = d3.scaleBand()\n                .range([height, 0])\n                .domain(myVars)\n                .padding(0.01);\n            svg.append(\"g\")\n                .call(d3.axisLeft(y));\n                \n            const range = data.map(r => r.y)\n            // Build color scale\n            const myColor = d3.scaleQuantile()\n                .range(['#5BCDFA', '#5EAFFE', '#4782F5', '#3450EF', '#0502D3'])\n                //\t\t\t\t\t\t\t\t\t\t  .range([\"#63be7b\", \"#f8696b\"])\n                .domain(range)\n            const rectContainer = svg.selectAll()\n                .data(data, function (d) {  return d.x + ':' + d.label; })\n                .enter().append(\"g\")\n                .attr(\"transform\", function (d) {\n                    \n                    return \"translate(\" + (x(d.x)) + \",\" + (y(d.label)) + \")\"\n                });\n\n            /* svg.append(\"text\")\n                .attr(\"x\", 525)\n                .attr(\"y\", 720)\n                .attr(\"text-anchor\", \"left\")\n                .style(\"font-size\", \"30px\")\n                .style(\"font-family\", \"Barlow\")\n                .text(\"Total\"); */\n\n            rectContainer.append(\"rect\")\n                .attr(\"width\", x.bandwidth())\n                .attr(\"height\", y.bandwidth())\n                .style(\"fill\", function (d) { return myColor(d.y) })\n\n            rectContainer.append(\"text\")\n            .attr(\"x\", (x.bandwidth()) / 2)\n            .attr(\"y\", ((y.bandwidth()) / 2) + 4)\n            .text(function (d) { return d.y })\n            .style(\"font-family\", \"Barlow\")\n            .style(\"font-size\", \"8pt\")\n            .style('fill', 'white')\n            .style(\"text-anchor\", \"middle\")\n\n        }\n\n\n\n    }\n    return (\n        <>\n            {data.length === 0 ?\n                <div className=\"__loader_grafic heatmaploading\">\n                    <img src=\"/assets/load/qonteo.gif\" alt=\"spinner_loaded\" />\n                </div> :\n                (\n                    <>\n                        <div className=\"rangeHeatMap\">\n                            {range.map(({ x},_i) => (\n                                <div className=\"range\" key={_i}>\n                                    <span  >{x}</span>\n                                    <div className=\"bgColorHeatMap\"></div>\n                                </div>\n\n                            ))}\n                        </div>\n                        <div className=\"mtxl text-center\"\n                            ref={ref}\n                        ></div>\n                    </>\n\n                )\n            }\n\n        </>\n    )\n}\n)","import React, { useEffect, useRef } from 'react'\nimport { HorizontalBar } from 'react-chartjs-2';\n\nexport const GraficCompare = React.memo(({ data = [], id = '' }) => {\n\n    return (\n        <>\n            {data.length === 0 ?\n                <div className=\"__loader_grafic\" >\n                    <img src=\"/assets/load/qonteo.gif\" alt=\"spinner_loaded\" />\n                </div> :\n                (\n                    <div className=\"flex-center\"   >\n                        <div id={id} className={`contenedorChart  classtest`}>\n                            <HorizontalBar data={\n                                {\n                                    labels: data.map(a => a.label),\n                                    datasets: [\n\n                                        {\n                                            label: 'Hombres',\n                                            backgroundColor: '#0502D3',\n\n                                            data: data.map(a => a.x)\n                                        },\n                                        {\n                                            label: 'Mujeres',\n                                            backgroundColor: '#1EAEF0',\n                                            data: data.map(a => -1 * a.y)\n                                        }\n                                    ]\n                                }\n\n                            }\n                                options={{\n                                    cornerRadius: 20,\n                                    title: {\n                                        display: true,\n                                        /*    text: ['TOTAL ACUMULADO PERSONAS POR GÉNERO', '', ''], */\n                                        fontSize: 30,\n                                        padding: 30,\n                                        fontColor: '#454545',\n                                        fontFamily: 'Barlow',\n                                        fontStyle: 400\n                                    },\n                                    maintainAspectRatio: false,\n                                    legend: {\n                                        position: 'bottom',\n                                        labels: {\n                                            padding: 20,\n                                            boxWidth: 15,\n                                            fontFamily: 'system-ui',\n                                            fontColor: 'black'\n                                        },\n                                        reverse: true\n                                    },\n\n\n\n                                    tooltips: {\n                                        titleFontSize: 20,\n                                        xPadding: 20,\n                                        yPadding: 20,\n                                        bodyFontSize: 15,\n                                        bodySpacing: 10,\n                                        callbacks: {\n                                            title: function (tooltipItem, data) {\n                                                return \"Edad:  \" + data.labels[tooltipItem[0].index] + ' años';\n                                            },\n                                            label: function (tooltipItem, data) {\n                                                var value = Math.sign(data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index]) === -1 ? data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] * -1 : data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index]\n\n\n                                                return data.datasets[tooltipItem.datasetIndex].label + ': ' + value;\n\n\n                                            }\n                                        }\n                                    },\n                                    elements: {\n                                        line: {\n                                            borderWidth: 8,\n                                            fill: false\n                                        },\n\n                                    },\n\n                                    scales: {\n                                        xAxes: [\n                                            {\n                                                stacked: false,\n                                                ticks: {\n                                                    beginAtZero: true,\n                                                },\n                                                gridLines: {\n                                                    display: false\n                                                }\n                                            },\n\n                                        ],\n                                        yAxes: [\n                                            {\n                                                stacked: true,\n                                                ticks: {\n                                                    beginAtZero: true,\n                                                },\n                                                gridLines: {\n                                                    display: false\n                                                },\n                                                scaleLabel: {\n                                                    display: true,\n                                                    labelString: \"Edad\",\n                                                    fontSize: 18,\n\n                                                },\n                                                position: \"left\",\n                                            }\n                                        ],\n                                    }\n\n                                }}\n                            />\n                        </div>\n                    </div>\n                )\n            }\n        </>\n\n    )\n})\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { subDays, format, addDays } from 'date-fns'\nimport { setDate } from '../action/date';\n\n/**\n * @module Hooks\n */\n\nconst currentDate = format(new Date(), 'yyyy-MM-dd');\n\n/**\n * \n * @param {object} buttons Contenido de los botones\n * @param {Function} method Dispatch a realizar por el botón\n * @param {String} totem variable para indicar el resource por la api\n * @param {String} gender variable para indicar el genero para los datos\n * @param {String} startDatekey fecha de inicio para los datos\n * @param {String} endDatekey fecha de fin para los datos\n * @param {String} idReset id reset para el div\n * @param {Number} indexInicial inddicador del boton en el arrreglo\n * @param {*} setdate funcion para enviar la fecha\n * @param {*} setenddate funcion para enviar la fecha de fin\n * @returns {Array} Botones y el reset\n */\n\nconst useButtons = (buttons = {}, method, totem = 0, gender, startDatekey, endDatekey, idReset, indexInicial = 0, setdate = false, setenddate = false) => {\n    const [isActive, setIsActive] = useState(Object.keys(buttons)[indexInicial])\n\n    const dispatch = useDispatch();\n    const setRangeDate = (element, date_to) => {\n        if (element.classList.contains('active')) return false;\n        const filterDate = subDays(new Date(), date_to);\n        const formatDateFilter = format(filterDate, 'yyyy-MM-dd');\n\n        dispatch(method(formatDateFilter, currentDate, totem, gender))\n        if (setdate) {\n            setdate(new Date(filterDate))\n            setenddate(addDays(new Date(currentDate), 1))\n        }\n        setIsActive(date_to);\n        dispatch(setDate(startDatekey, formatDateFilter, endDatekey, currentDate))\n    }\n\n    const reset = () => {\n        setIsActive(Object.keys(buttons)[1])\n    }\n    const ButtonsHtml = () => (\n        <div reset={idReset + 'rst'} className=\"groupButtons text-center spaceBottom\">\n            {Object.keys(buttons).map((v, _i) => (\n                <button key={_i} onClick={({ target }) => setRangeDate(target, v)} className={`filterBtn ${v === isActive ? 'active' : ''}`}>{buttons[v]}</button>\n            ))}\n        </div>\n\n    )\n\n    return [ButtonsHtml, reset]\n}\n\nexport {useButtons}","import { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\"\n\n/**\n * @module Actions\n */\n\n/**\n * funcion para traer los datos de los totems\n * @returns callback con los totems\n */\nconst startToten=()=>{\n    return async (dispatch,getState)=>{\n        const {groups}=getState().auth;\n        const groupId=groups.filter(g=>g.code===types.groupName)[0].id;\n        const resp = await fetchConToken(`/get-person-totals?group_id=${groupId}`);\n        const body = await resp.json();\n        const {total:totemTotal,resources}=body;\n        const tabs=resources.map(r=>{return {name:r.name,code:r.code}})\n        const resourcesFinal=resources.map(r=>{return {...r.data}})\n        dispatch(getToten({\n            totemTotal,\n            resources:resourcesFinal,\n            tabs\n        }))\n    }\n}\n\n/**\n * funcion para inicializar los totems\n * @param {Object} data Los totems\n */\nconst getToten=(data)=>({\n    type:types.getToten,\n    payload:data\n})\n\nexport{\n    startToten\n}","import jsPDF from 'jspdf'\nimport { toPng } from 'html-to-image'\nimport {saveAs} from 'file-saver'\nimport { fetchConToken } from \"./fetch\";\nimport {format} from 'date-fns'\n\n/**\n * @module Helpers\n */\n\n/**\n * funcion para exportar PDF\n * @param {String} grafic Grafico a impimir\n * @param {String} startdate fecha de inicio\n * @param {String} enddate fechad de fin\n * @param {String} title Titulo\n * @param {String} text texto\n * @param {String} year año\n * @param {*} totem \n */\nconst exportPDFPerson =async (grafic,startdate,enddate,title,text,year,totem=0) => {\n    let url='';\n    const elementPng = document.getElementById(grafic);\n    const doc = new jsPDF('l', 'pt');\n    const img = new Image()\n    img.src = './assets/images/pdf/logoleft.png'\n    doc.addImage(img, 'png', 30, 10, 100, 20)\n    const img2 = new Image()\n    img2.src = './assets/images/pdf/logorigth.png'\n    doc.addImage(img2, 'png', 750, 13, 65, 15)\n\n    doc.setFontSize(18);\n    doc.text(280, 90, title)\n\n    doc.setFontSize(9);\n    doc.text(650, 140, `Rango: ${startdate} - ${enddate}`)\n\n    doc.setFontSize(9);\n    doc.text(50, 140, text)\n    await toPng(elementPng).then(urlG=>url=urlG);\n    doc.addImage(url, 'jpg', 120, 180, 600, 350);\n\n    doc.setFontSize(9);\n    doc.text(50, 570, `Reporte generado ${format(new Date(),'yyyy-MM-dd HH:mm:ss')} PE.CCPN.01`)\n\n    doc.setFontSize(9);\n    let totemText='Acumulado'\n    if (Number(totem) === 1) {\n        totemText='totem 1'\n    } else if (Number(totem) === 2){\n        totemText='totem 2'\n        \n    }\n    doc.text(650, 570, `Tipo de totem: ${totemText}`)\n    \n\n    doc.save(`DSP-SODA-PE.CCPN.01-${startdate}-${enddate}-${title.replace(/\\s/g, '-')}.pdf.pdf`)\n}\n\n\nconst processExcel = async (type, interval, dateFrom, dateTo) => {\n    const peticion = await fetchConToken('/export', {\n        \"type\": type,\n        \"format\": \"csv\",\n        \"interval\": interval,\n        \"date_from\": dateFrom,\n        \"date_to\": dateTo\n    }, 'POST')\n    const json = await peticion.blob();\n    return json;\n}\n\nconst exportExcel = (type, startdate, enddate, filename) => {\n    processExcel('p', type, startdate, enddate).then(r => saveAs(r, `DSP-SODA-CO-PMXCO-BOG-A01-${startdate}-${enddate}-TOTAL-${filename}.csv`))\n}\n\nconst downloadImageDesktop=async (grafic,datestart,enddate,type,interval)=>{\n    let urlg='';\n    const elementPng = document.getElementById(grafic);\n  /*   const cloneElement=elementPng.cloneNode(true);\n     */\n    const linkHref = document.createElement('a');\n    await toPng(elementPng).then(urlG=>urlg=urlG);\n    fetchConToken('/upload-image', {\n        data: {\n            user_id: \"704\",\n            type,\n            interval,\n            date_from: datestart,\n            date_to:  enddate  ,\n            image: urlg\n        }\n    }, 'POST').then(resp => resp.json()).then((resp) => {\n        linkHref.setAttribute('target', '__blank');\n        linkHref.href = resp.url;\n        linkHref.click();\n    })\n}\n\nexport {\n    exportPDFPerson,\n    exportExcel,\n    downloadImageDesktop\n}","import React from 'react'\n\nexport const ButtonsExport = ({methodpdf,methodcsv,methodshare}) => {\n    return (\n        <div className=\"btnExportsGraphics\">\n            <button onClick={methodcsv}><img src=\"/assets/icons/downloadcsv.svg\" /></button>\n            <button onClick={methodpdf}><img src=\"/assets/icons/Impresion.svg\" /></button>\n            <button onClick={methodshare}><img src=\"/assets/icons/share.svg\" /></button>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setGraphicsInHeatmapForCurrentDate, setGraphicsInHourForCurrentDate, setGraphicsInMonthForCurrentDate, setGraphicsInRangeForCurrentDate, setGraphicsInWeekForCurrentDate, startPersonData } from '../../../../action/person'\nimport { GraficBar } from '../../../ui/grafics/GraficBar';\nimport { Main } from '../../../ui/layout/Main';\nimport { BoxDate } from '../../../ui/utils/boxes/BoxDate';\nimport { BoxDateRange } from '../../../ui/utils/boxes/BoxDateRange';\nimport { BoxGender } from '../../../ui/utils/boxes/BoxGender';\nimport { BoxWithOutPercent } from '../../../ui/utils/boxes/BoxWithOutPercent';\nimport { BoxWithPercent } from '../../../ui/utils/boxes/BoxWithPercent';\nimport '../../../../helpers/roundbarchart';\nimport { useDate } from '../../../../hooks/useDate';\nimport { GraficLine } from '../../../ui/grafics/GraficLine';\nimport { HeatMapDesktop } from '../../../ui/grafics/HeatMapDesktop';\nimport { GraficCompare } from '../../../ui/grafics/GraficCompare';\nimport { useButtons } from '../../../../hooks/useButtons';\nimport { Tabs, TabList, TabPanel, Tab } from 'react-tabs';\nimport { startToten } from '../../../../action/toten';\nimport { exportExcel, exportPDFPerson, downloadImageDesktop } from '../../../../helpers/exportPDF';\nimport { formatNumber } from '../../../../helpers/calculo';\nimport { ButtonsExport } from '../../../ui/exports/ButtonsExport';\nimport { types } from '../../../../types/types';\n\nexport const PersonScreen = ({ location }) => {\n    const dispatch = useDispatch();\n    /*   console.log('SE RENDERIZO') */\n    const { hoursPersonTotal, hoursPersonMale, hoursPersonFemale, weekPersonTotal, weekPersonMale,\n        weekPersonFemale, monthPersonTotal,\n        monthPersonMale, monthPersonFemale,\n        heatmapPersonTotal, heatmapPersonRange,\n        rangePersonAges,\n        maxHourPersonTotal,\n        maxHourPersonMale,\n        maxHourPersonFemale,\n        maxWeekPersonTotal,\n        maxWeekPersonMale,\n        maxWeekPersonFemale,\n        maxMonthPersonTotal,\n        maxMonthPersonMale,\n        maxMonthPersonFemale } = useSelector(state => state.person);\n    const { dateStartHourPerson, dateEndHourPerson,\n        dateStartHourMalePerson, dateEndHourMalePerson,\n        dateStartHourFemalePerson, dateEndHourFemalePerson,\n        dateStartWeekPerson, dateEndWeekPerson,\n        dateStartWeekMalePerson, dateEndWeekMalePerson,\n        dateStartWeekFemalePerson, dateEndWeekFemalePerson,\n        dateStartMonthPerson, dateEndMonthPerson,\n        dateStartMonthMalePerson, dateEndMonthMalePerson,\n        dateStartMonthFemalePerson, dateEndMonthFemalePerson,\n        dateStartAgePerson, dateEndAgePerson,\n        dateStartHeatMap, dateEndHeatMap } = useSelector(state => state.date);\n\n    const { totemTotal, resources, tabs } = useSelector(state => state.toten);\n    const [toten, setToten] = useState('');\n\n\n    const [DateHour, , , setStartDateHrTotal, setEndDateHrTotal] = useDate(setGraphicsInHourForCurrentDate, toten, 'total', 'dateStartHourPerson', 'dateEndHourPerson', '');\n    const [DateHourMale, , , setStartDateHrMale, setEndDateHrMale] = useDate(setGraphicsInHourForCurrentDate, toten, 'male', 'dateStartHourMalePerson', 'dateEndHourMalePerson', '');\n    const [DateHourFemale, , , setStartDateHrFemale, setEndDateHrFemale] = useDate(setGraphicsInHourForCurrentDate, toten, 'female', 'dateStartHourFemalePerson', 'dateEndHourFemalePerson', '');\n    const [DateWeek, , , setStartDateWkTotal, setEndDateWkTotal] = useDate(setGraphicsInWeekForCurrentDate, toten, 'total', 'dateStartWeekPerson', 'dateEndWeekPerson', '');\n    const [DateWeekMale, , , setStartDateWkMale, setEndDateWkMale] = useDate(setGraphicsInWeekForCurrentDate, toten, 'male', 'dateStartWeekMalePerson', 'dateEndWeekMalePerson', '');\n    const [DateWeekFemale, , , setStartDateWkFemale, setEndDateWkFemale] = useDate(setGraphicsInWeekForCurrentDate, toten, 'female', 'dateStartWeekFemalePerson', 'dateEndWeekFemalePerson', '');\n    const [DateMonth, , , setStartDateMntTotal, setEndDateMntTotal] = useDate(setGraphicsInMonthForCurrentDate, toten, 'total', 'dateStartMonthPerson', 'dateEndMonthPerson', '', true);\n    const [DateMonthMale, , , setStartDateMntMale, setEndDateMntMale] = useDate(setGraphicsInMonthForCurrentDate, toten, 'male', 'dateStartMonthMalePerson', 'dateEndMonthMalePerson', '', true);\n    const [DateMonthFemale, , , setStartDateMntFemale, setEndDateMntFemale] = useDate(setGraphicsInMonthForCurrentDate, toten, 'female', 'dateStartMonthFemalePerson', 'dateEndMonthFemalePerson', '', true);\n    const [DateAgeRanges, , , setStartDateAgeRg, setEndDateAgeRg] = useDate(setGraphicsInRangeForCurrentDate, toten, 'total', 'dateStartAgePerson', 'dateEndAgePerson', '');\n    const [ButtonHourTotal, hourstotalrst] = useButtons({\n        0: 'HOY',\n        7: '07 DÍAS',\n        15: '15 DÍAS',\n        30: '30 DÍAS'\n    }, setGraphicsInHourForCurrentDate, toten, 'total', 'dateStartHourPerson', 'dateEndHourPerson', 'hourstotalrst', 1, setStartDateHrTotal, setEndDateHrTotal);\n    const [ButtonHourMale, hoursmalerst] = useButtons({\n        0: 'HOY',\n        7: '07 DÍAS',\n        15: '15 DÍAS',\n        30: '30 DÍAS'\n    }, setGraphicsInHourForCurrentDate, toten, 'male', 'dateStartHourMalePerson', 'dateEndHourMalePerson', 'hoursmalerst', 1, setStartDateHrMale, setEndDateHrMale)\n    const [ButtonHourFemale, hoursfemalerst] = useButtons({\n        0: 'HOY',\n        7: '07 DÍAS',\n        15: '15 DÍAS',\n        30: '30 DÍAS'\n    }, setGraphicsInHourForCurrentDate, toten, 'female', 'dateStartHourFemalePerson', 'dateEndHourFemalePerson', 'hoursfemalerst', 1, setStartDateHrFemale, setEndDateHrFemale)\n    const [ButtonWeekTotal, weektotalrst] = useButtons({\n        7: 'ULTIMA SEMANA',\n        30: '30 DÍAS',\n    }, setGraphicsInWeekForCurrentDate, toten, 'total', 'dateStartWeekPerson', 'dateEndWeekPerson', 'weektotalrst', 0, setStartDateWkTotal, setEndDateWkTotal)\n    const [ButtonWeekMale, weekmalerst] = useButtons({\n        7: 'ULTIMA SEMANA',\n        30: '30 DÍAS',\n    }, setGraphicsInWeekForCurrentDate, toten, 'male', 'dateStartWeekMalePerson', 'dateEndWeekMalePerson', 'weekmalerst', 0, setStartDateWkMale, setEndDateWkMale)\n    const [ButtonWeekFemale, weekfemalerst] = useButtons({\n        7: 'ULTIMA SEMANA',\n        30: '30 DÍAS',\n    }, setGraphicsInWeekForCurrentDate, toten, 'female', 'dateStartWeekFemalePerson', 'dateEndWeekFemalePerson', 'weekfemalerst', 0, setStartDateWkFemale, setEndDateWkFemale)\n    const [ButtonMonthTotal, monthtotalrst] = useButtons({\n        30: 'ÚLTIMO MES',\n        60: 'ÚLTIMO DOS MES',\n        90: 'ÚLTIMO TRES MES',\n    }, setGraphicsInMonthForCurrentDate, toten, 'total', 'dateStartMonthPerson', 'dateEndMonthPerson', 'monthtotalrst', 0, setStartDateMntTotal, setEndDateMntTotal)\n    const [ButtonMonthMale, monthmalerst] = useButtons({\n        30: 'ÚLTIMO MES',\n        60: 'ÚLTIMO DOS MES',\n        90: 'ÚLTIMO TRES MES',\n    }, setGraphicsInMonthForCurrentDate, toten, 'male', 'dateStartMonthMalePerson', 'dateEndMonthMalePerson', 'monthmalerst', 0, setStartDateMntMale, setEndDateMntMale)\n    const [ButtonMonthFemale, monthfemalerst] = useButtons({\n        30: 'ÚLTIMO MES',\n        60: 'ÚLTIMO DOS MES',\n        90: 'ÚLTIMO TRES MES',\n    }, setGraphicsInMonthForCurrentDate, toten, 'female', 'dateStartMonthFemalePerson', 'dateEndMonthFemalePerson', 'monthfemalerst', 0, setStartDateMntFemale, setEndDateMntFemale)\n    const [ButtonHeatMap, heatmaprst] = useButtons({\n        0: 'HOY',\n        7: '07 DÍAS',\n        15: '15 DÍAS',\n        30: '30 DÍAS'\n    }, setGraphicsInHeatmapForCurrentDate, toten, 'total', 'dateStartHeatMap', 'dateEndHeatMap', 'heatmaprst', 1)\n    const [ButtonRangeAges, ageRangesrst] = useButtons({\n        0: 'HOY',\n        60: 'ACUMULADO',\n        7: '07 DÍAS',\n        15: '15 DÍAS',\n        30: '30 DÍAS'\n    }, setGraphicsInRangeForCurrentDate, toten, 'total', 'dateStartAgePerson', 'dateEndAgePerson', 'ageRangesrst', 1, setStartDateAgeRg, setEndDateAgeRg)\n\n\n\n    useEffect(() => {\n        (() => {\n            dispatch(startPersonData(toten))\n            dispatch(startToten());\n        })()\n    }, [])\n\n    const changeTab = async ({ target }) => {\n        if (target.classList.contains('totenactivetab')) {\n            return false;\n        }\n        if (target.tagName == 'LI') {\n            const numToten = target.getAttribute(\"tab-index\");\n            setToten(numToten)\n            dispatch(startPersonData(numToten))\n        }\n    }\n\n    return (\n        <Main >\n            <div className=\"contenedor\">\n                <span className=\"spaceXY codeQonteo\">{types.GroupName}</span>\n                {/*    <TitleHead>Personas</TitleHead> */}\n                <h3 className=\"subTitle\">OPORTUNIDADES/PERSONAS</h3>\n                <Tabs selectedTabClassName=\"totenactivetab\" className=\"spaceXY\">\n                    <TabList onClick={changeTab}>\n                        <Tab tab-index=\"\">TOTAL ACUMULADO</Tab>\n                        {tabs.map((t, _i) => (\n                            <Tab key={_i} tab-index={t.code.toString()}>{t.name}</Tab>\n                        ))}\n                    </TabList>\n                    <TabPanel>\n                        <div className=\"\">\n\n                            <div className=\"boxGridFour\">\n                                <BoxDate count={totemTotal?.today?.count} percent={totemTotal?.today?.percent} />\n                                <BoxWithOutPercent theme=\"light\" count={totemTotal?.yesterday?.total} />\n                                <BoxWithPercent theme=\"light\" count={totemTotal?.week?.total} percent={totemTotal?.week?.percent} />\n                                <BoxDateRange theme=\"light\" count={totemTotal?.total?.count} />\n                            </div>\n                            <div className=\"boxGridFour spaceTop\">\n                                <BoxDate count={totemTotal?.today?.unknow} percent={totemTotal?.today?.percent} txtdetail=\"Dispositivos detectados por el sensor\" />\n                                <BoxWithOutPercent theme=\"light\" count={totemTotal?.yesterday?.unknown} txtdetail=\"Dispositivos detectados por el sensor\" />\n                                <BoxWithPercent theme=\"light\" count={totemTotal?.week?.unknown} percent={totemTotal?.week?.percent} txtdetail=\"Dispositivos detectados por el sensor\" />\n                                <BoxDateRange theme=\"light\" count={totemTotal?.total?.unknown} txtdetail=\"Dispositivos detectados por el sensor\" />\n                            </div>\n                            <div className=\"boxGridFour spaceTop\">\n                                <BoxGender gender=\"female\" count={totemTotal?.today?.female} total={totemTotal?.today?.count} txtDay=\"HOY\" />\n                                <BoxGender gender=\"female\" count={totemTotal?.yesterday?.female} total={totemTotal?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                                <BoxGender gender=\"female\" count={totemTotal?.week?.female} total={totemTotal?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                                <BoxGender gender=\"female\" count={totemTotal?.total?.female} total={totemTotal?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                            </div>\n                            <div className=\"boxGridFour spaceTop\">\n                                <BoxGender gender=\"male\" count={totemTotal?.today?.male} total={totemTotal?.today?.count} txtDay=\"HOY\" />\n                                <BoxGender gender=\"male\" count={totemTotal?.yesterday?.male} total={totemTotal?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                                <BoxGender gender=\"male\" count={totemTotal?.week?.male} total={totemTotal?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                                <BoxGender gender=\"male\" count={totemTotal?.total?.male} total={totemTotal?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                            </div>\n\n                        </div>\n\n                    </TabPanel>\n                \n                    {resources.map((r,_i) => (\n                        \n                        <TabPanel key={_i}>\n                                \n                            <div className=\"\">\n\n                                <div className=\"boxGridFour\">\n                                    <BoxDate count={r?.today?.count} percent={r?.today?.percent} />\n                                    <BoxWithOutPercent theme=\"light\" count={r?.yesterday?.total} />\n                                    <BoxWithPercent theme=\"light\" count={r?.week?.total} percent={r?.week?.percent} />\n                                    <BoxDateRange theme=\"light\" count={r?.total?.count} />\n                                </div>\n\n                                {\n                                    (r?.total?.female) &&\n                                    <div className=\"boxGridFour spaceTop\">\n                                        <BoxGender gender=\"female\" count={r?.today?.female} total={r?.today?.count} txtDay=\"HOY\" />\n                                        <BoxGender gender=\"female\" count={r?.yesterday?.female} total={r?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                                        <BoxGender gender=\"female\" count={r?.week?.female} total={r?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                                        <BoxGender gender=\"female\" count={r?.total?.female} total={r?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                                    </div>\n                                }\n\n                                {\n                                    (r?.total?.male) &&\n                                    <div className=\"boxGridFour spaceTop\">\n                                        <BoxGender gender=\"male\" count={r?.today?.male} total={r?.today?.count} txtDay=\"HOY\" />\n                                        <BoxGender gender=\"male\" count={r?.yesterday?.male} total={r?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                                        <BoxGender gender=\"male\" count={r?.week?.male} total={r?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                                        <BoxGender gender=\"male\" count={r?.total?.male} total={r?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                                    </div>\n                                }\n\n                            </div>\n\n                        </TabPanel>\n\n                    ))}\n\n                </Tabs>\n\n                <div className=\"spaceXY d-block\">\n\n\n\n                    {hoursPersonTotal.length > 0 && <>\n                        <h3 className=\"subTitle  text-center\">TOTAL DE PERSONAS POR HORA DEL DÍA</h3>\n                        <span className=\"spaceBottom text-center d-block\">( {dateStartHourPerson} - {dateEndHourPerson} )</span>\n                        <ButtonHourTotal />\n                        <div className=\"detailGrafic spaceBottom\">\n                            <span className=\"detailMax\">Hora más transitada: {maxHourPersonTotal?.hour} con {formatNumber(maxHourPersonTotal?.total)} personas</span>\n                            <DateHour />\n                        </div>\n                    </>}\n\n\n                    <GraficBar data={hoursPersonTotal} label=\"Total de Personas\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora:\"\n                        labelop=\" Total de Personas:\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        scalebg=\"#0502D3\"\n                        theme=\"bg-yellow\"\n                        id=\"grafichourTotal\"\n                    />\n                    {hoursPersonTotal.length > 0 && <ButtonsExport methodpdf={() => exportPDFPerson('grafichourTotal', dateStartHourPerson, dateEndHourPerson, 'TOTAL DE HOMBRES POR HORA DEL DÍA', `HORA MÁS TRANSITADA: ${maxHourPersonTotal.hour} CON ${formatNumber(maxHourPersonTotal.total)} PERSONAS`, false, toten)}\n                        methodcsv={() => exportExcel('hour', dateStartHourPerson, dateEndHourPerson, 'DE-HOMBRES-POR-HORA-DEL-DIA')}\n                        methodshare={() => downloadImageDesktop('grafichourTotal', dateStartHourPerson, dateEndHourPerson, 'hour', 'P')}\n                    />}\n                </div>\n                {toten !== 'CCPN003' &&\n                    <div className=\"spaceXY d-block\">\n                        <h3 className=\"subTitle  text-center\">TOTAL DE HOMBRES POR HORA DEL DÍA</h3>\n                        <span className=\"spaceBottom range-date text-center d-block\">( {dateStartHourMalePerson} - {dateEndHourMalePerson} )</span>\n                        {hoursPersonMale.length > 0 && <ButtonHourMale />}\n\n                        <div className=\"detailGrafic spaceBottom\">\n                            <span className=\"detailMax\">Hora más transitada: {maxHourPersonMale?.hour} con {formatNumber(maxHourPersonMale?.total)} personas</span>\n                            {hoursPersonMale.length > 0 && <DateHourMale />}\n                        </div>\n                        <GraficBar data={hoursPersonMale} label=\"Total de Hombres\" dtsetbg=\"#0502D3\"\n                            optionbg=\"#454545\"\n                            legendbg=\"#454545\"\n                            title=\" Hora:\"\n                            labelop=\" Total de Hombres:\"\n                            scltxtlbl=\"Cantidad de Hombres\"\n                            scalebg=\"#0502D3\" id=\"grafichourMale\"\n                            id=\"grafichourMale\"\n                        />\n\n                        {hoursPersonMale.length > 0 && <ButtonsExport methodpdf={() => exportPDFPerson('grafichourMale', dateStartHourMalePerson, dateEndHourMalePerson, 'TOTAL DE HOMBRES POR HORA DEL DÍA', `HORA MÁS TRANSITADA: ${maxHourPersonMale.hour} CON ${formatNumber(maxHourPersonMale.total)} PERSONAS`, false, toten)}\n                            methodcsv={() => exportExcel('hour', dateStartHourMalePerson, dateEndHourMalePerson, 'DE-HOMBRES-POR-HORA-DEL-DIA')}\n                            methodshare={() => downloadImageDesktop('grafichourMale', dateStartHourMalePerson, dateEndHourMalePerson, 'hour', 'P')}\n                        />}\n                    </div>\n                }\n\n                {toten !== 'CCPN003' &&\n                    <div className=\"spaceXY d-block\">\n                        {hoursPersonFemale.length > 0 && <>\n                            <h3 className=\"subTitle  text-center\">TOTAL DE MUJERES POR HORA DEL DÍA</h3>\n                            <span className=\"spaceBottom range-date text-center d-block\">( {dateStartHourFemalePerson} - {dateEndHourFemalePerson} )</span>\n                            <ButtonHourFemale />\n                            <div className=\"detailGrafic spaceBottom\">\n                                <span className=\"detailMax\">Hora más transitada: {maxHourPersonFemale?.hour} con {formatNumber(maxHourPersonFemale?.total)} personas</span>\n                                <DateHourFemale />\n                            </div>\n                        </>}\n                        <GraficBar data={hoursPersonFemale} label=\"Total de Mujeres\" dtsetbg=\"#0502D3\"\n                            optionbg=\"#454545\"\n                            legendbg=\"#454545\"\n                            title=\" Hora:\"\n                            labelop=\" Total de Mujeres:\"\n                            scltxtlbl=\"Cantidad de Mujeres\"\n                            scalebg=\"#0502D3\"\n                            id=\"grafichourfemale\"\n                        />\n                        {hoursPersonFemale.length > 0 && <ButtonsExport methodpdf={() => exportPDFPerson('grafichourfemale', dateStartHourFemalePerson, dateEndHourFemalePerson, 'TOTAL DE MUJERES POR HORA DEL DÍA', `HORA MÁS TRANSITADA: ${maxHourPersonFemale.hour} CON ${formatNumber(maxHourPersonFemale.total)} PERSONAS`, false, toten)}\n                            methodcsv={() => exportExcel('hour', dateStartHourFemalePerson, dateEndHourFemalePerson, 'DE-MUJERES-POR-HORA-DEL-DIA')}\n                            methodshare={() => downloadImageDesktop('grafichourfemale', dateStartHourFemalePerson, dateEndHourFemalePerson, 'hour', 'P')}\n                        />\n                        }\n                    </div>\n\n                }\n\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center\">TOTAL DE PERSONAS POR DÍA DE LA SEMANA</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartWeekPerson} - {dateEndWeekPerson} )</span>\n                    {weekPersonTotal.length > 0 && <ButtonWeekTotal />}\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día de la semana más transitado: {maxWeekPersonTotal?.day} con {formatNumber(maxWeekPersonTotal?.total)} personas</span>\n                        {weekPersonTotal.length > 0 && <DateWeek />}\n                    </div>\n                    <GraficLine data={weekPersonTotal} label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día\"\n                        labelop=\"tránsito de personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        id=\"graficweek\"\n                    />\n\n                    {weekPersonTotal.length > 0 && <ButtonsExport methodpdf={() => exportPDFPerson('graficweek', dateStartWeekPerson, dateEndWeekPerson, 'TOTAL DE PERSONAS POR DÍA DE LA SEMANA', `DIA MÁS TRANSITADO: ${maxWeekPersonTotal.day} CON ${formatNumber(maxWeekPersonTotal.total)} PERSONAS`, false, toten)}\n                        methodcsv={() => exportExcel('week', dateStartWeekPerson, dateEndWeekPerson, 'DE-PERSONAS-POR-DIA-DE-LA-SEMANA')}\n                        methodshare={() => downloadImageDesktop('graficweek', dateStartWeekPerson, dateEndWeekPerson, 'week', 'P')}\n                    />}\n                </div>\n                {toten !== 'CCPN003' &&\n                    <div className=\"spaceXY d-block\">\n                        <h3 className=\"subTitle  text-center\">TOTAL DE HOMBRES POR DÍA DE LA SEMANA</h3>\n                        <span className=\"spaceBottom range-date text-center d-block\">( {dateStartWeekMalePerson} - {dateEndWeekMalePerson} )</span>\n                        {weekPersonMale.length > 0 && <ButtonWeekMale />}\n                        <div className=\"detailGrafic spaceBottom\">\n                            <span className=\"detailMax\">Día de la semana más transitado: {maxWeekPersonMale?.day} con {formatNumber(maxWeekPersonMale?.total)} personas</span>\n                            {weekPersonMale.length > 0 && <DateWeekMale />}\n\n                        </div>\n                        <GraficLine data={weekPersonMale} label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día\"\n                            labelop=\"tránsito de Hombres\"\n                            scltxtlbl=\"Cantidad de Hombres\"\n                            id=\"graficweekmale\"\n                        />\n                        {weekPersonMale.length > 0 && <ButtonsExport methodpdf={() => exportPDFPerson('graficweekmale', dateStartWeekMalePerson, dateEndWeekMalePerson, 'TOTAL DE HOMBRES POR DÍA DE LA SEMANA', `DIA MÁS TRANSITADO: ${maxWeekPersonMale.day} CON ${formatNumber(maxWeekPersonMale.total)} PERSONAS`, false, toten)}\n                            methodcsv={() => exportExcel('week', dateStartWeekMalePerson, dateEndWeekMalePerson, 'DE-HOMBRES-POR-DIA-DE-LA-SEMANA')}\n                            methodshare={() => downloadImageDesktop('graficweekmale', dateStartWeekMalePerson, dateEndWeekMalePerson, 'week', 'P')}\n                        />}\n                    </div>\n                }\n\n                {toten !== 'CCPN003' &&\n                    <div className=\"spaceXY d-block\">\n                        <h3 className=\"subTitle  text-center\">TOTAL DE MUJERES POR DÍA DE LA SEMANA</h3>\n                        <span className=\"spaceBottom range-date text-center d-block\">( {dateStartWeekFemalePerson} - {dateEndWeekFemalePerson} )</span>\n                        {weekPersonFemale.length > 0 && <ButtonWeekFemale />}\n                        <div className=\"detailGrafic spaceBottom\">\n                            <span className=\"detailMax\">Día de la semana más transitado: {maxWeekPersonFemale?.day} con {formatNumber(maxWeekPersonFemale?.total)} personas</span>\n                            {weekPersonFemale.length > 0 && <DateWeekFemale />}\n\n                        </div>\n                        <GraficLine data={weekPersonFemale} label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día\"\n                            labelop=\"tránsito de Mujeres\"\n                            scltxtlbl=\"Cantidad de Mujeres\"\n                            id=\"graficweekfemale\"\n                        />\n                        {weekPersonFemale.length > 0 && <ButtonsExport methodpdf={() => exportPDFPerson('graficweekfemale', dateStartWeekFemalePerson, dateEndWeekFemalePerson, 'TOTAL DE MUJERES POR DÍA DE LA SEMANA', `DIA MÁS TRANSITADO: ${maxWeekPersonFemale.day} CON ${formatNumber(maxWeekPersonFemale.total)} PERSONAS`, false, toten)}\n                            methodcsv={() => exportExcel('week', dateStartWeekFemalePerson, dateEndWeekFemalePerson, 'DE-MUJERES-POR-DIA-DE-LA-SEMANA')}\n                            methodshare={() => downloadImageDesktop('graficweekfemale', dateStartWeekFemalePerson, dateEndWeekFemalePerson, 'week', 'P')}\n                        />}\n                    </div>\n                }\n\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center\">ACUMULADO DE PERSONAS POR CADA DÍA DEL MES</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartMonthPerson} - {dateEndMonthPerson} )</span>\n                    {monthPersonTotal.length > 0 && <ButtonMonthTotal />}\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día del mes más transitado: {maxMonthPersonTotal?.day} con {maxMonthPersonTotal?.total} personas</span>\n                        {monthPersonTotal.length > 0 && <DateMonth />}\n\n                    </div>\n                    <GraficBar\n                        data={monthPersonTotal}\n                        label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día: \"\n                        labelop=\"tránsito de Personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        theme=\"bg-yellow\"\n                        id=\"graficmonth\"\n                    />\n                    {monthPersonTotal.length > 0 && <ButtonsExport methodpdf={() => exportPDFPerson('graficmonth', dateStartMonthPerson, dateEndMonthPerson, 'TOTAL DE PERSONAS POR DÍA DEL MES', `DIA MÁS TRANSITADA: ${maxMonthPersonTotal.day} CON ${formatNumber(maxMonthPersonTotal.total)} PERSONAS`, false, toten)}\n                        methodcsv={() => exportExcel('month', dateStartMonthPerson, dateEndMonthPerson, 'DE-PERSONAS-POR-DIA-DEL-MES')}\n                        methodshare={() => downloadImageDesktop('graficmonth', dateStartMonthPerson, dateEndMonthPerson, 'month', 'P')}\n                    />}\n                </div>\n\n                {toten !== 'CCPN003' &&\n                    <div className=\"spaceXY d-block\">\n                        <h3 className=\"subTitle  text-center\">ACUMULADO DE HOMBRES POR CADA DÍA DEL MES</h3>\n                        <span className=\"spaceBottom range-date text-center d-block\">( {dateStartMonthMalePerson} - {dateEndMonthMalePerson} )</span>\n                        {monthPersonMale.length > 0 && <ButtonMonthMale />}\n                        <div className=\"detailGrafic spaceBottom\">\n                            <span className=\"detailMax\">Día del mes más transitado: {maxMonthPersonMale?.day} con {maxMonthPersonMale?.total} personas</span>\n                            {monthPersonMale.length > 0 && <DateMonthMale />}\n\n                        </div>\n                        <GraficBar\n                            data={monthPersonMale}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día: \"\n                            labelop=\"tránsito de Hombres\"\n                            scltxtlbl=\"Cantidad de Hombres\"\n                            id=\"graficmonthmale\"\n                        />\n                        {monthPersonMale.length > 0 && <ButtonsExport methodpdf={() => exportPDFPerson('graficmonthmale', dateStartMonthMalePerson, dateEndMonthMalePerson, 'TOTAL DE HOMBRES POR DÍA DEL MES', `DIA MÁS TRANSITADA: ${maxMonthPersonMale.day} CON ${formatNumber(maxMonthPersonMale.total)} PERSONAS`, false, toten)}\n                            methodcsv={() => exportExcel('month', dateStartMonthMalePerson, dateEndMonthMalePerson, 'DE-HOMBRES-POR-DIA-DEL-MES')}\n                            methodshare={() => downloadImageDesktop('graficmonthmale', dateStartMonthMalePerson, dateEndMonthMalePerson, 'month', 'P')}\n                        />}\n                    </div>\n                }\n\n                {toten !== 'CCPN003' &&\n                    <div className=\"spaceXY d-block\">\n                        <h3 className=\"subTitle  text-center\">ACUMULADO DE MUJERES POR CADA DÍA DEL MES</h3>\n                        <span className=\"spaceBottom range-date text-center d-block\">( {dateStartMonthFemalePerson} - {dateEndMonthFemalePerson} )</span>\n                        {monthPersonFemale.length > 0 && <ButtonMonthFemale />}\n                        <div className=\"detailGrafic spaceBottom\">\n                            <span className=\"detailMax\">Día del mes más transitado: {maxMonthPersonFemale?.day} con {maxMonthPersonFemale?.total} personas</span>\n                            {monthPersonFemale.length > 0 && <DateMonthFemale />}\n\n                        </div>\n                        <GraficBar\n                            data={monthPersonFemale}\n                            label=\"Tiempo (Días)\"\n                            dtsetbg=\"#0a18f1\"\n                            optionbg=\"#454545\"\n                            scalebg=\"#0502D3\"\n                            title=\"Día: \"\n                            labelop=\"tránsito de Personas\"\n                            scltxtlbl=\"Cantidad de Personas\"\n                            id=\"graficmonthfemale\"\n                        />\n                        {monthPersonFemale.length > 0 && <ButtonsExport methodpdf={() => exportPDFPerson('graficmonthfemale', dateStartMonthFemalePerson, dateEndMonthFemalePerson, 'TOTAL DE MUJERES POR DÍA DEL MES', `DIA MÁS TRANSITADA: ${maxMonthPersonFemale.day} CON ${formatNumber(maxMonthPersonFemale.total)} PERSONAS`, false, toten)}\n                            methodcsv={() => exportExcel('month', dateStartMonthFemalePerson, dateEndMonthFemalePerson, 'DE-MUJERES-POR-DIA-DEL-MES')}\n                            methodshare={() => downloadImageDesktop('graficmonthfemale', dateStartMonthFemalePerson, dateEndMonthFemalePerson, 'month', 'P')}\n                        />}\n                    </div>\n\n                }\n\n                <div className=\"spaceXY  d-block\">\n                    <h3 className=\"subTitle  text-center\">TOTAL DE SEMANA ACUMULADO DE PERSONAS POR HORA DEL DÍA</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartHeatMap} - {dateEndHeatMap} )</span>\n                    {heatmapPersonTotal.length > 0 && <ButtonHeatMap />}\n                    <HeatMapDesktop data={heatmapPersonTotal} range={heatmapPersonRange} />\n                </div>\n                {toten !== 'CCPN003' &&\n                    <div className=\"spaceXY  d-block\">\n                        <h3 className=\"subTitle  text-center\">TOTAL ACUMULADO - GÉNERO</h3>\n                        <span className=\"spaceBottom range-date text-center d-block\">( {dateStartAgePerson} - {dateEndAgePerson} )</span>\n                        {rangePersonAges.length > 0 && <ButtonRangeAges />}\n                        <div className=\"detailGrafic spaceBottom\">\n                            <span className=\"detailMax\"></span>\n                            {rangePersonAges.length > 0 && <DateAgeRanges />}\n                        </div>\n\n                        <GraficCompare data={rangePersonAges} id=\"graficAgeRange\" />\n                        {rangePersonAges.length > 0 && <ButtonsExport methodpdf={() => exportPDFPerson('graficAgeRange', dateStartAgePerson, dateEndAgePerson, 'TOTAL ACUMULADO GENERO', ``, false, toten)}\n                            methodcsv={() => console.log('invalid')}\n                            methodshare={() => downloadImageDesktop('graficAgeRange', dateStartAgePerson, dateEndAgePerson, 'age', 'P')}\n                        />}\n                    </div>\n                }\n\n\n            </div>\n        </Main>\n    )\n}\n","import React,{useEffect,useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router-dom'\nimport { LoginScreen } from '../interfaz/pages/auth/LoginScreen';\nimport { PersonScreen } from '../interfaz/pages/desktop/person/PersonScreen';\n\nexport const PublicRoute =({component: Component,isAuthenticated, ...rest}) => {\n\n    \n    return(\n        <>\n        {isAuthenticated ? <Redirect to=\"/\" />   :  <Route  {...rest} render={props => (\n            <Component {...props} />  \n    )}  />}\n    </>\n    )\n    }\n    ","import React , { useState, useEffect } from 'react';\n\n// React-router-dom\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRouter = ({component: Component,isAuthenticated, ...rest}) => {\n\n\n\nreturn (\n    <>\n        {isAuthenticated ?  <Route {...rest} render={props => (\n            <Component {...props} />  \n    )} />   :  <Redirect to=\"/auth/login\" /> }\n    </>\n  /*   loggedIn  \n    ? \n    <Route {...rest} render={props => (\n            <Component {...props} />  \n    )} />   \n    :\n    <Redirect to=\"/auth/login\" /> */\n)\n}\n","import React, { useState } from 'react'\n\n/**\n * @module Hooks\n */\n\n/**\n * \n * @param {Object} buttons Objecto con los botonnes a generar\n * @returns {Object} \n */\n\nconst useButtonsReport = (buttons={}) => {\n    const [sectionValue, setSectionValue] = useState(Object.keys(buttons)[0]);\n    const ButtonsHtml=()=>(\n        <div  className=\"groupButtons text-center spaceBottom\">\n            {Object.keys(buttons).map((v,_i)=>(\n                  <button  key={_i} onClick={({target})=>setSectionValue(v)} className={`filterBtn ${v===sectionValue  ? 'active' : ''}`}>{buttons[v]}</button>\n            ))}\n        </div>\n        \n    )\n\n    return [ButtonsHtml,sectionValue,setSectionValue,buttons];\n}\n\nexport {useButtonsReport}","import { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\"\n\n/**\n * @module Actions\n */\n\n/**\n * funcion para traer los datos de Trazabilidad\n * @returns callback con los datos\n */\nconst getTrazabilidad = () => {\n    return async (dispatch,getState) => {\n        const { groups } = getState().auth;\n        const groupId = groups.filter(g => g.code === types.groupName)[0].id;\n        const resp = await (await fetchConToken(`/resources/tracking?group_id=${groupId}`)).json();\n        const { resources, hours } = resp\n\n        dispatch(initTrazabilidad({\n            resources,\n            hours\n        }))\n    }\n}\n\n/**\n * funcion para inizializar los datos de tranzabilidad\n * @param {Object} data resources y hots de trazabilidad\n */\nconst initTrazabilidad = (data) => ({\n    type: types.initialDataTrazabilidad,\n    payload: data\n})\n\n/**\n * funcion para traer los datos por las hora\n * @param {Object} payload \n */\nconst setTrazabilidadByHour = (payload) => ({\n    type: types.changeTrazabilidadByHour,\n    payload\n})\n\nexport{\n    getTrazabilidad,\n    setTrazabilidadByHour\n}","import React, { useEffect, useState, useRef } from 'react'\nimport { useButtonsReport } from '../../../../hooks/useButtonsReport'\nimport { Main } from '../../../ui/layout/Main'\nimport data from '../../../../data/sensor.json'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getTrazabilidad, setTrazabilidadByHour } from '../../../../action/trazabilidad'\n\nconst maxHour = 24;\nexport const TrazibilidadScreen = ({ location }) => {\n    const dispatch = useDispatch()\n    const [graphicsData, setGraphicsData] = useState([]);\n    const { resources, hours } = useSelector(state => state.trazabilidad);\n    const [EquipoHtmlBtn, valueEquipo, setEquipo, equipoJson] = useButtonsReport({ todos: 'TODOS', CCPN001: 'TÓTEM 1', CCPN002: 'TÓTEM 2', CCPN003: 'PANISTERÍA'/* , donbuffet: 'DON BUFFET', mediterraneo: 'MEDITERRÁNEO', entrepaginas: 'ENTRE PÁGINAS' */ })\n    const [ContactoHtmlBtn, valueContacto, setContacto] = useButtonsReport({ todos: 'TODOS', cliente: 'CLIENTES', visitantes: 'VISITANTES' })\n    const [PeriodoHtmlBtn, valuePeriodo, setPeriodo] = useButtonsReport({ todos: 'TODOS', d7: '07 DÍAS', d15: '15 DÍAS', d30: '30 DÍAS' })\n    const [GeneroHtmlBtn, valueGenero, setGenero] = useButtonsReport({ total: 'TODOS', male: 'HOMBRES', female: 'MUJERES' })\n    const [isPlay, setIsPlay] = useState(true);\n    const [timeOut, setTimeOut] = useState(null)\n    const [age, setAge] = useState({\n        agestart: '',\n        ageend: '',\n        all: true\n    })\n    const inputStartAge = useRef(null)\n    const inputEndAge = useRef(null)\n    const [time, setTime] = useState({\n        timestart: '',\n        timeend: '',\n        all: true\n    })\n    const inputStartTime = useRef(null)\n    const inputEndTime = useRef(null)\n    const [countHours, setCountHours] = useState([]);\n\n    const [counter, setCounter] = useState(0)\n\n    const [numberHour, setNumberHour] = useState('');\n    const draw = (data, value = 'total') => {\n        let dataf;\n        dataf=data.filter(d=>d.name===valueEquipo);\n        if(dataf.length===0){\n            dataf=data;\n        }\n        const canvas = document.getElementById('monitoreoComercio');\n        const ctx = canvas.getContext(\"2d\");\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        dataf.forEach(c => {\n            ctx.beginPath();\n            ctx.arc(c.x, c.y, c.ratio+40, 0, 2 * Math.PI, false);\n            ctx.fillStyle = c.color;\n            ctx.fill();\n            ctx.font = \"13px Arial\";\n            ctx.fillStyle = \"#FFF\";\n            ctx.fillText(c[valueGenero], c.labelX, c.labelY);\n        })\n    }\n\n    useEffect(() => {\n        (() => {\n            /*             setGraphicsData(resources); */\n            dispatch(getTrazabilidad())\n        })()\n    }, [])\n    useEffect(() => {\n        const countHrs = new Array(24).fill(0).map((_, i) => i);\n        setCountHours(countHrs);\n    }, [])\n\n\n    useEffect(() => {\n        const twodBtn=document.querySelector('#sec_genero .groupButtons button:nth-child(2)');\n        const threetBtn=document.querySelector('#sec_genero .groupButtons button:nth-child(3)');\n        if(valueEquipo==='CCPN003'){\n            setGenero('total')\n            twodBtn.classList.add('hide');\n            threetBtn.classList.add('hide');\n        }else{\n            twodBtn.classList.remove('hide');\n            threetBtn.classList.remove('hide');\n        }\n        draw(resources, valueGenero);\n    }, [resources, , valueGenero,valueEquipo])\n    const newHour = (hour) => {\n        const dataHourFilter = hours.filter(h => h.hour === hour);\n\n        dispatch(setTrazabilidadByHour(dataHourFilter[0].resources))\n\n    }\n\n    /*  const setRange = (value, type) => {\n         const valueCount = value.split(',');\n         if (type === 'time') {\n             inputStartTime.current.value = ''\n             inputEndTime.current.value = ''\n             setTime({\n                 all: false,\n                 timestart: valueCount[0],\n                 timeend: valueCount[1]\n             })\n         } else {\n             inputStartAge.current.value = ''\n             inputEndAge.current.value = ''\n             setAge({\n                 all: false,\n                 agestart: valueCount[0],\n                 ageend: valueCount[1]\n             })\n         }\n     } */\n\n    const isPlayButton = () => {\n        setIsPlay(!isPlay)\n\n    }\n    const resetTimer = () => {\n        startCounter(maxHour);\n        setNumberHour('');\n        setCounter(0);\n        setIsPlay(true);\n        dispatch(getTrazabilidad())\n        /* \n                setGraphicsData(data.sensores); */\n\n    }\n    const setHour = (num) => {\n        setNumberHour(num);\n        setCounter(num);\n        setIsPlay(true);\n        const dataHourFilter = hours.filter(h => h.hour === num);\n\n        dispatch(setTrazabilidadByHour(dataHourFilter[0].resources))\n    }\n\n    const startCounter = (number) => {\n        if (!isPlay) {\n            clearTimeout(timeOut)\n            return false;\n        }\n        if (number >= maxHour) {\n            setCounter(0);\n            setIsPlay(true)\n            setIsPlay(true)\n            clearTimeout(timeOut)\n            return false;\n        }\n\n        let interval = setTimeout(() => {\n            setNumberHour(n => number)\n            newHour(number);\n            setCounter(n => number + 1)\n            startCounter(number + 1);\n        }, 1000);\n        setTimeOut(interval)\n\n    }\n\n    return (\n        <Main>\n            <h3 className=\"subTitle spaceTop\">TRAZABILIDAD DE USUARIOS EN COMERCIO</h3>\n            <div className=\"d-grid-report  content-btntext spaceTop\">\n                <p className=\"text-report\">Seleccione equipo:</p>\n                <EquipoHtmlBtn />\n            </div>\n            {/* <div className=\"d-grid-report  content-btntext\">\n                <p className=\"text-report\">Seleccione tipo de<br /> Contacto:</p>\n                <ContactoHtmlBtn />\n            </div> */}\n            <div className=\"d-grid-report  content-btntext\" id=\"sec_genero\">\n                <p className=\"text-report\">Seleccione Género:</p>\n                <GeneroHtmlBtn />\n            </div>\n            {/*  <div className=\"d-grid-report  content-btntext \">\n                <p className=\"text-report\">Seleccione una Edad:</p>\n                <div className=\"groupButtons report\">\n                    <button onClick={() => setAge({ all: true, agestart: '', ageend: '' })} className={`filterBtn ${age.all ? 'active' : ''}`}>TODOS</button>\n                    <select onChange={({ target }) => setRange(target.value, 'age')} className=\"filterBtn\">\n                        <option value=\"\" hidden>EDAD ESPECIFICA</option>\n                        <option value=\"-18,24\">-18 a 24</option>\n                        <option value=\"24,30\">24 a 30</option>\n                        <option value=\"30,36\">30 a 36</option>\n                        <option value=\"36,42\">36 a 42</option>\n                        <option value=\"42,48\">42 a 48</option>\n                        <option value=\"54,60\">54 a 60+</option>\n                    </select>\n                    <input min=\"1\" placeholder=\"INGRESE EDAD DE INICIO\" ref={inputStartAge} name=\"agestart\" onChange={({ target }) => setAge({ ...age, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                    <input min=\"1\" placeholder=\"INGRESE EDAD DE FIN\" ref={inputEndAge} name=\"ageend\" onChange={({ target }) => setAge({ ...age, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                </div>\n            </div> */}\n            {/*  <div className=\"d-grid-report  content-btntext\">\n                <p className=\"text-report\">Seleccione Periodo:</p>\n                <PeriodoHtmlBtn />\n            </div> */}\n            {/* <div className=\"d-grid-report  content-btntext \">\n                <p className=\"text-report\">Seleccione una Hora:</p>\n                <div className=\"groupButtons report\">\n                    <button onClick={() => setTime({ all: true, timeend: '', timestart: '' })} className={`filterBtn ${time.all ? 'active' : ''}`}>TODOS</button>\n                    <select onChange={({ target }) => setRange(target.value, 'time')} className=\"filterBtn\">\n                        <option value=\"\" hidden>SELECCIONE RANGO DE HORA</option>\n                        <option value=\"0,4\">0h a 4h</option>\n                        <option value=\"4,8\">4h a 8h</option>\n                        <option value=\"12,16\">12h a 16h</option>\n                        <option value=\"20,24\">20h a 24h</option>\n                    </select>\n                    <input min=\"1\" placeholder=\"INGRESE HORA DE INICIO\" ref={inputStartTime} name=\"timestart\" onChange={({ target }) => setTime({ ...time, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                    <input min=\"1\" placeholder=\"INGRESE HORA DE FIN\" ref={inputEndTime} name=\"timeend\" onChange={({ target }) => setTime({ ...time, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                </div>\n            </div> */}\n            <div className=\"d-grid-report spaceTopSmall  content-btntext\">\n                <p className=\"text-report\"></p>\n                <button className={`filterBtn w-fit `} onClick={resetTimer}>TODAS LAS HORAS</button>\n            </div>\n            <div className=\"d-grid-report spaceTopSmall  content-btntext\">\n                <p className=\"text-report\"></p>\n                <div className=\"listhour\">\n                    {countHours.map((h, index) => (\n                        <span key={h} onClick={() => setHour(h)} className={`listhour__item ${Number(h) === numberHour ? 'active' : ''}`}>{h}</span>\n                    ))}\n                </div>\n            </div>\n            <div className=\"contentcanvas spaceTop\">\n                <canvas style={{ backgroundImage: `url(/assets/images/planoflujo.jpg)` }} className=\"mt\" id=\"monitoreoComercio\" width=\"1024\" height=\"556\"></canvas>\n                <div className=\"contencanvas__play\">\n                    <img className=\"contencanvas__btn\" onClick={() => { startCounter(counter); isPlayButton() }} src='/assets/icons/play.svg' alt=\"imgButton\" />\n                </div>\n            </div>\n        </Main>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setGraphicsInHourForCurrentDate, setGraphicsInRangeForCurrentDate, setGraphicsInWeekForCurrentDate, startPersonData } from '../../../action/person';\nimport { formatNumber } from '../../../helpers/calculo';\nimport { useDate } from '../../../hooks/useDate';\nimport { GraficBar } from '../../ui/grafics/GraficBar';\nimport { BoxDate } from '../../ui/utils/boxes/BoxDate'\nimport { BoxGender } from '../../ui/utils/boxes/BoxGender'\nimport { format } from 'date-fns'\nimport { downloadImageDesktop, exportPDFPerson } from '../../../helpers/exportPDF';\nimport { BoxWithOutPercent } from '../../ui/utils/boxes/BoxWithOutPercent';\nimport { BoxWithPercent } from '../../ui/utils/boxes/BoxWithPercent';\nimport { GraficCompare } from '../../ui/grafics/GraficCompare';\nexport const MobileScreen = () => {\n    const dispatch = useDispatch();\n    const { hoursPersonTotal, hoursPersonMale, hoursPersonFemale, weekPersonTotal, weekPersonMale,\n        weekPersonFemale,\n        rangePersonAges,\n        maxHourPerson,\n        maxHourPersonMale,\n        maxHourPersonFemale,\n        maxWeekPerson,\n        maxWeekPersonMale,\n        maxWeekPersonFemale} = useSelector(state => state.person);\n\n        \n    /*  */\n    const [DateHour,startDateHour,endDateHour, setStartDateHrTotal, setEndDateHrTotal] = useDate(setGraphicsInHourForCurrentDate, '', 'total', 'dateStartHourPerson', 'dateEndHourPerson', '');\n    const [DateHourMale,startDateHourMale ,endDateHourMale , setStartDateHrMale, setEndDateHrMale] = useDate(setGraphicsInHourForCurrentDate, '', 'male', 'dateStartHourMalePerson', 'dateEndHourMalePerson', '');\n    const [DateHourFemale,startDateHourFemale , endDateHourFemale, setStartDateHrFemale, setEndDateHrFemale] = useDate(setGraphicsInHourForCurrentDate, '', 'female', 'dateStartHourFemalePerson', 'dateEndHourFemalePerson', '');\n    const [DateWeek, dateStartWeekPerson,dateEndWeekPerson , setStartDateWkTotal, setEndDateWkTotal] = useDate(setGraphicsInWeekForCurrentDate, '', 'total', 'dateStartWeekPerson', 'dateEndWeekPerson', '');\n    const [DateWeekMale,dateStartWeekMalePerson ,dateEndWeekMalePerson , setStartDateWkMale, setEndDateWkMale] = useDate(setGraphicsInWeekForCurrentDate, '', 'male', 'dateStartWeekMalePerson', 'dateEndWeekMalePerson', '');\n    const [DateWeekFemale,dateStartWeekFemalePerson ,dateEndWeekFemalePerson , setStartDateWkFemale, setEndDateWkFemale] = useDate(setGraphicsInWeekForCurrentDate, '', 'female', 'dateStartWeekFemalePerson', 'dateEndWeekFemalePerson', '');\n    const [DateAgeRanges,dateStartAgePerson ,dateEndAgePerson , setStartDateAgeRg, setEndDateAgeRg] = useDate(setGraphicsInRangeForCurrentDate, '', 'total', 'dateStartAgePerson', 'dateEndAgePerson', '');\n    useEffect(() => {\n        (() => {\n            dispatch(startPersonData())\n        })()\n    }, [dispatch])\n    const refresh=()=>{\n        window.location.reload();\n    }\n\n    return (\n        <div id=\"mobileversion\">\n            <header>\n                <div className=\"headerTop d-flex auth\">\n                    <img className=\"imgSmall\" src=\"/assets/images/header/onlysoda.png\" alt=\"logosoda\" />\n                    <h1 className=\"titleHeadAuth\">\n                        data <br />\n                    street <br />\n                    performance\n                </h1>\n                </div>\n                <div className=\"w-100 text-center logoMiddle\">\n                    <img src=\"./assets/images/header/soda.png\" alt=\"logosoda\" />\n                </div>\n            </header>\n            <div className=\"codecontent\">\n                <span className=\"code\">PE.CCPN.01</span>\n            </div>\n\n            <div className=\"actionButtons\">\n                <div className=\"grid-2\">\n                    <button className=\"active\"><img src=\"./assets/icons/mobile/person-mobile.svg\" alt=\"person\" /><span>Personas</span></button>\n                </div>\n                <div className=\"grid-2\">\n                    <button><img src=\"./assets/icons/mobile/calendar-mobile.png\" alt=\"calendar\" /><span>Tiempo Real</span></button>\n                    <button onClick={refresh}><img src=\"./assets/icons/mobile/calendar-mobile.png\"  alt=\"calendar\" /><span>Actualizar</span></button>\n\n                </div>\n            </div>\n            <div className=\"codecontent\">\n                <span className=\"code\">PERSONAS</span>\n            </div>\n\n            <div className=\"spaceXY fitmobile border-bottom\">\n                <BoxDate count={45} percent={0} />\n                <div className=\"grid-2 spaceTopSmall\">\n                    <BoxGender count={4} total={100} />\n                    <BoxGender count={4} total={100} />\n                </div>\n            </div>\n\n            <div className=\"spaceXY fitmobile border-bottom\">\n                <h3 className=\"subTitle  text-center\">TOTAL DE PERSONAS POR HORA DEL DÍA</h3>\n\n                <div className=\"detailGrafic spaceXY \">\n                    <span className=\"detailMax\">Hora más transitada: {maxHourPerson?.hour} con {formatNumber(maxHourPerson?.total)} personas</span>\n                    {hoursPersonTotal.length > 0 && <DateHour />}\n                </div>\n                <GraficBar data={hoursPersonTotal} label=\"Total de Personas\" dtsetbg=\"#0502D3\"\n                    optionbg=\"#454545\"\n                    legendbg=\"#454545\"\n                    title=\" Hora:\"\n                    labelop=\" Total de Personas:\"\n                    scltxtlbl=\"Cantidad de Personas\"\n                    scalebg=\"#0502D3\"\n                    theme=\"bg-yellow\"\n                    id=\"grafichourTotal\" />\n                <div className=\"btnExportsGraphics\">\n\n                    <button onClick={() => downloadImageDesktop('grafichourTotal', format(startDateHour, 'yyyy-MM-dd'), format(endDateHour, 'yyyy-MM-dd'), 'hour', 'P')}><img src=\"./assets/icons/share.svg\" /></button>\n                </div>\n            </div>\n            <div className=\"spaceXY fitmobile border-bottom\">\n                <h3 className=\"subTitle  text-center\">TOTAL DE HOMBRES POR HORA DEL DÍA</h3>\n\n                <div className=\"detailGrafic spaceXY \">\n                    <span className=\"detailMax\">Hora más transitada: {maxHourPersonMale?.hour} con {formatNumber(maxHourPersonMale?.total)} personas</span>\n                    {hoursPersonMale.length > 0 && <DateHourMale />}\n                </div>\n                <GraficBar data={hoursPersonMale} label=\"Total de Personas\" dtsetbg=\"#0502D3\"\n                    optionbg=\"#454545\"\n                    legendbg=\"#454545\"\n                    title=\" Hora:\"\n                    labelop=\" Total de Hombres:\"\n                    scltxtlbl=\"Cantidad de Hombres\"\n                    scalebg=\"#0502D3\"\n                    theme=\"bg-yellow\"\n                    id=\"grafichourMale\" />\n                <div className=\"btnExportsGraphics\">\n\n                    <button onClick={() => downloadImageDesktop('grafichourMale', format(startDateHourMale, 'yyyy-MM-dd'), format(endDateHourMale, 'yyyy-MM-dd'), 'hour', 'P')}><img src=\"./assets/icons/share.svg\" /></button>\n                </div>\n            </div>\n\n\n            <div className=\"spaceXY fitmobile border-bottom\">\n                <h3 className=\"subTitle  text-center\">TOTAL DE MUJERES POR HORA DEL DÍA</h3>\n\n                <div className=\"detailGrafic spaceXY\">\n                    <span className=\"detailMax\">Hora más transitada: {maxHourPersonFemale?.hour} con {formatNumber(maxHourPersonFemale?.total)} personas</span>\n                    {hoursPersonFemale.length > 0 && <DateHourFemale />}\n                </div>\n                <GraficBar data={hoursPersonFemale} label=\"Total de Mujeres\" dtsetbg=\"#0502D3\"\n                    optionbg=\"#454545\"\n                    legendbg=\"#454545\"\n                    title=\" Hora:\"\n                    labelop=\" Total de Mujeres:\"\n                    scltxtlbl=\"Cantidad de Mujeres\"\n                    scalebg=\"#0502D3\"\n                    id=\"grafichourfemale\"\n                />\n                <div className=\"btnExportsGraphics\">\n                    {hoursPersonFemale.length > 0 && <button onClick={() => downloadImageDesktop('grafichourfemale', startDateHourFemale, endDateHourFemale, 'hour', 'P')}\n                    ><img src=\"./assets/icons/share.svg\" /></button>\n                    }\n\n                </div>\n            </div>\n\n            <div className=\"spaceXY fitmobile border-bottom\">\n                <BoxWithOutPercent count={45} percent={0} />\n                <div className=\"grid-2 spaceTopSmall\">\n                    <BoxGender count={4} total={100} />\n                    <BoxGender count={4} total={100} />\n                </div>\n            </div>\n            <div className=\"spaceXY fitmobile\">\n                <BoxWithPercent count={45} percent={0} />\n                <div className=\"grid-2 spaceTopSmall\">\n                    <BoxGender count={4} total={100} />\n                    <BoxGender count={4} total={100} />\n                </div>\n            </div>\n\n            <div className=\"spaceXY fitmobile border-bottom\">\n                <h3 className=\"subTitle  text-center\">TOTAL DE PERSONAS POR DÍA DE LA SEMANA</h3>\n                <div className=\"detailGrafic spaceXY\">\n                    <span className=\"detailMax\">Día de la semana más transitado: {maxWeekPerson?.day} con {formatNumber(maxWeekPerson?.total)} personas</span>\n                    {weekPersonTotal.length > 0 && <DateWeek />}\n                </div>\n                <GraficBar data={weekPersonTotal} label=\"Tiempo (Días)\"\n                    dtsetbg=\"#0a18f1\"\n                    optionbg=\"#454545\"\n                    scalebg=\"#0502D3\"\n                    title=\"Día\"\n                    labelop=\"tránsito de personas\"\n                    scltxtlbl=\"Cantidad de Personas\"\n                    id=\"graficweek\"\n                />\n                <div className=\"btnExportsGraphics\">\n                    {weekPersonTotal.length > 0 && <button onClick={() => downloadImageDesktop('graficweek', dateStartWeekPerson, dateEndWeekPerson, 'week', 'P')}\n                    ><img src=\"./assets/icons/share.svg\" /></button>}\n\n                </div>\n            </div>\n\n\n            <div className=\"spaceXY fitmobile border-bottom\">\n                <h3 className=\"subTitle  text-center\">TOTAL DE HOMBRES POR DÍA DE LA SEMANA</h3>\n                <div className=\"detailGrafic spaceXY\">\n                    <span className=\"detailMax\">Día de la semana más transitado: {maxWeekPersonMale?.day} con {formatNumber(maxWeekPersonMale?.total)} personas</span>\n                    {weekPersonMale.length > 0 && <DateWeekMale />}\n\n                </div>\n                <GraficBar data={weekPersonMale} label=\"Tiempo (Días)\"\n                    dtsetbg=\"#0a18f1\"\n                    optionbg=\"#454545\"\n                    scalebg=\"#0502D3\"\n                    title=\"Día\"\n                    labelop=\"tránsito de Hombres\"\n                    scltxtlbl=\"Cantidad de Hombres\"\n                    id=\"graficweekmale\"\n                />\n                <div className=\"btnExportsGraphics\">\n                    {weekPersonMale.length > 0 && <button onClick={() => downloadImageDesktop('graficweekmale', dateStartWeekMalePerson, dateEndWeekMalePerson, 'week', 'P')}\n                    ><img src=\"./assets/icons/share.svg\" /></button>}\n\n                </div>\n            </div>\n\n\n            <div className=\"spaceXY fitmobile border-bottom\">\n                <h3 className=\"subTitle  text-center\">TOTAL DE MUJERES POR DÍA DE LA SEMANA</h3>\n                <div className=\"detailGrafic spaceXY\">\n                    <span className=\"detailMax\">Día de la semana más transitado: {maxWeekPersonFemale?.day} con {formatNumber(maxWeekPersonFemale?.total)} personas</span>\n                    {weekPersonFemale.length > 0 && <DateWeekFemale />}\n\n                </div>\n                <GraficBar data={weekPersonFemale} label=\"Tiempo (Días)\"\n                    dtsetbg=\"#0a18f1\"\n                    optionbg=\"#454545\"\n                    scalebg=\"#0502D3\"\n                    title=\"Día\"\n                    labelop=\"tránsito de Mujeres\"\n                    scltxtlbl=\"Cantidad de Mujeres\"\n                    id=\"graficweekfemale\"\n                />\n                <div className=\"btnExportsGraphics\">\n                    {weekPersonFemale.length > 0 && <button onClick={() => downloadImageDesktop('graficweekfemale', dateStartWeekFemalePerson, dateEndWeekFemalePerson, 'week', 'P')}\n                    ><img src=\"./assets/icons/share.svg\" /></button>}\n\n                </div>\n            </div>\n\n            <div className=\"spaceXY fitmobile border-bottom\" >\n                <BoxDate count={45} percent={0} />\n                <div className=\"grid-2 spaceTopSmall\">\n                    <BoxGender count={4} total={100} />\n                    <BoxGender count={4} total={100} />\n                </div>\n            </div>\n\n\n            <div className=\"spaceXY fitmobile\">\n                <h3 className=\"subTitle  text-center\">TOTAL ACUMULADO - GÉNERO</h3>\n\n                <div className=\"detailGrafic spaceXY\">\n                    <span className=\"detailMax\"></span>\n                    {rangePersonAges.length > 0 && <DateAgeRanges />}\n                </div>\n                <div className=\"btnExportsGraphics\">\n                    <GraficCompare data={rangePersonAges} id=\"graficAgeRange\" />\n                    {rangePersonAges.length > 0 && <button onClick={() => downloadImageDesktop('graficAgeRange', dateStartAgePerson, dateEndAgePerson, 'age', 'P')}\n                    ><img src=\"./assets/icons/share.svg\" /></button>}\n\n                </div>\n            </div>\n\n\n\n        </div>\n    )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useButtonsReport } from '../../../../hooks/useButtonsReport'\nimport { useDateReport } from '../../../../hooks/useDateReport'\nimport { Main } from '../../../ui/layout/Main'\nimport { format, subDays } from 'date-fns'\nimport Swal from 'sweetalert2'\nObject.filter = (obj, predicate) =>\n    Object.keys(obj)\n        .filter(key => predicate(obj[key]))\n        .reduce((res, key) => Object.assign(res, { [key]: obj[key] }), {});\n\nexport const EspecificoScreen = ({ location, history }) => {\n    const [TipoHtmlBtn, valueTipo, setTipo] = useButtonsReport({ c: 'COMERCIAL', e: 'EJECUTIVO' })\n    const [EquipoHtmlBtn, valueEquipo, setEquipo, equipoJson] = useButtonsReport({ todos: 'TODOS', CCPN001: 'TÓTEM 1', CCPN002: 'TÓTEM 2', CCPN003: 'PANISTERÍA'/* , donbuffet: 'DON BUFFET', mediterraneo: 'MEDITERRÁNEO', entrepaginas: 'ENTRE PÁGINAS' */ })\n    const [PeriodoHtmlBtn, valuePeriodo, setPeriodo] = useButtonsReport({ todos: 'TODOS', d7: '07 DÍAS', d15: '15 DÍAS', d30: '30 DÍAS' })\n    const [ContactoHtmlBtn, valueContacto, setContacto] = useButtonsReport({ todos: 'TODOS', cliente: 'CLIENTES', visitantes: 'VISITANTES' })\n    const [GeneroHtmlBtn, valueGenero, setGenero] = useButtonsReport({ todos: 'TODOS', male: 'HOMBRES', female: 'MUJERES' })\n    const [DateHtml, startDateValue, endDateValue] = useDateReport()\n    const [age, setAge] = useState({\n        agestart: '',\n        ageend: '',\n        all: true\n    })\n    const inputStartAge = useRef(null)\n    const inputEndAge = useRef(null)\n\n    const [time, setTime] = useState({\n        timestart: '',\n        timeend: '',\n        all: true\n    })\n    const inputStartTime = useRef(null)\n    const inputEndTime = useRef(null)\n\n    const [isEspecific, setIsEspecific] = useState(false);\n\n\n    const generar = async () => {\n        let data;\n\n        if (isEspecific) {\n\n            if (age.all === false && age.agestart == '') {\n                return Swal.fire('Error', 'El campo de inicio de edad no puedo estar vacio', 'error')\n            }\n            if (age.all == false && age.ageend === '' /* && inputEndAge.value==='' */) {\n                return Swal.fire('Error', 'El campo de fin de edad no puedo estar vacio', 'error')\n            }\n            if (time.all === false && time.timestart == '') {\n                return Swal.fire('Error', 'El campo de inicio de hora no puedo estar vacio', 'error')\n            }\n            if (time.all == false && time.timeend === '' /* && inputEndAge.value==='' */) {\n                return Swal.fire('Error', 'El campo de fin de hora no puedo estar vacio', 'error')\n            }\n\n            //\n\n            if (age.all === false && Number(age.agestart) > Number(age.ageend)) {\n                return Swal.fire('Error', 'El campo de inicio de edad no puedo ser mayor a la edad de fin', 'error')\n            }\n            if (time.all === false && Number(time.timestart) >= 24) {\n                return Swal.fire('Error', 'El formato debe de ser 24H', 'error')\n            }\n            if (time.all === false && Number(time.timeend) >= 24) {\n                return Swal.fire('Error', 'El formato debe de ser 24H', 'error')\n            }\n            if (time.all === false && Number(time.timestart) >= Number(time.timeend)) {\n                return Swal.fire('Error', 'El campo de inicio de hora no puedo ser mayor a la hora de fin', 'error')\n            }\n\n            let timeStart = time.timestart;\n            let timeFinal = time.timeend;\n\n            if (time.timestart.length === 1) {\n                timeStart = 0 + time.timestart;\n\n\n            }\n            if (time.timestart.length === 1) {\n                timeFinal = 0 + time.timeend;\n            }\n            data = {\n                contact_type: valueContacto,\n                report_type: valueTipo,\n                resource: (equipoJson[valueEquipo]).toLowerCase(),\n                gender: valueGenero === 'todos' ? 'total' : valueGenero,\n                date_from: format(startDateValue, 'yyyy-MM-dd'),\n                date_to: format(endDateValue, 'yyyy-MM-dd'),\n                age_from: age.agestart,\n                age_to: age.ageend,\n                time_from: time.timestart,\n                time_to: time.timeend\n            }\n\n        } else {\n            if (valuePeriodo === 'todos') {\n\n                data = {\n                    report_type: valueTipo,\n                    resource: valueEquipo,\n                    date_from: '2020-12-02',\n                    date_to: format(new Date(), 'yyyy-MM-dd'),\n                    time_from: '2020-12-02%00:00',\n                    time_to: `${format(new Date(), 'yyyy-MM-dd')}%00:00`,\n                    gender: 'total'\n                }\n            } else {\n                const newDate = subDays(new Date(), Number(valuePeriodo.replace('d', '')));\n\n                data = {\n                    report_type: valueTipo,\n                    resource: (equipoJson[valueEquipo]).toLowerCase(),\n                    date_from: format(newDate, 'yyyy-MM-dd'),\n                    date_to: format(new Date(), 'yyyy-MM-dd'),\n                    time_from: `${format(newDate, 'yyyy-MM-dd')}%00:00`,\n                    time_to: `${format(new Date(), 'yyyy-MM-dd')}%00:00`,\n                    gender: 'total'\n                }\n            }\n        }\n\n        const dataFilter = Object.filter(data, reporte => reporte !== 'todos' && reporte !== '');\n        if (valueTipo === 'c') {\n            return history.push('/reportes-screen/comercial', dataFilter);\n        }\n        history.push('/reportes-screen/ejecutivo', dataFilter);\n    }\n\n    const resetEspecifico = () => {\n        setContacto('todos')\n        setGenero('todos')\n\n        setAge({\n            all: true,\n            ageend: '',\n            agestart: ''\n        })\n        setTime({\n            all: true,\n            timestart: '',\n            timeend: ''\n        })\n        setIsEspecific(!isEspecific);\n        /*   if (!!document.getElementById('contentEspec')) {\n              inputStartTime.current.value = ''\n              inputEndTime.current.value = ''\n              inputStartAge.current.value = ''\n              inputEndAge.current.value = ''\n  \n          } */\n    }\n\n    const setRange = (value, type) => {\n        const valueCount = value.split(',');\n        if (type === 'time') {\n            inputStartTime.current.value = ''\n            inputEndTime.current.value = ''\n            setTime({\n                all: false,\n                timestart: valueCount[0],\n                timeend: valueCount[1]\n            })\n        } else {\n            inputStartAge.current.value = ''\n            inputEndAge.current.value = ''\n            setAge({\n                all: false,\n                agestart: valueCount[0],\n                ageend: valueCount[1]\n            })\n        }\n    }\n\n\n    useEffect(() => {\n        (() => {\n            const btn = document.querySelector('#sec_genero');\n            if (isEspecific) {\n                if (valueEquipo === 'CCPN003') {\n                    setGenero('todos')\n                    setTimeout(() => {\n                        btn.querySelector('.groupButtons button:nth-child(2)').classList.add('hide')\n                        btn.querySelector('.groupButtons button:nth-child(3)').classList.add('hide')\n                    }, 10);\n                    /* \n                    btn.querySelector('.groupButtons button:nth-child(2)').classList.add('hide')\n                    btn.querySelector('.groupButtons button:nth-child(3)').classList.add('hide')\n                     */\n                } else {\n                    console.log('no dio en el sensor no se ocultara los botones')\n                }\n            }\n        })()\n    }, [isEspecific,valueEquipo,valueTipo])\n\n    return (\n        <Main>\n            <h3 className=\"subTitle spaceXY\">GENERA TU REPORTE</h3>\n            <h3 className=\"subTitle color-secundary\">REPORTE GENERAL</h3>\n            <div className=\"d-grid-report spaceTop content-btntext\">\n                <p className=\"text-report\">Seleccione tipo de<br /> reporte:</p>\n                <TipoHtmlBtn />\n            </div>\n            <div className=\"d-grid-report  content-btntext\">\n                <p className=\"text-report\">Seleccione equipo:</p>\n                <EquipoHtmlBtn />\n            </div>\n            {!isEspecific &&\n                <div className=\"d-grid-report  content-btntext\">\n                    <p className=\"text-report\">Seleccione Periodo:</p>\n                    <PeriodoHtmlBtn />\n                </div>\n            }\n\n\n            <div className=\"groupButtons text-center spaceTop\">\n\n                <button onClick={resetEspecifico} className={`filterBtn`}>ESPECIFICO</button>\n                {!isEspecific && <button onClick={generar} className={`filterBtn`}>GENERAR</button>\n                }\n            </div>\n\n            {/*  */}\n\n            {isEspecific &&\n                <div id=\"contentEspec\">\n                    <h3 className=\"subTitle color-secundary spaceXY\">REPORTE ESPECIFICO</h3>\n                    {/*  <div className=\"d-grid-report  content-btntext\">\n                        <p className=\"text-report\">Seleccione tipo de<br /> Contacto:</p>\n                        <ContactoHtmlBtn />\n                    </div> */}\n                    <div className=\"d-grid-report  content-btntext\" id=\"sec_genero\">\n                        <p className=\"text-report\">Seleccione Género:</p>\n                        <GeneroHtmlBtn />\n                    </div>\n                    <div className=\"d-grid-report  content-btntext\">\n                        <p className=\"text-report\">Seleccione una Fecha:</p>\n                        <DateHtml />\n                    </div>\n                    {/*   <div className=\"d-grid-report  content-btntext \">\n                        <p className=\"text-report\">Seleccione una Edad:</p>\n                        <div className=\"groupButtons report\">\n                            <button onClick={() => setAge({ all: true, agestart: '', ageend: '' })} className={`filterBtn ${age.all ? 'active' : ''}`}>TODOS</button>\n                            <select onChange={({ target }) => setRange(target.value, 'age')} className=\"filterBtn\">\n                                <option value=\"-18,24\">-18 a 24</option>\n                                <option value=\"24,30\">24 a 30</option>\n                                <option value=\"30,36\">30 a 36</option>\n                                <option value=\"36,42\">36 a 42</option>\n                                <option value=\"42,48\">42 a 48</option>\n                                <option value=\"54,60\">54 a 60+</option>\n                            </select>\n                            <input min=\"1\" ref={inputStartAge} name=\"agestart\" onChange={({ target }) => setAge({ ...age, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                            <input min=\"1\" ref={inputEndAge} name=\"ageend\" onChange={({ target }) => setAge({ ...age, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                        </div>\n                    </div> */}\n                    {/*   <div className=\"d-grid-report spaceBottom content-btntext \">\n                        <p className=\"text-report\">Seleccione una Hora:</p>\n                        <div className=\"groupButtons report\">\n                            <button onClick={() => setTime({ all: true, timeend: '', timestart: '' })} className={`filterBtn ${time.all ? 'active' : ''}`}>TODOS</button>\n                            <select onChange={({ target }) => setRange(target.value, 'time')} className=\"filterBtn\">\n                                <option value=\"0,4\">0h a 4h</option>\n                                <option value=\"4,8\">4h a 8h</option>\n                                <option value=\"12,16\">12h a 16h</option>\n                                <option value=\"20,24\">20h a 24h</option>\n                            </select>\n                            <input min=\"1\" ref={inputStartTime} name=\"timestart\" onChange={({ target }) => setTime({ ...time, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                            <input min=\"1\" ref={inputEndTime} name=\"timeend\" onChange={({ target }) => setTime({ ...time, [target.name]: target.value, all: false })} className=\"filterBtn\" type=\"number\" />\n                        </div>\n                    </div> */}\n\n                    {isEspecific &&\n                        <div className=\"spaceBottomSmall text-center\">\n                            <button onClick={generar} className={`filterBtn  `}>GENERAR</button>\n                        </div>\n                    }\n                </div>\n\n            }\n\n        </Main>\n    )\n}\n","import React, { useState } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Swal from 'sweetalert2'\n\nimport { format, isAfter, isEqual,isBefore,endOfMonth } from 'date-fns'\n\n\nexport const useDateReport = () => {\n    const [startDateValue, setStartDateValue] = useState(new Date('2020-12-19'))\n    const [endDateValue, setEndDateValue] = useState(new Date())\n    const setStarDate = (date) => {\n     \n        \n        const year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\n        const month = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(date);\n        const day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\n        const yearEnd = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(endDateValue);\n        const monthEnd = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(endDateValue);\n        const dayEnd = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(endDateValue);\n        if (isAfter(new Date(year, month, day), new Date(yearEnd, monthEnd, dayEnd)) || isEqual(new Date(year, month, day), new Date(yearEnd, monthEnd, dayEnd))) {\n            return Swal.fire('Error','La fecha Inicio debe ser menor que la fecha de fin','error')\n        }\n        setStartDateValue(date);\n     \n    }\n    const setEndDate = (date) => {\n        \n        const year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(startDateValue);\n        const month = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(startDateValue);\n        const day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(startDateValue);\n        const yearEnd = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\n        const monthEnd = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(date);\n        const dayEnd = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\n\n        if (isBefore( new Date(yearEnd, monthEnd,dayEnd),new Date(year, month, day)) || isEqual(new Date(year, month, day), new Date(yearEnd, monthEnd, dayEnd))) {\n            return Swal.fire('Error','La fecha fin debe ser mayor que la fecha de inicio','error')\n        }\n        setEndDateValue(date);\n\n       \n    }\n   \n    const DateHtml = () => (\n        <div className=\"filterDate\">\n            <div className=\"date\">\n                <img src=\"/assets/images/icons/calendar.png\" className=\"icon_inputS\" alt=\"icon calendario\" />\n                <DatePicker\n                    selected={startDateValue}\n                    /*     locale=\"es\" */\n                    onChange={setStarDate}\n                    format='yyyy-MM-dd'\n                    maxDate={new Date()}\n                />\n            </div>\n            <div className=\"date\">\n                <img src=\"/assets/images/icons/calendar.png\" className=\"icon_inputS\" alt=\"icon calendario\" />\n                <DatePicker\n                    selected={endDateValue}\n                    /*  locale=\"es\" */\n                    onChange={setEndDate}\n                    format='yyyy-MM-dd'\n                    maxDate={new Date()}\n\n                />\n            </div>\n        </div>\n    );\n\n    return [DateHtml,startDateValue,endDateValue]\n}\n","import React, { useState } from 'react'\nimport { useButtonsReport } from '../../../../hooks/useButtonsReport'\nimport { Main } from '../../../ui/layout/Main'\nimport jsPDF from 'jspdf'\nimport { toPng } from 'html-to-image'\nexport const OperacionalScreen = () => {\n\n    const [EquipoHtmlBtn, valueEquipo, setEquipo] = useButtonsReport({ todos: 'TODOS', toten1: 'TÓTEM 1', toten2: 'TÓTEM 2' })\n    const [PeriodoHtmlBtn, valuePeriodo, setPeriodo] = useButtonsReport({ todos: 'TODOS', 7: '07 DÍAS', 15: '15 DÍAS', 30: '30 DÍAS' })\n    const [isLoading, setIsLoading] = useState(false);\n    const generar=()=>{\n        const imgExport = document.querySelector('#exportTable');\n        setIsLoading(true);\n        toPng(imgExport).then((dataUrl) => {\n\n            const doc = new jsPDF('l', 'pt');\n            const img = new Image()\n            img.src = '/assets/images/pdf/logoleft.png'\n            const img2 = new Image()\n            img2.src = '/assets/images/pdf/logorigth.png'\n            doc.addImage(img, 'png', 30, 10, 100, 20)\n            doc.addImage(img2, 'png', 750, 13, 65, 15)\n\n            doc.setFontSize(14);\n            doc.setTextColor('0502D3');\n\n            doc.text(30, 80, 'REPORTE OPERACIONAL')\n\n\n            doc.setFontSize(12);\n            doc.setTextColor('262626');\n            doc.text(30, 100, 'ULTIMOS 7 DÍAS')\n\n            doc.setFontSize(12);\n            doc.setTextColor('0502D3');\n            doc.text(30, 160, 'STATUS DE DISPOSITIVOS')\n\n            doc.setFontSize(9);\n            doc.setTextColor('0502D3');\n            doc.text(30, 200, 'HORA MÁS TRANSITADA: 23H CON 6740 PERSONAS')\n    \n            doc.setFontSize(9);\n            doc.setTextColor('424242');\n            doc.text(680, 200, 'RANGO:23/01/2021-26/01/2021')\n\n\n\n            doc.addImage(dataUrl, 10, 200, 830, 250)\n\n\n\n            doc.setFontSize(9);\n            doc.setTextColor('424242');\n            doc.text(30, 460, 'Reporte generado el 26/01/2021 - 19:43hrs/PE.CCPN.01')\n    \n            doc.setFontSize(9);\n            doc.setTextColor('424242');\n            doc.text(680, 460, 'Tipo de tótem: tótem acumulado')\n\n\n\n            doc.save('DSP-SODA-CCPN-PE-A01-20210216-20210223-REPORTE-OPERACIONAL.pdf');\n            \n            setIsLoading(false);\n        })\n    }\n\n\n    return (\n        <Main>\n             <h3 className=\"subTitle spaceXY\">REPORTE OPERACIONAL</h3>          \n            <div className=\"d-grid-report  content-btntext\">\n                <p className=\"text-report\">Seleccione equipo:</p>\n                <EquipoHtmlBtn />\n            </div>\n            <div className=\"d-grid-report  content-btntext\">\n                <p className=\"text-report\">Seleccione Periodo:</p>\n                <PeriodoHtmlBtn />\n            </div>\n\n            <div className=\"groupButtons text-center spaceXY\">\n                <button /* onClick={generar} */ className={`filterBtn`}>GENERAR</button>\n            </div>\n\n\n\n            <div id=\"exportTable\" className=\"contentTableSensor \">\n                    <table id=\"sensoresTable\"  >\n                        <thead>\n                            <tr>\n                                <th></th>\n                                <th>DOM</th>\n                                <th>LUN</th>\n                                <th>MAR</th>\n                                <th>MIÉ</th>\n                                <th>JUE</th>\n                                <th>VIE</th>\n                                <th>SÁB</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>TOTEM 1</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                            </tr>\n                            <tr>\n                                <td>TOTEM 2</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                                <td>Activo</td>\n                            </tr>\n                        </tbody>\n\n                    </table>\n                </div>\n\n\n                <div className=\"groupButtons text-center spaceXY\">\n                <button onClick={generar} className={`filterBtn active`}>{!isLoading ? 'GENERAR REPORTE'  : 'CARGANDO...'}</button>\n            </div>\n\n\n\n        </Main>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Main } from '../../../ui/layout/Main'\nimport jsPDF from 'jspdf'\nimport { toPng } from 'html-to-image'\nimport { BoxDate } from '../../../ui/utils/boxes/BoxDate'\nimport { BoxWithOutPercent } from '../../../ui/utils/boxes/BoxWithOutPercent'\nimport { BoxWithPercent } from '../../../ui/utils/boxes/BoxWithPercent'\nimport { BoxDateRange } from '../../../ui/utils/boxes/BoxDateRange'\nimport { BoxGender } from '../../../ui/utils/boxes/BoxGender'\nimport { GraficBar } from '../../../ui/grafics/GraficBar'\nimport { GraficLine } from '../../../ui/grafics/GraficLine'\nimport { fetchConToken } from '../../../../helpers/fetch'\nimport { format, subDays, differenceInDays } from 'date-fns'\nimport { formatNumber } from '../../../../helpers/calculo'\n\nexport const ComercialScreenReport = ({ location, history }) => {\n    const [dataFilter, setDataFilter] = useState({\n        hours: [],\n        week: [],\n        month: [],\n        progress: []\n    })\n    const [isLoading, setIsLoading] = useState(false);\n    const [textGender, setTextGender] = useState('PERSONAS');\n    const [differenceInDay, setDifferenceInDay] = useState('7');\n    useEffect(() => {\n        (async () => {\n            if (!location.state) {\n                history.push('/reportes/especifico')\n            }\n            console.log(location.state)\n            setDifferenceInDay(differenceInDays(new Date(location.state.date_to), new Date(location.state.date_from)));\n\n            let url = '?';\n            Object.keys(location.state).forEach(c => url += `${c}=${location.state[c]}&`);\n            url = url.substring(0, url.length - 1);\n\n            const resp = await (await fetchConToken(`/reports/specific${url}`)).json();\n            const hours = resp.hours.map(h => { return { label: h.time, x: h.hour, y: h[location.state.gender] } });\n            const week = resp.week.map(h => { return { label: h.dow, x: h.dow, y: h[location.state.gender] } });\n            const month = resp.month.map(h => { return { label: h.day, x: h.day, y: h[location.state.gender] } });\n            let progress;\n            if (location.state.gender === 'total') {\n                progress = resp.progress;\n            } else {\n                progress = resp.progress.filter(c => c.name === location.state.gender || c.name === 'total');\n            }\n            if (location.state.gender === 'male') {\n                setTextGender('HOMBRES')\n            }\n            if (location.state.gender === 'female') {\n                setTextGender('MUJERES')\n            }\n\n            progress = progress.map(p => {\n                if (p.name === 'male') {\n                    p.name = 'HOMBRES'\n                }\n                if (p.name === 'female') {\n                    p.name = 'MUJERES'\n                }\n                if (p.name === 'total') {\n                    p.name = 'TOTAL'\n                }\n                return p;\n            });\n            setDataFilter(\n                {\n                    ...resp,\n                    progress,\n                    hours,\n                    week,\n                    month\n                }\n            );\n\n        })()\n    }, [])\n\n\n    const generarPdf = async () => {\n        const elementGrilla = document.getElementById('exportGrilla');\n        /*      const elementProgress = document.getElementById('exportProgress'); */\n        const graficHour = document.querySelector('#grafichour');\n\n        const graficWeek = document.querySelector('#graficweek');\n        const graficMonth = document.querySelector('#graficmonth');\n        let urlGrilla = '';\n        /*     let urlProgress = ''; */\n        let urlGHour = '';\n        let urlGWeek = '';\n        let urlGMonth = '';\n\n        setIsLoading(true);\n        await toPng(elementGrilla).then((dataUrl) => urlGrilla = dataUrl)\n        /*     await toPng(elementProgress).then((dataUrl) => urlProgress = dataUrl) */\n\n        await toPng(graficHour).then((dataUrl) => urlGHour = dataUrl)\n        await toPng(graficWeek).then((dataUrl) => urlGWeek = dataUrl)\n        await toPng(graficMonth).then((dataUrl) => urlGMonth = dataUrl)\n\n        const doc = new jsPDF('p', 'pt');\n        const img = new Image()\n        img.src = '/assets/images/pdf/logoleft.png'\n        const img2 = new Image()\n        img2.src = '/assets/images/pdf/logorigth.png'\n        doc.addImage(img, 'png', 30, 10, 100, 20)\n        doc.addImage(img2, 'png', 500, 13, 65, 15)\n\n        doc.setFontSize(9);\n        doc.setTextColor(10, 24, 241);\n        doc.text(30, 60, 'REPORTE COMERCIAL')\n\n        doc.setFontSize(9);\n        doc.setTextColor('black');\n        doc.text(30, 80, `ULTIMOS ${differenceInDay} DIAS`)\n\n        doc.addImage(urlGrilla, 'jpg', 60, 90, 480, 280);\n        /*************************************************************************** */\n\n        doc.setFontSize(11);\n        doc.setTextColor('262626');\n        doc.text(170, 430, `TOTAL DE ${location.state.gender === 'total' ? 'PERSONAS' : `${textGender}`} POR HORA DEL DÍA DE AYER`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('0502D3');\n        doc.text(30, 480, `HORA MÁS TRANSITADA: ${dataFilter.max_hour.hour} CON ${formatNumber(dataFilter?.max_hour?.total)} PERSONAS`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 480, `RANGO:${location.state.date_from} - ${location.state.date_to}`)\n\n        doc.addImage(urlGHour, 'jpg', 80, 490, 430, 250);\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(30, 760, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 760, `Tipo de tótem:  ${!location.state.resource ? 'tótem acumulado' : location.state.resource}`)\n\n\n\n        /***************************************************************************** */\n        doc.addPage();\n        doc.addImage(img, 'png', 30, 10, 100, 20)\n        doc.addImage(img2, 'png', 500, 13, 65, 15)\n\n        doc.setFontSize(11);\n        doc.setTextColor('262626');\n        doc.text(170, 90, `TOTAL DE ${location.state.gender === 'total' ? 'PERSONAS' : `${textGender}`} POR DÍA DE LA SEMANA`)\n\n\n        doc.setFontSize(9);\n        doc.setTextColor('black');\n        doc.text(30, 140, `DÍA DE LA SEMANA MÁS TRANSITADO: ${dataFilter.max_week_day.day} CON ${formatNumber(dataFilter?.max_week_day?.total)} PERSONAS`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 140, `RANGO:${location.state.date_from} - ${location.state.date_to}`)\n\n        doc.addImage(urlGWeek, 'jpg', 80, 150, 430, 250);\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(30, 420, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 420, `Tipo de tótem:  ${!location.state.resource ? 'tótem acumulado' : location.state.resource}`)\n        /******************************************************** */\n\n\n        doc.setFontSize(11);\n        doc.setTextColor('black');\n        doc.text(170, 480, `ACUMULADO DE ${location.state.gender === 'total' ? 'PERSONAS' : `${textGender}`} POR CADA DÍA DEL MES`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('black');\n        doc.text(30, 530, `DÍA DEL MES MAS TRANSITADO: ${dataFilter.max_month_day.day} CON ${formatNumber(dataFilter?.max_month_day?.total)} PERSONAS`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 530, `RANGO:${location.state.date_from} - ${location.state.date_to}`)\n\n\n\n        doc.addImage(urlGMonth, 'jpg', 80, 540, 430, 250);\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(30, 810, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 810, `Tipo de tótem:  ${!location.state.resource ? 'tótem acumulado' : location.state.resource}`)\n\n         const salida = doc.output('blob');\n         const formData = new FormData();\n         formData.append('file', salida);\n         formData.append('name', `DSP-SODA-CCPN-PE-A01-${(location.state.date_from).replaceAll('-', '')}-${(location.state.date_to).replaceAll('-', '')}-REPORTE-COMERICAL.pdf`);\n \n \n        doc.save(`DSP-SODA-CCPN-PE-A01-${(location.state.date_from).replaceAll('-', '')}-${(location.state.date_to).replaceAll('-', '')}-REPORTE-COMERICAL.pdf`);\n        setIsLoading(false);\n        //esta en ultima cola \n  /*       const resp = await (await fetchConToken(`/reports/upload-file`, formData, 'UPLOAD')).json();\n   */  }\n    return (\n        <Main>\n            <div className=\"contenedor\">\n                {/*       <TitleHead>Personas</TitleHead> */}\n                <h3 className=\"subTitle spaceTop\">REPORTE COMERCIAL</h3>\n\n                <h3 className=\"subTitle spaceTopSmall color-secundary\">ULTIMOS {differenceInDay} DÍAS</h3>\n\n                <div className=\"spaceXY\" id=\"exportGrilla\">\n\n                    <div className=\"boxGridFour\">\n                        <BoxDate count={dataFilter?.boxes?.today?.count} percent={dataFilter?.boxes?.today?.percent} />\n                        <BoxWithOutPercent theme=\"light\" count={dataFilter?.boxes?.yesterday?.total} />\n                        <BoxWithPercent theme=\"light\" count={dataFilter?.boxes?.week?.total} percent={dataFilter?.boxes?.week?.percent} />\n                        <BoxDateRange theme=\"light\" count={dataFilter?.boxes?.total?.count} />\n                    </div>\n\n                    {(location.state?.gender == 'total' || location.state?.gender == 'male') && (\n                        <div className=\"boxGridFour spaceTop\">\n                            <BoxGender gender=\"male\" count={dataFilter?.boxes?.today?.male} total={dataFilter?.boxes?.today?.count} txtDay=\"HOY\" />\n                            <BoxGender gender=\"male\" count={dataFilter?.boxes?.yesterday?.male} total={dataFilter?.boxes?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                            <BoxGender gender=\"male\" count={dataFilter?.boxes?.week?.male} total={dataFilter?.boxes?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                            <BoxGender gender=\"male\" count={dataFilter?.boxes?.total?.male} total={dataFilter?.boxes?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                        </div>\n                    )}\n                    {(location.state?.gender == 'total' || location.state?.gender == 'female') && (\n                        <div className=\"boxGridFour spaceTop\">\n                            <BoxGender gender=\"female\" count={dataFilter?.boxes?.today?.female} total={dataFilter?.boxes?.today?.count} txtDay=\"HOY\" />\n                            <BoxGender gender=\"female\" count={dataFilter?.boxes?.yesterday?.female} total={dataFilter?.boxes?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                            <BoxGender gender=\"female\" count={dataFilter?.boxes?.week?.female} total={dataFilter?.boxes?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                            <BoxGender gender=\"female\" count={dataFilter?.boxes?.total?.female} total={dataFilter?.boxes?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                        </div>\n                    )}\n\n\n                </div>\n                {/* <div className=\"spaceXY \">\n                    <h3 className=\"subTitle  text-center color-secundary\">TIEMPO PROMEDIO DE ESTANCIA POR GENERÓ</h3>\n                    <span className=\"spaceBottom text-center d-block\">( {location.state.date_from} - {location.state.date_to} )</span>\n                    <div id=\"exportProgress\">\n                        <div className=\"tablePallete \">\n                            <span>Generó</span>\n                            <div className=\"pallete\">\n                                <div className=\"color\">\n                                    <span>HOY</span>\n                                    <span className=\"bg-yellow barra\"></span>\n                                </div>\n                                <div className=\"color\">\n                                    <span>SEMANA</span>\n                                    <span className=\"bg-blue barra\"></span>\n                                </div>\n                                <div className=\"color\">\n                                    <span>MES</span>\n                                    <span className=\"bg-ligthBlue barra\"></span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"progressContent spaceTop\">\n                            {dataFilter.length === 0 && <div className=\"__loader_grafic\">\n                                <img src=\"/assets/load/qonteo.gif\" alt=\"spinner_loaded\" />\n                            </div>}\n                            {dataFilter.progress.map((p, _i) => (\n                                \n                                <div key={_i} className=\"iconProgrese\">\n                                    <div className=\"icon\">\n                                        <img src=\"/assets/icons/person.svg\" alt=\"iconTotal\" />\n                                        <span>{p.name}</span>\n                                    </div>\n                                    <div className=\"percentProgress\">\n                                        {p.bars.map((b, _i) => (\n                                            <div key={_i} className=\"progress\">\n                                                <div className={`percent bg-${b.bg} `} style={{ width: `${b.percent}%` }}>\n                                                    <span className={`${b.bg == 'blue' ? 'textWhite' : ''} `} >{b.minutes} Minutos</span>\n                                                </div>\n                                                <span>{b.percent}%</span>\n                                            </div>\n\n                                        ))}\n                                    </div>\n\n\n\n\n                                </div>\n\n\n                            ))}\n\n                        </div>\n\n                    </div>\n\n                </div>\n                */}\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">TOTAL DE {location.state.gender === 'total' ? 'PERSONAS' : `${textGender}`} POR HORA DEL DÍA DE AYER</h3>\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Hora más transitada: {dataFilter.max_hour?.hour} con {dataFilter.max_hour?.total} personas</span>\n                        <span className=\"detailMax\">RANGO:{location.state.date_from} - {location.state.date_to}</span>\n\n                    </div>\n                    <GraficBar data={dataFilter.hours} label=\"Total de Hombres\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora:\"\n                        labelop=\" Total de Hombres:\"\n                        scltxtlbl=\"Cantidad de Hombres\"\n                        scalebg=\"#0502D3\" id=\"grafichourMale\"\n                        id=\"grafichour\"\n                        theme=\"bg-yellow\"\n                    />\n\n                </div>\n\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">TOTAL DE {location.state.gender === 'total' ? 'PERSONAS' : `${textGender}`} POR DÍA DE LA SEMANA</h3>\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día de la semana más transitado: {dataFilter.max_week_day?.day} con {dataFilter.max_week_day?.total} personas</span>\n                        <span className=\"detailMax\">RANGO:{location.state.date_from} - {location.state.date_to}</span>\n\n                    </div>\n                    <GraficLine data={dataFilter.week} label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día\"\n                        labelop=\"tránsito de personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        id=\"graficweek\"\n\n                    />\n\n\n                </div>\n\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">ACUMULADO DE {location.state.gender === 'total' ? 'PERSONAS' : `${textGender}`} POR CADA DÍA DEL MES</h3>\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día del mes más transitado: {dataFilter.max_month_day?.day} con {dataFilter.max_month_day?.total} personas</span>\n                        <span className=\"detailMax\">RANGO:{location.state.date_from} - {location.state.date_to}</span>\n\n                    </div>\n                    <GraficBar\n                        data={dataFilter.month}\n                        label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día: \"\n                        labelop=\"tránsito de Personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        theme=\"bg-primary\"\n                        id=\"graficmonth\"\n                    />\n\n                </div>\n\n\n                <div className=\"groupButtons text-center spaceXY\">\n\n                    <button disabled={isLoading} onClick={generarPdf} className={`filterBtn active`}>{!isLoading ? 'GENERAR REPORTE' : 'CARGANDO...'}</button>\n\n                </div>\n\n\n\n            </div>\n\n\n        </Main>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { GraficBar } from '../../../ui/grafics/GraficBar';\nimport { GraficLine } from '../../../ui/grafics/GraficLine';\nimport { Main } from '../../../ui/layout/Main';\nimport jsPDF from 'jspdf'\nimport { toPng } from 'html-to-image'\nimport { fetchConToken } from '../../../../helpers/fetch';\nimport { format, subDays } from 'date-fns'\nimport { formatNumber } from '../../../../helpers/calculo';\n\nexport const EjecutivoScreenReport = ({ location, history }) => {\n\n    const [dataFilter, setDataFilter] = useState({\n        hours: [],\n        week: [],\n        month: [],\n        progress: []\n    })\n    const [isLoading, setIsLoading] = useState(false);\n    const [textGender, setTextGender] = useState('PERSONAS')\n    useEffect(() => {\n        (async () => {\n            if (!location.state) {\n                return history.push('/reportes/especifico')\n            }\n            let url = '?';\n            Object.keys(location.state).forEach(c => url += `${c}=${location.state[c]}&`);\n            url = url.substring(0, url.length - 1);\n            const resp = await fetchConToken(`/reports/specific${url}`);\n            const body = await resp.json();\n            const hours = body.hours.map(h => { return { label: h.time, x: h.hour, y: h[location.state.gender] } });\n            const week = body.week.map(h => { return { label: h.dow, x: h.dow, y: h[location.state.gender] } });\n            const month = body.month.map(h => { return { label: h.day, x: h.day, y: h[location.state.gender] } });\n            if(location.state.gender==='male'){\n                setTextGender('HOMBRES')\n            }\n            if(location.state.gender==='female'){\n                setTextGender('MUJERES')\n            }\n          \n            setDataFilter(\n                {\n                    ...body,\n                    hours,\n                    week,\n                    month\n                }\n            );\n\n        })()\n    }, [])\n\n\n    const generar = async () => {\n        console.log('Se genero!')\n        const canvas = document.querySelector('#grafichour')\n        const canvas2 = document.querySelector('#graficweek')\n        const canvas3 = document.querySelector('#graficmonth ')\n        let urlGHour = '';\n        let urlGWeek = '';\n        let urlGMonth = '';\n        setIsLoading(true);\n        await toPng(canvas).then((dataUrl) => urlGHour = dataUrl)\n        await toPng(canvas2).then((dataUrl) => urlGWeek = dataUrl)\n        await toPng(canvas3).then((dataUrl) => urlGMonth = dataUrl)\n\n\n        const doc = new jsPDF('p', 'pt');\n        const img = new Image()\n        img.src = '/assets/images/pdf/logoleft.png'\n        const img2 = new Image()\n        img2.src = '/assets/images/pdf/logorigth.png'\n        doc.addImage(img, 'png', 30, 10, 100, 20)\n        doc.addImage(img2, 'png', 500, 13, 65, 15)\n\n\n        doc.setFontSize(9);\n        doc.setTextColor('0502D3');\n\n        doc.text(30, 60, 'REPORTE EJUCUTIVO')\n\n\n\n        doc.setFontSize(11);\n        doc.setTextColor('262626');\n        doc.text(170, 90, `TOTAL ${location.state.gender==='total' ?  'PERSONAS' : `${textGender}` } POR HORA DEL DÍA DE AYER`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('0502D3');\n        doc.text(30, 140, `HORA MÁS TRANSITADA: ${dataFilter.max_hour.hour} CON ${formatNumber(dataFilter?.max_hour?.total)} PERSONAS`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 140, `RANGO:${location.state.date_from} - ${location.state.date_to}`)\n\n        doc.addImage(urlGHour, 'jpg', 80, 150, 430, 250);\n\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(30, 420, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 420, `Tipo de tótem:  ${!location.state.resource ? 'tótem acumulado' : location.state.resource}`)\n\n\n        doc.setFontSize(11);\n        doc.setTextColor('262626');\n        doc.text(170, 480, `TOTAL DE ${location.state.gender==='total' ?  'PERSONAS' : `${textGender}` } POR DÍA DE LA SEMANA`)\n\n\n        doc.setFontSize(9);\n        doc.setTextColor('black');\n        doc.text(30, 530, `DÍA DE LA SEMANA MÁS TRANSITADO: ${dataFilter.max_week_day.day} CON ${formatNumber(dataFilter?.max_week_day?.total)} PERSONAS`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 530, `RANGO:${location.state.date_from} - ${location.state.date_to}`)\n\n        doc.addImage(urlGWeek, 'jpg', 80, 540, 430, 250);\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(30, 810, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 810, `Tipo de tótem:  ${!location.state.resource ? 'tótem acumulado' : location.state.resource}`)\n\n        doc.addPage();\n\n        doc.addImage(img, 'png', 30, 20, 100, 20)\n        doc.addImage(img2, 'png', 500, 20, 65, 15)\n\n\n        doc.setFontSize(11);\n        doc.setTextColor('black');\n        doc.text(170, 80, `ACUMULADO DE ${location.state.gender==='total' ?  'PERSONAS' : `${textGender}` } POR CADA DÍA DEL MES`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('black');\n        doc.text(30, 130, `DÍA DEL MES MAS TRANSITADO: ${dataFilter.max_month_day.day} CON ${formatNumber(dataFilter?.max_month_day?.total)} PERSONAS`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 130, `RANGO:${location.state.date_from} - ${location.state.date_to}`)\n\n        doc.addImage(urlGMonth, 'jpg', 80, 140, 430, 250);\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(30, 410, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n        doc.setFontSize(9);\n        doc.setTextColor('424242');\n        doc.text(440, 410, `Tipo de tótem:  ${!location.state.resource ? 'tótem acumulado' : location.state.resource}`)\n\n        const salida = doc.output('blob');\n        const formData = new FormData();\n        formData.append('upload_file', salida);\n        formData.append('name', `DSP-SODA-CCPN-PE-A01-${(location.state.date_from).replaceAll('-', '')}-${(location.state.date_to).replaceAll('-', '')}-REPORTE-EJECUTIVO.pdf`);\n\n\n\n        doc.save(`DSP-SODA-CCPN-PE-A01-${(location.state.date_from).replaceAll('-','')}-${(location.state.date_to).replaceAll('-','')}-REPORTE-COMERICAL.pdf`)\n        setIsLoading(false);\n        const resp = await (await fetchConToken(`/reports/upload-file`, formData, 'UPLOAD')).json();\n\n    }\n\n\n\n    return (\n        <Main>\n            <div className=\"contenedor\">\n                <h3 className=\"subTitle spaceTop\">REPORTE EJECUTIVO</h3>\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">TOTAL {location.state.gender==='total' ?  'PERSONAS' : `${textGender}` } POR HORA DEL DÍA DE AYER</h3>\n\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Hora más transitada: {dataFilter.max_hour?.hour} con {dataFilter.max_hour?.total} personas</span>\n                        <span className=\"detailMax\">RANGO:{location.state.date_from} - {location.state.date_to}</span>\n\n                    </div>\n                    <GraficBar data={dataFilter.hours} label=\"Total de Hombres\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora:\"\n                        labelop=\" Total de Hombres:\"\n                        scltxtlbl=\"Cantidad de Hombres\"\n                        scalebg=\"#0502D3\" id=\"grafichour\"\n                        id=\"grafichour\"\n                        theme=\"bg-yellow\"\n                    />\n\n                </div>\n\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">TOTAL DE {location.state.gender==='total' ?  'PERSONAS' : `${textGender}` } POR DÍA DE LA SEMANA</h3>\n\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día de la semana más transitado: {dataFilter.max_week_day?.day} con {dataFilter.max_week_day?.total} personas</span>\n                        <span className=\"detailMax\">RANGO:{location.state.date_from} - {location.state.date_to}</span>\n                    </div>\n                    <GraficLine data={dataFilter.week} label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día\"\n                        labelop=\"tránsito de personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        id=\"graficweek\"\n\n                    />\n\n\n                </div>\n\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">ACUMULADO DE {location.state.gender==='total' ?  'PERSONAS' : `${textGender}` } POR CADA DÍA DEL MES</h3>\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día del mes más transitado: {dataFilter.max_month_day?.day} con {dataFilter.max_month_day?.total} personas</span>\n                        <span className=\"detailMax\">RANGO:{location.state.date_from} - {location.state.date_to}</span>\n                    </div>\n                    <GraficBar\n                        data={dataFilter.month}\n                        label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día: \"\n                        labelop=\"tránsito de Personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        theme=\"bg-yellow\"\n                        id=\"graficmonth\"\n                    />\n                </div>\n\n\n                <div className=\"groupButtons text-center spaceXY\">\n\n                    <button disabled={isLoading} onClick={generar} className={`filterBtn active`}>{!isLoading ? 'GENERAR REPORTE' : 'CARGANDO...'}</button>\n\n                </div>\n\n            </div>\n        </Main>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom';\nimport { setGraphicsInHourForCurrentDate, setGraphicsInMonthForCurrentDate, setGraphicsInWeekForCurrentDate, startPersonData } from '../../../../action/person';\nimport { getTrazabilidad } from '../../../../action/trazabilidad';\nimport { formatNumber } from '../../../../helpers/calculo';\nimport { downloadImageDesktop, exportExcel, exportPDFPerson } from '../../../../helpers/exportPDF';\nimport { useButtons } from '../../../../hooks/useButtons';\nimport { useDate } from '../../../../hooks/useDate';\nimport { ButtonsExport } from '../../../ui/exports/ButtonsExport';\nimport { GraficBar } from '../../../ui/grafics/GraficBar';\nimport { GraficLine } from '../../../ui/grafics/GraficLine';\nimport { Main } from '../../../ui/layout/Main'\nconst validsSensors = ['ccpn001', 'ccpn002', 'ccpn003'];\nexport const SensorScreen = ({ history }) => {\n    const { resources } = useSelector(state => state.trazabilidad);\n    const person = useSelector(state => state.person);\n    const { hoursPersonTotal, hoursPersonMale, hoursPersonFemale, weekPersonTotal, weekPersonMale,\n        weekPersonFemale, monthPersonTotal,\n        monthPersonMale, monthPersonFemale,\n        heatmapPersonTotal, heatmapPersonRange,\n        rangePersonAges,\n        maxHourPersonTotal,\n        maxHourPersonMale,\n        maxHourPersonFemale,\n        maxWeekPersonTotal,\n        maxWeekPersonMale,\n        maxWeekPersonFemale,\n        maxMonthPersonTotal,\n        maxMonthPersonMale,\n        maxMonthPersonFemale } = useSelector(state => state.person);\n    const { dateStartHourPerson, dateEndHourPerson,\n        dateStartHourMalePerson, dateEndHourMalePerson,\n        dateStartHourFemalePerson, dateEndHourFemalePerson,\n        dateStartWeekPerson, dateEndWeekPerson,\n        dateStartWeekMalePerson, dateEndWeekMalePerson,\n        dateStartWeekFemalePerson, dateEndWeekFemalePerson,\n        dateStartMonthPerson, dateEndMonthPerson,\n        dateStartMonthMalePerson, dateEndMonthMalePerson,\n        dateStartMonthFemalePerson, dateEndMonthFemalePerson,\n        dateStartAgePerson, dateEndAgePerson,\n        dateStartHeatMap, dateEndHeatMap } = useSelector(state => state.date);\n    const { name } = useParams();\n    const dispatch = useDispatch();\n    const [DateHour] = useDate(setGraphicsInHourForCurrentDate, name, 'total', 'dateStartHourPerson', 'dateEndHourPerson', '');\n    const [DateWeek] = useDate(setGraphicsInWeekForCurrentDate, name,'total', 'dateStartWeekPerson', 'dateEndWeekPerson','');\n    const [DateMonth] = useDate(setGraphicsInMonthForCurrentDate,name,'total', 'dateStartMontPerson', 'dateEndMonthPerson','',true);\n    const [ButtonHourTotal, hourstotalrst] = useButtons({\n        0: 'HOY',\n        7: '07 DÍAS',\n        15: '15 DÍAS',\n        30: '30 DÍAS'\n    }, setGraphicsInHourForCurrentDate, name, 'total', 'dateStartHourPerson', 'dateEndHourMalePerson', 'hourstotalrst', 1);\n    const [ButtonWeekTotal, weektotalrst] = useButtons({\n        7: 'ULTIMA SEMANA',\n        30: '30 DÍAS',\n    },setGraphicsInWeekForCurrentDate, name,'total', 'dateStartWeekPerson', 'dateEndWeekPerson','weektotalrst')\n    const [ButtonMonthTotal, monthtotalrst] = useButtons({\n        30: 'ÚLTIMO MES',\n        60: 'ÚLTIMO DOS MES',\n        90: 'ÚLTIMO TRES MES',\n    },setGraphicsInMonthForCurrentDate,name,'total', 'dateStartMontPerson', 'dateEndMonthPerson','monthtotalrst')\n    \n    useEffect(() => {\n        (() => {\n            if (!validsSensors.includes(name.toLowerCase())) {\n                history.push('/')\n            }\n            dispatch(getTrazabilidad());\n            dispatch(startPersonData())\n        })()\n    }, [])\n    return (\n        <Main>\n            <h3 className=\"subTitle spaceTop\">Tienda 1:Panistería</h3>\n            <div className=\"spaceTop\">\n                <div className=\"contentcanvas   m-auto\">\n                    <canvas style={{ backgroundImage: `url(/assets/images/planoflujo.jpg)` }} className=\"mt\" id=\"monitoreoSensor\" width=\"1024\" height=\"556\"></canvas>\n                </div>\n            </div>\n\n\n            <div className=\"spaceXY d-block\">\n                <h3 className=\"subTitle  text-center\">TOTAL DE PERSONAS POR HORA DEL DÍA</h3>\n                <span className=\"spaceBottom text-center d-block\">( {dateStartHourPerson} - {dateEndHourPerson} )</span>\n                {hoursPersonTotal.length > 0 && <ButtonHourTotal />}\n                <div className=\"detailGrafic spaceBottom\">\n                    <span className=\"detailMax\">Hora más transitada: {maxHourPersonTotal?.hour} con {formatNumber(maxHourPersonTotal?.total)} personas</span>\n                    {hoursPersonTotal.length > 0 && <DateHour />}\n                </div>\n                <GraficBar data={hoursPersonTotal} label=\"Total de Personas\" dtsetbg=\"#0502D3\"\n                    optionbg=\"#454545\"\n                    legendbg=\"#454545\"\n                    title=\" Hora:\"\n                    labelop=\" Total de Personas:\"\n                    scltxtlbl=\"Cantidad de Personas\"\n                    scalebg=\"#0502D3\"\n                    theme=\"bg-yellow\"\n                    id=\"grafichourTotal\"\n                />\n                {hoursPersonTotal.length > 0 && <ButtonsExport methodpdf={() => exportPDFPerson('grafichourTotal', dateStartHourPerson, dateEndHourPerson, 'TOTAL DE HOMBRES POR HORA DEL DÍA', `HORA MÁS TRANSITADA: ${maxHourPersonTotal.hour} CON ${formatNumber(maxHourPersonTotal.total)} PERSONAS`, false, name)}\n                    methodcsv={() => exportExcel('hour', dateStartHourPerson, dateEndHourPerson, 'DE-HOMBRES-POR-HORA-DEL-DIA')}\n                    methodshare={() => downloadImageDesktop('grafichourTotal', dateStartHourPerson, dateEndHourPerson, 'hour', 'P')}\n                />}\n            </div>\n            <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center\">TOTAL DE PERSONAS POR DÍA DE LA SEMANA</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartWeekPerson} - {dateEndWeekPerson} )</span>\n                    {weekPersonTotal.length > 0 && <ButtonWeekTotal />}\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día de la semana más transitado: {maxWeekPersonTotal?.day} con {formatNumber(maxWeekPersonTotal?.total)} personas</span>\n                        {weekPersonTotal.length > 0 && <DateWeek />}\n                    </div>\n                    <GraficLine data={weekPersonTotal} label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día\"\n                        labelop=\"tránsito de personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        id=\"graficweek\"\n                    />\n\n                    {weekPersonTotal.length>0 && <ButtonsExport methodpdf={() => exportPDFPerson('graficweek', dateStartWeekPerson, dateEndWeekPerson, 'TOTAL DE PERSONAS POR DÍA DE LA SEMANA', `DIA MÁS TRANSITADO: ${maxWeekPersonTotal.day} CON ${formatNumber(maxWeekPersonTotal.total)} PERSONAS`, false, name)}\n                        methodcsv={() => exportExcel('week', dateStartWeekPerson, dateEndWeekPerson, 'DE-PERSONAS-POR-DIA-DE-LA-SEMANA')}\n                        methodshare={() => downloadImageDesktop('graficweek', dateStartWeekPerson, dateEndWeekPerson, 'week', 'P')}\n                    />}\n                </div>\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center\">ACUMULADO DE PERSONAS POR CADA DÍA DEL MES</h3>\n                    <span className=\"spaceBottom range-date text-center d-block\">( {dateStartMonthPerson} - {dateEndMonthPerson} )</span>\n                    {monthPersonTotal.length > 0 && <ButtonMonthTotal />}\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día del mes más transitado: {maxMonthPersonTotal?.day} con {maxMonthPersonTotal?.total} personas</span>\n                        {monthPersonTotal.length > 0 && <DateMonth />}\n\n                    </div>\n                    <GraficBar\n                        data={monthPersonTotal}\n                        label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día: \"\n                        labelop=\"tránsito de Personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        theme=\"bg-yellow\"\n                        id=\"graficmonth\"\n                    />\n                    {monthPersonTotal.length>0 && <ButtonsExport methodpdf={() => exportPDFPerson('graficmonth', dateStartMonthPerson, dateEndMonthPerson, 'TOTAL DE PERSONAS POR DÍA DEL MES', `DIA MÁS TRANSITADA: ${maxMonthPersonTotal.day} CON ${formatNumber(maxMonthPersonTotal.total)} PERSONAS`, false, name)}\n                        methodcsv={() => exportExcel('month', dateStartMonthPerson, dateEndMonthPerson, 'DE-PERSONAS-POR-DIA-DEL-MES')}\n                        methodshare={() => downloadImageDesktop('graficmonth', dateStartMonthPerson, dateEndMonthPerson, 'month', 'P')}\n                    />}\n                </div>\n\n\n        </Main>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport jsPDF from 'jspdf'\nimport { toPng } from 'html-to-image'\nimport { BoxDate } from '../../ui/utils/boxes/BoxDate'\nimport { BoxWithOutPercent } from '../../ui/utils/boxes/BoxWithOutPercent'\nimport { BoxWithPercent } from '../../ui/utils/boxes/BoxWithPercent'\nimport { BoxDateRange } from '../../ui/utils/boxes/BoxDateRange'\nimport { Main } from '../../ui/layout/Main'\nimport { GraficBar } from '../../ui/grafics/GraficBar'\nimport { GraficLine } from '../../ui/grafics/GraficLine'\nimport { fetchConToken } from '../../../helpers/fetch'\nimport { BoxGender } from '../../ui/utils/boxes/BoxGender'\nimport { formatNumber } from '../../../helpers/calculo'\nimport { format } from 'date-fns'\nexport const ExportReport = () => {\n    const [dataFilter, setDataFilter] = useState({\n        hours: [],\n        week: [],\n        month: [],\n        progress: []\n    })\n\n    useEffect(() => {\n        (async () => {\n\n            const resp = await (await fetch(`https://dashboard.qonteo.com/REST/reports/specific?report_type=c`, {\n                headers: {\n                    'Content-type': 'Application/json',\n                    'Authorization': 'bear eyJhbGciOiAiSFMyNTYiLCAidHlwIjogIkpXVCJ9.eydzdWInOiAnNDQyNDQ4JywgJ2lhdCc6IDE1OTg4ODczOTl9.20f471933ae0a9c58d525f4ab0c1eef7adab03f17c3bbe18a00cf30a1ef06948'\n                }\n            })).json();\n            console.log(resp)\n            const hours = resp.hours.map(h => { return { label: h.time, x: h.hour, y: h.total } });\n            const week = resp.week.map(h => { return { label: h.dow, x: h.dow, y: h.total } });\n            const month = resp.month.map(h => { return { label: h.day, x: h.day, y: h.total } });\n\n            setDataFilter(\n                {\n                    ...resp,\n                    hours,\n                    week,\n                    month\n                }\n            );\n\n        })()\n    }, [])\n\n    useEffect(() => {\n        (async () => {\n            if (dataFilter.hours.length > 0) {\n                const elementGrilla = document.getElementById('exportGrilla');\n                /*      const elementProgress = document.getElementById('exportProgress'); */\n                const graficHour = document.querySelector('#grafichour');\n\n                const graficWeek = document.querySelector('#graficweek');\n                const graficMonth = document.querySelector('#graficmonth');\n                let urlGrilla = '';\n                /*     let urlProgress = ''; */\n                let urlGHour = '';\n                let urlGWeek = '';\n                let urlGMonth = '';\n\n                await toPng(elementGrilla).then((dataUrl) => urlGrilla = dataUrl)\n                /*     await toPng(elementProgress).then((dataUrl) => urlProgress = dataUrl) */\n\n                await toPng(graficHour).then((dataUrl) => urlGHour = dataUrl)\n                await toPng(graficWeek).then((dataUrl) => urlGWeek = dataUrl)\n                await toPng(graficMonth).then((dataUrl) => urlGMonth = dataUrl)\n\n                const doc = new jsPDF('p', 'pt');\n                const img = new Image()\n                img.src = '/assets/images/pdf/logoleft.png'\n                const img2 = new Image()\n                img2.src = '/assets/images/pdf/logorigth.png'\n                doc.addImage(img, 'png', 30, 10, 100, 20)\n                doc.addImage(img2, 'png', 500, 13, 65, 15)\n\n                doc.setFontSize(9);\n                doc.setTextColor(10, 24, 241);\n                doc.text(30, 60, 'REPORTE COMERCIAL')\n\n                doc.addImage(urlGrilla, 'jpg', 60, 90, 480, 280);\n                /*************************************************************************** */\n\n                doc.setFontSize(11);\n                doc.setTextColor('262626');\n                doc.text(170, 430, `TOTAL DE  PERSONAS POR HORA DEL DÍA DE AYER`)\n\n                doc.setFontSize(9);\n                doc.setTextColor('0502D3');\n                doc.text(30, 480, `HORA MÁS TRANSITADA: ${dataFilter.max_hour.hour} CON ${formatNumber(dataFilter?.max_hour?.total)} PERSONAS`)\n\n\n                doc.addImage(urlGHour, 'jpg', 80, 490, 430, 250);\n\n                doc.setFontSize(9);\n                doc.setTextColor('424242');\n                doc.text(30, 760, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n\n\n\n                /***************************************************************************** */\n                doc.addPage();\n                doc.addImage(img, 'png', 30, 10, 100, 20)\n                doc.addImage(img2, 'png', 500, 13, 65, 15)\n\n                doc.setFontSize(11);\n                doc.setTextColor('262626');\n                doc.text(170, 90, 'TOTAL DE PERSONAS POR DÍA DE LA SEMANA')\n\n\n                doc.setFontSize(9);\n                doc.setTextColor('black');\n                doc.text(30, 140, `DÍA DE LA SEMANA MÁS TRANSITADO: ${dataFilter.max_week_day.day} CON ${formatNumber(dataFilter?.max_week_day?.total)} PERSONAS`)\n\n                doc.addImage(urlGWeek, 'jpg', 80, 150, 430, 250);\n\n                doc.setFontSize(9);\n                doc.setTextColor('424242');\n                doc.text(30, 420, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n                /******************************************************** */\n\n\n                doc.setFontSize(11);\n                doc.setTextColor('black');\n                doc.text(170, 480, `ACUMULADO DE PERSONAS POR CADA DÍA DEL MES`)\n\n                doc.setFontSize(9);\n                doc.setTextColor('black');\n                doc.text(30, 530, `DÍA DEL MES MAS TRANSITADO: ${dataFilter.max_month_day.day} CON ${formatNumber(dataFilter?.max_month_day?.total)} PERSONAS`)\n\n\n\n\n                doc.addImage(urlGMonth, 'jpg', 80, 540, 430, 250);\n\n                doc.setFontSize(9);\n                doc.setTextColor('424242');\n                doc.text(30, 810, `Reporte generado el ${format(new Date(), 'yyyy-MM-dd')} - ${format(new Date(), 'HH:mm')} hrs/PE.CCPN.01`)\n\n                const salida = doc.output('blob');\n                const formData = new FormData();\n                formData.append('upload_file', salida);\n                formData.append('name', `DSP-SODA-CCPN-PE-A01-REPORTE-COMERICAL.pdf`);\n\n               \n                const resp = await (await fetch(`https://dashboard.qonteo.com/REST/reports/upload-file`, {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': 'bear eyJhbGciOiAiSFMyNTYiLCAidHlwIjogIkpXVCJ9.eydzdWInOiAnNDQyNDQ4JywgJ2lhdCc6IDE1OTg4ODczOTl9.20f471933ae0a9c58d525f4ab0c1eef7adab03f17c3bbe18a00cf30a1ef06948'\n                    },\n                    body: formData\n                })).json();\n                console.log(resp)\n            }\n        })()\n    }, [dataFilter])\n\n    return (\n        <Main isSidebar={false}>\n            <div className=\"contenedor\">\n                {/*       <TitleHead>Personas</TitleHead> */}\n                <h3 className=\"subTitle spaceTop\">REPORTE COMERCIAL</h3>\n\n                <h3 className=\"subTitle spaceTopSmall color-secundary\">ULTIMOS  DÍAS</h3>\n\n                <div className=\"spaceXY\" id=\"exportGrilla\">\n\n                    <div className=\"boxGridFour\">\n                        <BoxDate count={dataFilter?.boxes?.today?.count} percent={dataFilter?.boxes?.today?.percent} />\n                        <BoxWithOutPercent theme=\"light\" count={dataFilter?.boxes?.yesterday?.total} />\n                        <BoxWithPercent theme=\"light\" count={dataFilter?.boxes?.week?.total} percent={dataFilter?.boxes?.week?.percent} />\n                        <BoxDateRange theme=\"light\" count={dataFilter?.boxes?.total?.count} />\n                    </div>\n\n                    <div className=\"boxGridFour spaceTop\">\n                        <BoxGender gender=\"male\" count={dataFilter?.boxes?.today?.male} total={dataFilter?.boxes?.today?.count} txtDay=\"HOY\" />\n                        <BoxGender gender=\"male\" count={dataFilter?.boxes?.yesterday?.male} total={dataFilter?.boxes?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                        <BoxGender gender=\"male\" count={dataFilter?.boxes?.week?.male} total={dataFilter?.boxes?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                        <BoxGender gender=\"male\" count={dataFilter?.boxes?.total?.male} total={dataFilter?.boxes?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                    </div>\n                    <div className=\"boxGridFour spaceTop\">\n                        <BoxGender gender=\"female\" count={dataFilter?.boxes?.today?.female} total={dataFilter?.boxes?.today?.count} txtDay=\"HOY\" />\n                        <BoxGender gender=\"female\" count={dataFilter?.boxes?.yesterday?.female} total={dataFilter?.boxes?.yesterday?.total} txtDay=\"AYER\" theme=\"light\" />\n                        <BoxGender gender=\"female\" count={dataFilter?.boxes?.week?.female} total={dataFilter?.boxes?.week?.total} txtDay=\"ESTA SEMANA\" theme=\"light\" />\n                        <BoxGender gender=\"female\" count={dataFilter?.boxes?.total?.female} total={dataFilter?.boxes?.total?.count} txtDay=\"TOTAL\" theme=\"light\" />\n                    </div>\n\n\n\n                </div>\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">TOTAL DE PERSONAS POR HORA DEL DÍA DE AYER</h3>\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Hora más transitada: {dataFilter.max_hour?.hour} con {dataFilter.max_hour?.total} personas</span>\n                        {/*   <span className=\"detailMax\">RANGO: - </span> */}\n\n                    </div>\n                    <GraficBar data={dataFilter.hours} label=\"Total de Hombres\" dtsetbg=\"#0502D3\"\n                        optionbg=\"#454545\"\n                        legendbg=\"#454545\"\n                        title=\" Hora:\"\n                        labelop=\" Total de Hombres:\"\n                        scltxtlbl=\"Cantidad de Hombres\"\n                        scalebg=\"#0502D3\" id=\"grafichourMale\"\n                        id=\"grafichour\"\n                        theme=\"bg-yellow\"\n                    />\n\n                </div>\n\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">TOTAL DE PERSONAS POR DÍA DE LA SEMANA</h3>\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día de la semana más transitado: {dataFilter.max_week_day?.day} con {dataFilter.max_week_day?.total} personas</span>\n                        {/*  <span className=\"detailMax\">RANGO: - </span> */}\n\n                    </div>\n                    <GraficLine data={dataFilter.week} label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día\"\n                        labelop=\"tránsito de personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        id=\"graficweek\"\n\n                    />\n\n\n                </div>\n\n\n                <div className=\"spaceXY d-block\">\n                    <h3 className=\"subTitle  text-center spaceBottomSmall\">ACUMULADO DE PERSONAS POR CADA DÍA DEL MES</h3>\n                    <div className=\"detailGrafic spaceBottom\">\n                        <span className=\"detailMax\">Día del mes más transitado: {dataFilter.max_month_day?.day} con {dataFilter.max_month_day?.total} personas</span>\n                        {/*  <span className=\"detailMax\">RANGO: - </span> */}\n\n                    </div>\n                    <GraficBar\n                        data={dataFilter.month}\n                        label=\"Tiempo (Días)\"\n                        dtsetbg=\"#0a18f1\"\n                        optionbg=\"#454545\"\n                        scalebg=\"#0502D3\"\n                        title=\"Día: \"\n                        labelop=\"tránsito de Personas\"\n                        scltxtlbl=\"Cantidad de Personas\"\n                        theme=\"bg-primary\"\n                        id=\"graficmonth\"\n                    />\n\n                </div>\n\n\n\n\n\n            </div>\n\n\n        </Main>\n    )\n}\n","import React, { useEffect } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\nimport { LoginScreen } from '../interfaz/pages/auth/LoginScreen';\nimport { RegisterScreen } from '../interfaz/pages/auth/RegisterScreen';\nimport { PersonScreen } from '../interfaz/pages/desktop/person/PersonScreen';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startChecking } from '../action/auth'\nimport { PublicRoute } from './PublicRouter';\nimport { PrivateRouter } from './PrivateRouter';\nimport { TrazibilidadScreen } from '../interfaz/pages/desktop/person/TrazibilidadScreen';\nimport { MobileScreen } from '../interfaz/pages/mobile/MobileScreen';\nimport { isBrowser } from 'react-device-detect';\nimport { EspecificoScreen } from '../interfaz/pages/desktop/person/EspecificoScreen';\nimport { OperacionalScreen } from '../interfaz/pages/desktop/person/OperacionalScreen';\nimport { ComercialScreenReport } from '../interfaz/pages/desktop/reports/ComercialScreenRerpot';\nimport { EjecutivoScreenReport } from '../interfaz/pages/desktop/reports/EjecutivoScreenReport';\nimport { ComercialAuto } from '../auto-exports/ComercialAuto';\nimport { SensorScreen } from '../interfaz/pages/desktop/trazabilidad/SensorScreen';\nimport { ExportReport } from '../interfaz/pages/reports/ExportReport';\nexport const AppRouter = () => {\n    const dispatch = useDispatch();\n    const { isCheking,uid } = useSelector(state => state.auth);\n    useEffect(() => {\n        dispatch(startChecking())\n    }, [dispatch])\n\n    \n    if(!isCheking){\n        return <h3>Cargando...</h3>\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute isAuthenticated={!!uid} path=\"/auth/login\" exact component={LoginScreen} />\n                    <PublicRoute isAuthenticated={!!uid} exact path=\"/auth/registrarse\" component={RegisterScreen} />\n                    <PrivateRouter isAuthenticated={!!uid} path=\"/\" exact component={isBrowser ? PersonScreen : MobileScreen} />\n                    <PrivateRouter isAuthenticated={!!uid} exact path=\"/reportes/especifico\" component={EspecificoScreen} />\n                    <PrivateRouter isAuthenticated={!!uid} exact path=\"/reportes/operacional\" component={OperacionalScreen} />\n                    <PrivateRouter isAuthenticated={!!uid} exact path=\"/reportes-screen/comercial\" component={ComercialScreenReport} />\n                    <PrivateRouter isAuthenticated={!!uid} exact path=\"/reportes-screen/ejecutivo\" component={EjecutivoScreenReport} />\n                    <PrivateRouter isAuthenticated={!!uid} exact path=\"/trazabilidad/comercio\" component={TrazibilidadScreen} />\n                    <PrivateRouter isAuthenticated={!!uid} exact path=\"/sensor/:name\" component={SensorScreen} />\n                    <Route exact path=\"/export-test\" component={ExportReport} />\n                    <Redirect to=\"/\" />\n                </Switch>\n\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\n/**\n * @module Reducers\n */\n\nconst initialState = {\n    isCheking: false,\n}\n\n/**\n * Reducer de autentificacion\n * @param {Object} state Objecto de estado de la autentificacion\n * @param {Object} action Objecto para cambiar el estado de la autentificacion\n * @returns {Object} Estado actual de la autentificacion\n */\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                isCheking: false,\n                ...action.payload\n            }\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                isCheking: true,\n            }\n        case types.logout:\n            return{\n                isCheking: true\n            }\n        case types.authChecking:\n            return {\n                isCheking: true,\n            }\n        default:\n            return state;\n    }\n}\n\nexport {authReducer};","import { types } from \"../types/types\";\nimport { format,endOfMonth ,subDays,startOfMonth,subMonths} from 'date-fns'\n\n/**\n * @module Reducers\n */\n\nconst initialize = {\n    dateStartHourPerson:format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndHourPerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartHourMalePerson:format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndHourMalePerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartHourFemalePerson: format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndHourFemalePerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartWeekPerson: format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndWeekPerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartWeekMalePerson: format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndWeekMalePerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartWeekFemalePerson:format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndWeekFemalePerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartMonthPerson: format(subMonths(new Date(),1), 'yyyy-MM-dd'),\n    dateEndMonthPerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartMonthMalePerson: format(subMonths(new Date(),1), 'yyyy-MM-dd'),\n    dateEndMonthMalePerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartMonthFemalePerson: format(subMonths(new Date(),1), 'yyyy-MM-dd'),\n    dateEndMonthFemalePerson: format(new Date(),'yyyy-MM-dd'),\n    dateStartHeatMap:format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndHeatMap:format(new Date(),'yyyy-MM-dd'),\n    dateStartAgePerson: format(subDays(new Date(),7),'yyyy-MM-dd'),\n    dateEndAgePerson:format(new Date(),'yyyy-MM-dd'),\n}\n\n/**\n * Reducer de las fechas de inicio y fin\n * @param {Object} state Objecto de estado de los fechas inicio y fin\n * @param {Object} action action Objecto para cambiar el estado de los fechas inicio y fin\n * @returns {Object} Estado actual de los fechas inicio y fin\n */\n\nconst dateReducer=(state=initialize,action)=>{\n    switch (action.type) {\n        case types.changeDate:\n            return {\n                ...state,\n                [action.start]:action.startvalue,\n                [action.end]:action.endvalue\n            }\n        case types.resetDates:\n            return initialize\n        default:\n            return state;\n    }\n}\n\nexport {dateReducer}","import { types } from \"../types/types\"\n\n/**\n * @module Reducers\n */\n\nconst initialize = {\n  hoursPersonTotal:[],\n  hoursPersonMale:[],\n  hoursPersonFemale:[],\n  weekPersonTotal:[],\n  weekPersonMale:[],\n  weekPersonFemale:[],\n  monthPersonTotal:[],\n  monthPersonMale:[],\n  monthPersonFemale:[],\n  heatmapPersonTotal:[],\n  heatmapPersonRange:[],\n  rangePersonAges:[],\n  maxHourPersonTotal:{},\n  maxHourPersonMale:{},\n  maxHourPersonFemale:{},\n  maxWeekPersonTotal:{},\n  maxWeekPersonMale:{},\n  maxWeekPersonFemale:{},\n  maxMonthPersonTotal:{},\n  maxMonthPersonMale:{},\n  maxMonthPersonFemale:{},\n\n}\n\n\n/**\n * Reducer de datos por horas, semanas y meses\n * @param {Object} state Objecto de estado de los datos por tiempo y fechas\n * @param {Object} action action Objecto para cambiar el estado de los datos por tiempo y fechas\n * @returns {Object} Estado actual de los datos por tiempo y fechas\n */\n\nconst personReducer = (state = initialize, action) => {\n  switch (action.type) {\n    case types.initializePerson:\n      return {\n        ...state,\n        ...action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport {personReducer}","import { types } from \"../types/types\";\n\n/**\n * @module Reducers\n */\n\nconst init = {\n    resources: [],\n    totemTotal: {},\n    tabs: []\n}\n\n/**\n * \n * @param {Object} state Objecto de estado de los totens\n * @param {Object} action action Objecto para cambiar el estado de los totens\n * @returns {Object} Estado actual de los totens\n */\n\nconst totenReducer = (state = init, action) => {\n    switch (action.type) {\n        case types.getToten:\n            return {\n                ...state,\n                ...action.payload\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default totenReducer","import { types } from \"../types/types\";\n\n/**\n * @module Reducers\n */\n\nconst initialState = {\n    resources: [],\n    hours: [],\n}\n\n/**\n * \n * @param {Object} state Objecto de estado de los resources\n * @param {Object} action action Objecto para cambiar el estado de los resources\n * @returns {Object} Estado actual de los resources\n */\n\nconst trazabilidadReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.initialDataTrazabilidad:\n            return {\n                ...state,\n                ...action.payload\n            }\n        case types.changeTrazabilidadByHour:\n            return{\n                ...state,\n                resources:action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport {trazabilidadReducer}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { dateReducer } from \"./dateReducer\";\nimport { personReducer } from \"./personReducer\";\nimport  totenReducer  from \"./totenReducer\";\nimport {trazabilidadReducer} from \"./trazabilidadReducer\";\n\n\nexport const rootReducer=combineReducers({\n    auth:authReducer,\n    person:personReducer,\n    date:dateReducer,\n    toten:totenReducer,\n    trazabilidad:trazabilidadReducer\n})","import { createStore, compose, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"../reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nexport const store=createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)","import React from 'react'\nimport { AppRouter } from './routes/AppRouter'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\nimport './styles/styles.scss'\nexport const Qonteo = () => {\n    return (\n        <Provider store={store} >\n        <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Qonteo } from './Qonteo';\n\nReactDOM.render(\n    <Qonteo />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}